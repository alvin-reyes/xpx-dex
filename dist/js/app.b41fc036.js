(function (e) { function n (n) { for (var o, r, i = n[0], s = n[1], u = n[2], d = 0, f = []; d < i.length; d++)r = i[d], Object.prototype.hasOwnProperty.call(c, r) && c[r] && f.push(c[r][0]), c[r] = 0; for (o in s)Object.prototype.hasOwnProperty.call(s, o) && (e[o] = s[o]); l && l(n); while (f.length)f.shift()(); return a.push.apply(a, u || []), t() } function t () { for (var e, n = 0; n < a.length; n++) { for (var t = a[n], o = !0, r = 1; r < t.length; r++) { var i = t[r]; c[i] !== 0 && (o = !1) }o && (a.splice(n--, 1), e = s(s.s = t[0])) } return e } var o = {}; var r = { app: 0 }; var c = { app: 0 }; var a = []; function i (e) { return s.p + 'js/' + ({ Home: 'Home', AllOffer: 'AllOffer', 'CreateNewSignup.vue': 'CreateNewSignup.vue', SelectTypeSignup: 'SelectTypeSignup', newAsset: 'newAsset', newOffer: 'newOffer', searchOfferts: 'searchOfferts', deleteOffer: 'deleteOffer', WalletInfo: 'WalletInfo' }[e] || e) + '.' + { Home: 'fc016d1f', 'chunk-5466d8f6': '5f0f6a69', AllOffer: '2d1bc053', 'chunk-92d3c5fe': '44b15bb2', 'CreateNewSignup.vue': '136f5c4a', 'chunk-d919d12c': 'c3193f1b', 'chunk-48cc6628': 'f2ee728d', SelectTypeSignup: '03e22baf', newAsset: '71a7c5e6', newOffer: '240d2ba4', searchOfferts: 'f05d0b95', deleteOffer: '399957f9', WalletInfo: 'acb32af5', 'chunk-6dbc4faa': '4f5630b3', 'chunk-31e4bc3c': 'd23594f4', 'chunk-77e3eb46': 'dc76c2d5', 'chunk-7d0f5269': '6c4507e3', 'chunk-7d459f9a': '41b5be5a', 'chunk-20b8b8c1': 'c819d9c5', 'chunk-21085877': '62e1e08e', 'chunk-0d598820': 'edf46da3', 'chunk-2d0ba196': '68c2dbba', 'chunk-2d0b19e5': '376b1bd3', 'chunk-2d0b295b': '9b2abdf0', 'chunk-2d0b5e00': 'c12f2cff', 'chunk-2d0c90fc': 'f18c69c6', 'chunk-2d2161f1': 'a11d9d61', 'chunk-345f15f5': '7df233f4', 'chunk-f64b172c': '4954bfe9', 'chunk-2d0c11c6': '86d8b993', 'chunk-2d0c85b7': '22e5b321', 'chunk-2d0cffe7': '70f1e862', 'chunk-2d0db2a7': '2954be97', 'chunk-74c3efe8': 'f4582d81', 'chunk-86c94a9a': 'c10791d1', 'chunk-2d22da07': '03c0e899', 'chunk-39e1a4e6': '5151d017', 'chunk-6e369a53': 'fb650698', 'chunk-2d0e4e52': 'cd664267', 'chunk-2d0b6cca': '42785da9', 'chunk-2d0c930d': 'f8a93480', 'chunk-5607a047': '0fd335c0', 'chunk-43196873': '6be5891e', 'chunk-25563914': '24a1850a', 'chunk-4136125a': 'd47960f3', 'chunk-e2e4563c': '3f839efc', 'chunk-74f332d4': '598dd880', 'chunk-4e0b0b3a': '8139ffb3', 'chunk-17b5ca74': '0e18bd47', 'chunk-3dd0404e': 'a44f04c7', 'chunk-23527b85': 'c0e76ddf', 'chunk-2d0dda2e': 'c03855e6', 'chunk-dbf9c09c': '4adf3f93' }[e] + '.js' } function s (n) { if (o[n]) return o[n].exports; var t = o[n] = { i: n, l: !1, exports: {} }; return e[n].call(t.exports, t, t.exports, s), t.l = !0, t.exports }s.e = function (e) { var n = []; var t = { 'chunk-5466d8f6': 1, AllOffer: 1, 'chunk-92d3c5fe': 1, 'CreateNewSignup.vue': 1, 'chunk-d919d12c': 1, 'chunk-48cc6628': 1, SelectTypeSignup: 1, newAsset: 1, newOffer: 1, searchOfferts: 1, deleteOffer: 1, WalletInfo: 1, 'chunk-6dbc4faa': 1, 'chunk-77e3eb46': 1, 'chunk-7d0f5269': 1, 'chunk-7d459f9a': 1, 'chunk-20b8b8c1': 1, 'chunk-21085877': 1, 'chunk-0d598820': 1, 'chunk-86c94a9a': 1, 'chunk-39e1a4e6': 1, 'chunk-6e369a53': 1, 'chunk-5607a047': 1, 'chunk-43196873': 1, 'chunk-25563914': 1, 'chunk-74f332d4': 1, 'chunk-4e0b0b3a': 1, 'chunk-3dd0404e': 1, 'chunk-23527b85': 1, 'chunk-dbf9c09c': 1 }; r[e] ? n.push(r[e]) : r[e] !== 0 && t[e] && n.push(r[e] = new Promise(function (n, t) { for (var o = 'css/' + ({ Home: 'Home', AllOffer: 'AllOffer', 'CreateNewSignup.vue': 'CreateNewSignup.vue', SelectTypeSignup: 'SelectTypeSignup', newAsset: 'newAsset', newOffer: 'newOffer', searchOfferts: 'searchOfferts', deleteOffer: 'deleteOffer', WalletInfo: 'WalletInfo' }[e] || e) + '.' + { Home: '31d6cfe0', 'chunk-5466d8f6': '09af3917', AllOffer: 'a4bd47f1', 'chunk-92d3c5fe': 'd94cc421', 'CreateNewSignup.vue': '18890aae', 'chunk-d919d12c': '73ce23cb', 'chunk-48cc6628': '2e1853c8', SelectTypeSignup: '4ba19be6', newAsset: 'd95b792d', newOffer: 'd4d4ae1b', searchOfferts: 'f68b045b', deleteOffer: '726e0e47', WalletInfo: '133d2876', 'chunk-6dbc4faa': '420a4717', 'chunk-31e4bc3c': '31d6cfe0', 'chunk-77e3eb46': '5f56932a', 'chunk-7d0f5269': '8d5b4297', 'chunk-7d459f9a': '5f56932a', 'chunk-20b8b8c1': 'ddb05a8c', 'chunk-21085877': 'ddb05a8c', 'chunk-0d598820': 'f5f2a708', 'chunk-2d0ba196': '31d6cfe0', 'chunk-2d0b19e5': '31d6cfe0', 'chunk-2d0b295b': '31d6cfe0', 'chunk-2d0b5e00': '31d6cfe0', 'chunk-2d0c90fc': '31d6cfe0', 'chunk-2d2161f1': '31d6cfe0', 'chunk-345f15f5': '31d6cfe0', 'chunk-f64b172c': '31d6cfe0', 'chunk-2d0c11c6': '31d6cfe0', 'chunk-2d0c85b7': '31d6cfe0', 'chunk-2d0cffe7': '31d6cfe0', 'chunk-2d0db2a7': '31d6cfe0', 'chunk-74c3efe8': '31d6cfe0', 'chunk-86c94a9a': '4b105d19', 'chunk-2d22da07': '31d6cfe0', 'chunk-39e1a4e6': '5f56932a', 'chunk-6e369a53': '5f56932a', 'chunk-2d0e4e52': '31d6cfe0', 'chunk-2d0b6cca': '31d6cfe0', 'chunk-2d0c930d': '31d6cfe0', 'chunk-5607a047': 'fd2c63c1', 'chunk-43196873': 'f4f2c1ce', 'chunk-25563914': 'e3ddfbe3', 'chunk-4136125a': '31d6cfe0', 'chunk-e2e4563c': '31d6cfe0', 'chunk-74f332d4': '6e205a68', 'chunk-4e0b0b3a': 'd24134a6', 'chunk-17b5ca74': '31d6cfe0', 'chunk-3dd0404e': 'fd2c63c1', 'chunk-23527b85': '8d3b0eb1', 'chunk-2d0dda2e': '31d6cfe0', 'chunk-dbf9c09c': '827795a3' }[e] + '.css', c = s.p + o, a = document.getElementsByTagName('link'), i = 0; i < a.length; i++) { var u = a[i]; var d = u.getAttribute('data-href') || u.getAttribute('href'); if (u.rel === 'stylesheet' && (d === o || d === c)) return n() } var f = document.getElementsByTagName('style'); for (i = 0; i < f.length; i++) { u = f[i], d = u.getAttribute('data-href'); if (d === o || d === c) return n() } var l = document.createElement('link'); l.rel = 'stylesheet', l.type = 'text/css', l.onload = n, l.onerror = function (n) { var o = n && n.target && n.target.src || c; var a = new Error('Loading CSS chunk ' + e + ' failed.\n(' + o + ')'); a.code = 'CSS_CHUNK_LOAD_FAILED', a.request = o, delete r[e], l.parentNode.removeChild(l), t(a) }, l.href = c; var m = document.getElementsByTagName('head')[0]; m.appendChild(l) }).then(function () { r[e] = 0 })); var o = c[e]; if (o !== 0) if (o)n.push(o[2]); else { var a = new Promise(function (n, t) { o = c[e] = [n, t] }); n.push(o[2] = a); var u; var d = document.createElement('script'); d.charset = 'utf-8', d.timeout = 120, s.nc && d.setAttribute('nonce', s.nc), d.src = i(e); var f = new Error(); u = function (n) { d.onerror = d.onload = null, clearTimeout(l); var t = c[e]; if (t !== 0) { if (t) { var o = n && (n.type === 'load' ? 'missing' : n.type); var r = n && n.target && n.target.src; f.message = 'Loading chunk ' + e + ' failed.\n(' + o + ': ' + r + ')', f.name = 'ChunkLoadError', f.type = o, f.request = r, t[1](f) }c[e] = void 0 } }; var l = setTimeout(function () { u({ type: 'timeout', target: d }) }, 12e4); d.onerror = d.onload = u, document.head.appendChild(d) } return Promise.all(n) }, s.m = e, s.c = o, s.d = function (e, n, t) { s.o(e, n) || Object.defineProperty(e, n, { enumerable: !0, get: t }) }, s.r = function (e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }) }, s.t = function (e, n) { if (1 & n && (e = s(e)), 8 & n) return e; if (4 & n && typeof e === 'object' && e && e.__esModule) return e; var t = Object.create(null); if (s.r(t), Object.defineProperty(t, 'default', { enumerable: !0, value: e }), 2 & n && typeof e !== 'string') for (var o in e)s.d(t, o, function (n) { return e[n] }.bind(null, o)); return t }, s.n = function (e) { var n = e && e.__esModule ? function () { return e['default'] } : function () { return e }; return s.d(n, 'a', n), n }, s.o = function (e, n) { return Object.prototype.hasOwnProperty.call(e, n) }, s.p = '/', s.oe = function (e) { throw console.error(e), e }; var u = window['webpackJsonp'] = window['webpackJsonp'] || []; var d = u.push.bind(u); u.push = n, u = u.slice(); for (var f = 0; f < u.length; f++)n(u[f]); var l = d; a.push([0, 'chunk-vendors']), t() })({ 0: function (e, n, t) { e.exports = t('56d7') }, '09f9': function (e, n, t) { 'use strict'; n['a'] = { ws: { aggregateBondedAdded: 'Transaction Aggregate Bonded Added', aggregateBondedRemoved: 'Transaction Aggregate Bonded Removed', cosignatureAdded: 'Cosignature Added', confirmed: 'Transaction confirmed', unconfirmed: 'Please wait a moment while the transaction is confirmed', unconfirmedRemoved: 'Transaction unconfirmed removed' }, login: { success: { welcomeToProxiEDI: 'Bienvenido al sistema ProxiEDI' }, error: { invalidUserOrPassword: 'La combinación de correo electrónico y contraseña no es válida' } }, accountActivation: { success: { accountSent: 'Solicitud enviada. Cuenta pendiente por activación.' }, error: { accountSent: 'Error al activar la cuenta' } }, general: { success: { copy: 'Copiado' }, error: { copy: 'Error al copiar' } }, nodes: { success: { statusNode: { online: 'Online', offline: 'Offline', connecting: 'Connecting...' } }, error: { stuck: 'El nodo está estancado', sync: 'El nodo se está sincronizando', off: 'Se ha cerrado la conexión de nodos', valid: 'El nodo no es valido', exist: 'El nodo ya esta en la lista' } }, company: { success: { activate: 'Compañia activada con exito...', deleted: 'Compañia eliminada con exito...', edited: 'Compañia editada con exito...' }, error: { activate: 'Error al intentar activar la compañia', deleted: 'Error al intentar eliminar la compañia', edited: 'Error al intentar editar la compañia' } }, users: { success: { create: 'Usuario creado con exito !!!', update: 'Usuario editado con exito !!!', delete: 'Usuario eliminado con exito !!!' }, error: { create: 'Ocurrio un error al intentar crear el usuario', update: 'Ocurrio un error al intentar editar el usuario', delete: 'Ocurrio un error al intentar eliminar el usuario' } } } }, 1: function (e, n) {}, 10: function (e, n) {}, 11: function (e, n) {}, 12: function (e, n) {}, 13: function (e, n) {}, 14: function (e, n) {}, 15: function (e, n) {}, 16: function (e, n) {}, 17: function (e, n) {}, 18: function (e, n) {}, 19: function (e, n) {}, '1ca7': function (e, n, t) { 'use strict'; t('99af'), t('4160'), t('a9e3'), t('d3b7'), t('159b'); var o = t('970b'); var r = t('5bc3'); var c = t('ed6d'); var a = t('2d0d'); Object.defineProperty(n, '__esModule', { value: !0 }), n.WebsocketConnection = n.TypeStatusNode = void 0; var i; var s = t('a5c3'); var u = t('58d5'); var d = t('3697'); var f = t('c288'); (function (e) { e[e['NODE_OFF'] = 0] = 'NODE_OFF', e[e['NODE_CONNECTING'] = 1] = 'NODE_CONNECTING', e[e['NODE_ACTIVE'] = 2] = 'NODE_ACTIVE', e[e['NODE_STUCK'] = 3] = 'NODE_STUCK', e[e['NODE_SYNCHRONIZING'] = 4] = 'NODE_SYNCHRONIZING' })(i = n.TypeStatusNode || (n.TypeStatusNode = {})); var l = (function (e) { c(t, e); var n = a(t); function t () { var e; return o(this, t), e = n.apply(this, arguments), e._statusNode = new s.BehaviorSubject(i.NODE_OFF), e._statusNode$ = e._statusNode.asObservable(), e._newBlock = new s.BehaviorSubject(null), e._newBlock$ = e._newBlock.asObservable(), e._confirmed = new s.BehaviorSubject(null), e._confirmed$ = e._confirmed.asObservable(), e._unconfirmedAdded = new s.BehaviorSubject(null), e._unconfirmedAdded$ = e._unconfirmedAdded.asObservable(), e._unconfirmedRemoved = new s.BehaviorSubject(null), e._unconfirmedRemoved$ = e._unconfirmedRemoved.asObservable(), e._aggregateBondedAdded = new s.BehaviorSubject(null), e._aggregateBondedAdded$ = e._aggregateBondedAdded.asObservable(), e._aggregateBondedRemoved = new s.BehaviorSubject(null), e._aggregateBondedRemoved$ = e._aggregateBondedRemoved.asObservable(), e._status = new s.BehaviorSubject(null), e._status$ = e._status.asObservable(), e._cosignatureAdded = new s.BehaviorSubject(null), e._cosignatureAdded$ = e._cosignatureAdded.asObservable(), e.cacheBlock = 1, e.checking = !1, e.connector = null, e } return r(t, [{ key: 'checkActiveConnector', value: function (e) { var n = this; this.clearTimeOutTime(), this.timeOut = setTimeout(function () { d.Utilities.logs('The connection node is stuck..'), t.nodesConfig.reconnect ? (console.log('INIT RECONNECT NODE'), n.clearTimeOutTime(), n.closeConnectionWs()) : t.nodesConfig.closeConnection ? (n._statusNode.next(i.NODE_STUCK), n.clearTimeOutTime(), n.closeConnectionWs()) : (alert('The connection node is stuck in checkActiveConnector..'), n.clearTimeOutTime()) }, 1e3 * Number(t.nodesConfig.timeOutNewBlocks)), this.connector && !this.checking && (this.checking = !0, setTimeout(function () { n.checking = !1, n.cacheBlock > 1 && e > n.cacheBlock + 4 ? (d.Utilities.logs('The node is synchronizing'), t.nodesConfig.closeConnection ? (n._statusNode.next(i.NODE_STUCK), n.clearTimeOutTime(), n.closeConnectionWs()) : (n.cacheBlock = e, alert('The node is synchronizing.'), n.clearTimeOutTime())) : n.cacheBlock = e }, 1e3 * Number(t.nodesConfig.timeValidateSynchronization))) } }, { key: 'clearTimeOutTime', value: function () { this.timeOut && (clearTimeout(this.timeOut), this.timeOut = null) } }, { key: 'openConnection', value: function () { var e = this; return console.log('OPPENING CONNECTION'), new Promise(function (n, t) { e.cacheBlock = 1, e.checking = !1, e.connector !== null && void 0 !== e.connector ? e.connector.open().then(function () { e._statusNode.next(i.NODE_ACTIVE); try { e.checkActiveConnector(1) } catch (t) { d.Utilities.logs('newwww error', t) }e.monitorBlocks(), n(!0) }).catch(function (n) { d.Utilities.logs('----\x3e Error to open connection', n), e._statusNode.next(i.NODE_OFF), t('Error connecting to the node') }) : n(!0) }) } }, { key: 'monitorBlocks', value: function () { var e = this; this.connector.newBlock().subscribe(function (n) { e.height = n.height, e._newBlock.next(n); try { e.checkActiveConnector(n.height.compact()) } catch (t) { d.Utilities.logs('newwww error', t) }d.Utilities.logs('-----------------------BLOCKS--------------------------'), d.Utilities.logs(n.height.compact()), d.Utilities.logs('-------------------------------------------------------\n\n') }) } }, { key: 'buildURL', value: function (e) { var n = d.Utilities.splitURL(e); switch (n.protocol) { case 'http':return 'ws://'.concat(n.domainIp, ':').concat(n.port); default:return 'wss://'.concat(n.domainIp, ':').concat(n.port) } } }, { key: 'connect', value: function () { var e = this; var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; return new Promise(function (t, o) { e.currentNode && e.currentNode !== '' || o('Invalid node'), e.closeConnectionWs(); var r = e.buildURL(e.currentNode); d.Utilities.logs('Connecting websocket...', r), e._statusNode.next(i.NODE_CONNECTING), e.connector = n ? new u.Listener(r, WebSocket) : new u.Listener(r), e.openConnection().then(function (e) { return t(e) }).catch(function (e) { return o(e) }) }) } }, { key: 'closeConnectionWs', value: function () { this.checkIsOpenConnection() && (this.connector.close(), this.connector.terminate(), this.connector = null, this._aggregateBondedAdded.next(null), this._aggregateBondedRemoved.next(null), this._cosignatureAdded.next(null), this._confirmed.next(null), this._unconfirmedAdded.next(null), this._unconfirmedRemoved.next(null), this._status.next(null), this.clearTimeOutTime(), t.nodesConfig.reconnect ? (console.log('CURRENT NODEEEE ----\x3e', this.currentNode), this.connect()) : this._statusNode.getValue() !== i.NODE_OFF && this._statusNode.next(i.NODE_OFF), d.Utilities.logs('connection closed!')) } }, { key: 'checkIsOpenConnection', value: function () { return !(this.connector === null || void 0 === this.connector || !this.connector.isOpen) } }, { key: 'monitorAllChannels', value: function (e) { this.checkIsOpenConnection() && (this.monitorAggregateBondedAdded(e), this.monitorAggregateBondedRemoved(e), this.monitorCosignatureAdded(e), this.monitorConfirmed(e), this.monitorUnconfirmedAdded(e), this.monitorUnconfirmedRemoved(e), this.monitorStatus(e)) } }, { key: 'monitorAggregateBondedAdded', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.aggregateBondedAdded(e).subscribe(function (e) { n._aggregateBondedAdded.next(e), d.Utilities.logs('-----------------------AGGREGATE_BONDED_ADDED--------------------------'), d.Utilities.logs(e.transactionInfo.hash), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'monitorAggregateBondedRemoved', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.aggregateBondedRemoved(e).subscribe(function (e) { n._aggregateBondedRemoved.next(e), d.Utilities.logs('-----------------------AGGREGATE_BONDED_REMOVED--------------------------'), d.Utilities.logs(e), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'monitorCosignatureAdded', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.cosignatureAdded(e).subscribe(function (e) { n._cosignatureAdded.next(e), d.Utilities.logs('-----------------------COSIGNATURE_ADDED--------------------------'), d.Utilities.logs(e.parentHash), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'monitorConfirmed', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.confirmed(e).subscribe(function (e) { d.Utilities.logs('-----------------------CONFIRMED--------------------------'), d.Utilities.logs(e.transactionInfo.hash), d.Utilities.logs('------------------------------------------------------------------\n\n'), n._confirmed.next(e) }) }) } }, { key: 'monitorUnconfirmedAdded', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.unconfirmedAdded(e).subscribe(function (e) { n._unconfirmedAdded.next(e), d.Utilities.logs('-----------------------UNCONFIRMED_ADDED--------------------------'), d.Utilities.logs(e.transactionInfo.hash), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'monitorUnconfirmedRemoved', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.unconfirmedRemoved(e).subscribe(function (e) { n._unconfirmedRemoved.next(e), d.Utilities.logs('-----------------------UNCONFIRMED_REMOVED--------------------------'), d.Utilities.logs(e), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'monitorStatus', value: function (e) { var n = this; this.checkIsOpenConnection() && e.forEach(function (e) { n.connector.status(e).subscribe(function (e) { n._status.next(e), d.Utilities.logs('-----------------------STATUS--------------------------'), d.Utilities.logs(e.hash), d.Utilities.logs('------------------------------------------------------------------\n\n') }) }) } }, { key: 'aggregateBondedAdded', get: function () { return this._aggregateBondedAdded$ } }, { key: 'aggregateBondedRemoved', get: function () { return this._aggregateBondedRemoved$ } }, { key: 'cosignatureAdded', get: function () { return this._cosignatureAdded$ } }, { key: 'confirmed', get: function () { return this._confirmed$ } }, { key: 'newBlock', get: function () { return this._newBlock$ } }, { key: 'status', get: function () { return this._status$ } }, { key: 'statusNode', get: function () { return this._statusNode$ } }, { key: 'unconfirmedAdded', get: function () { return this._unconfirmedAdded$ } }, { key: 'unconfirmedRemoved', get: function () { return this._unconfirmedRemoved$ } }]), t }(f.Connection)); n.WebsocketConnection = l, l.nodesConfig = { reconnect: !1, closeConnection: !0, timeOutConnection: '', connectToWebsocket: !0, timeOutNewBlocks: 130, timeValidateSynchronization: 80 } }, 2: function (e, n) {}, 20: function (e, n) {}, 3: function (e, n) {}, 3697: function (e, n, t) { 'use strict'; t('99af'), t('4d63'), t('ac1f'), t('25f0'), t('1276'); var o = t('970b'); var r = t('5bc3'); Object.defineProperty(n, '__esModule', { value: !0 }), n.Utilities = void 0; var c = (function () { function e () { o(this, e) } return r(e, null, [{ key: 'logs', value: function (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ''; this.showLogs && (n ? console.log(e, n) : console.log(e)) } }, { key: 'buildNodeURL', value: function (e) { try { var n = this.validateURL(e); return ''.concat(n.protocol, '://').concat(n.domainIp, ':').concat(n.port) } catch (t) { return t } } }, { key: 'splitURL', value: function (e) { var n = ''; var t = e.split('://'); var o = t.length > 1 ? t[0] : 'http'; var r = t.length > 1 ? t[1] : t[0]; var c = r.split(':'); var a = c[0]; return n = c.length > 1 ? c[1] : o === 'http' ? '3000' : '443', { protocol: o, domainIp: a, port: n } } }, { key: 'validateURL', value: function (e) { var n = this.splitURL(e); var t = new RegExp('^(https?)$'); if (!t.test(n.protocol)) throw 'Invalid Protocol'; var o = '^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:.[a-zA-Z]{2,})+$'; var r = new RegExp(o); var c = '((?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4})'; var a = new RegExp(c); var i = a.test(n.domainIp); var s = r.test(n.domainIp); if (!s && !i) throw 'Ip or invalid domain name'; var u = new RegExp('^(\\:(?!0)\\d{2,5}$)'); if (!u.test(':'.concat(n.port))) throw 'Invalid port'; return n } }]), e }()); n.Utilities = c, c.showLogs = !0 }, 4: function (e, n) {}, 4360: function (e, n, t) { 'use strict'; var o = t('2b0e'); var r = t('2f62'); var c = (t('7db0'), t('4160'), t('b0c0'), t('159b'), t('b85c')); var a = { namespaced: !0, state: { accountsInfo: null, currentAccount: null, balanceCurrentAccount: null, totalBalance: null, dataUser: null, isLogged: !1, mosaicBuild: [] }, getters: { accountsInfo: function (e) { return e.accountsInfo }, mosaicBuild: function (e) { return e.mosaicBuild }, accountInfoByNameAccount: function (e) { return function (n) { return e.accountsInfo && e.accountsInfo.length > 0 ? e.accountsInfo.find(function (e) { return e.name === n }) : null } }, accountInfoByAdress: function (e) { return function (n) { if (e.accountsInfo && e.accountsInfo.length > 0 && n) { var t = null; return e.accountsInfo.forEach(function (e) { e.accountInfo && e.accountInfo.address.pretty() === n && (t = e) }), t } } }, userData: function (e) { return e.dataUser }, isLogged: function (e) { return e.isLogged }, currentAccount: function (e) { return e.currentAccount }, balanceCurrentAccount: function (e) { return e.balanceCurrentAccount }, balanceAccount: function (e) { return e.balanceAccount }, totalBalance: function (e) { return function (n) { var t = 0; if (e.accountsInfo && e.accountsInfo.length > 0) { var o; var r = Object(c['a'])(e.accountsInfo); try { for (r.s(); !(o = r.n()).done;) { var a = o.value; if (a && a.accountInfo && a.accountInfo.mosaics && a.accountInfo.mosaics.length > 0) { var i = a.accountInfo.mosaics.find(function (e) { return e.id.toHex() === n }); i && (t += i.amount.compact()) } } } catch (s) { r.e(s) } finally { r.f() } } return t } }, address: function (e) { return e.dataUser.simpleWallet.address['address'] } }, mutations: { LOGIN: function (e, n) { n && n.username && n.accounts ? e.isLogged = !0 : e.isLogged = !1, e.dataUser = n }, SET_INFO_ACCOUNT: function (e, n) { e.accountsInfo = n }, SET_BALANCE_CURRENT_ACCOUNT: function (e, n) { e.balanceCurrentAccount = n }, SET_CURRENT_ACCOUNT: function (e, n) { e.currentAccount = n }, SET_TOTAL_BALANCE: function (e, n) { e.totalBalance = n }, UPDATE_DATA_USER: function (e, n) { e.dataUser = n }, CHANGE_NAME_USER: function (e, n) { e.dataUser.name = n }, SET_BUILD_CURRENT_ACCOUNT_MOSAIC: function (e, n) { e.mosaicBuild = n } }, actions: { LOGOUT: function (e, n) { var t = e.commit; t('LOGIN', null) } } }; var i = { namespaced: !0, state: { currentWallet: null }, getters: { currentWallet: function (e) { return e.currentWallet }, nameCurrentWallet: function (e) { return e.currentWallet.username } }, mutations: { SET_CURRENT_WALLET: function (e, n) { e.currentWallet = n }, SET_NAME_CURRENT_WALLET: function (e, n) { e.currentWallet.username = n } } }; var s = { namespaced: !0, state: { drawer: null, color: null, image: 'https://demos.creative-tim.com/vue-material-dashboard/img/sidebar-2.32103624.jpg' }, getters: { drawer: function (e) { return e.drawer }, color: function (e) { return e.color } }, mutations: { SET_DRAWER: function (e, n) { e.drawer = n }, SET_COLOR: function (e, n) { e.color = n } } }; var u = (t('4de4'), { namespaced: !0, state: { loading: !0, namespaces: [{ id: null, idToHex: null, namespaceInfo: null, namespaceName: null }] }, getters: { loading: function (e) { return e.loading }, namespaces: function (e) { return e.namespaces }, namespacesFromAddress: function (e) { return function (n) { return e.namespaces.sort(function (e, n) { if (e.namespaceInfo && n.namespaceInfo) return e.namespaceName.name > n.namespaceName.name ? 1 : n.namespaceName.name > e.namespaceName.name ? -1 : 0 }).filter(function (e) { if (e.namespaceInfo) return e.namespaceInfo.owner.address['address'] === n }) } } }, mutations: { LOADING: function (e, n) { e.loading = n }, SET_NAMESPACES: function (e, n) { e.namespaces = n, e.loading = !1 } } }); var d = (t('a4d3'), t('e01a'), t('96cf'), t('1da1')); var f = t('89ef'); var l = { namespaced: !0, state: { mosaics: [], metadata: null, iconMosaic: [], mosaicDescription: [] }, mutations: { SET_MOSAICS: function (e, n) { e.mosaics = n }, SET_MOSAIC_ICON: function (e, n) { e.iconMosaic = n }, PUSH_MOSAIC_ICON: function (e, n) { if (e.iconMosaic.length > 0) { var t = e.iconMosaic.find(function (e) { return e.mosaicId.toHex() === n.mosaicId.toHex() }); if (t) { for (var o in e.iconMosaic) if (e.iconMosaic[o].mosaicId.toHex() === n.mosaicId.toHex()) { e.iconMosaic[o].iconBase64 = n.iconBase64; break } } else e.iconMosaic.push(n) } else e.iconMosaic.push(n) }, PUSH_MOSAICS_DESCRIPTION: function (e, n) { if (e.mosaicDescription.length > 0) { var t = e.mosaicDescription.find(function (e) { return e.mosaicId.toHex() === n.mosaicId.toHex() }); if (t) { for (var o in e.mosaicDescription) if (e.mosaicDescription[o].mosaicId.toHex() === n.mosaicId.toHex()) { e.mosaicDescription[o].description = n.description; break } } else e.mosaicDescription.push(n) } else e.mosaicDescription.push(n) }, SET_METADATA: function (e, n) { e.metadata = n } }, getters: { mosaics: function (e) { return e.mosaics }, iconMosaic: function (e) { return e.iconMosaic }, mosaicDescription: function (e) { return e.mosaicDescription }, othersMosaics: function (e) { return function (n) { var t = []; return e.mosaics && e.mosaics.length > 0 && (t = e.mosaics.filter(function (e) { return e.mosaicInfo.mosaicId.toHex() !== n })), t } } }, actions: { GET_MOSAICS_METADATA: function (e, n) { var t = this; var o = e.commit; var r = e.dispatch; Object(d['a'])(regeneratorRuntime.mark(function e () { var a, i, s, u; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:a = Object(c['a'])(n), e.prev = 1, a.s(); case 3:if ((i = a.n()).done) { e.next = 18; break } return s = i.value, e.prev = 5, e.next = 8, t._vm.$blockchainProvider.getMosaicMetadata(s).toPromise(); case 8:u = e.sent, o('SET_METADATA', u), r('GET_MOSAICS_ICON', u), r('GET_MOSAICS_DESCRIPTION', u), e.next = 16; break; case 14:e.prev = 14, e.t0 = e['catch'](5); case 16:e.next = 3; break; case 18:e.next = 23; break; case 20:e.prev = 20, e.t1 = e['catch'](1), a.e(e.t1); case 23:return e.prev = 23, a.f(), e.finish(23); case 26:case 'end':return e.stop() } }, e, null, [[1, 20, 23, 26], [5, 14]]) }))() }, GET_MOSAICS_ICON: function (e, n) { var t = this; return Object(d['a'])(regeneratorRuntime.mark(function o () { var r, c, a; return regeneratorRuntime.wrap(function (o) { while (1) switch (o.prev = o.next) { case 0:if (r = e.commit, c = n.fields.find(function (e) { return e.key === 'icon' }), !c) { o.next = 8; break } if (c.value.length !== 64) { o.next = 8; break } return o.next = 6, t._vm.$blockchainProvider.getTransactionId(c.value).toPromise(); case 6:a = o.sent, a.type === t._vm.$blockchainProvider.typeTransactions().aggregateComplete.id && r('PUSH_MOSAIC_ICON', { iconBase64: Object(f['c'])(a), mosaicId: n.metadataId }); case 8:case 'end':return o.stop() } }, o) }))() }, GET_MOSAICS_DESCRIPTION: function (e, n) { return Object(d['a'])(regeneratorRuntime.mark(function t () { var o, r; return regeneratorRuntime.wrap(function (t) { while (1) switch (t.prev = t.next) { case 0:o = e.commit, r = n.fields.find(function (e) { return e.key === 'desc' }), r && o('PUSH_MOSAICS_DESCRIPTION', { description: r.value, mosaicId: n.metadataId }); case 3:case 'end':return t.stop() } }, t) }))() } } }; var m = t('439d'); var h = t('a4b7'); var p = { namespaced: !0, state: { offersTx: [], newOffersTx: null, mosaicsInfOffer: [], loadingInfo: !1, inserted: null, unchanged: null }, mutations: { SOCKET_SET_OFFERS: function (e, n) { e.offersTx = n }, SOCKET_SET_NEW_OFFERS: function (e, n) { e.newOffersTx = n, e.offersTx.push(n) }, SOCKET_SET_MOSAIC_INFO: function (e, n) { A.dispatch('socketDbStore/GET_MOSAICS_INFO', n) }, EVENT_SET_MOSAIC_INFO: function (e, n) { e.mosaicsInfOffer = n }, EVENT_PUSH_MOSAIC_INFO: function (e, n) { e.mosaicsInfOffer.push(n) }, EVENT_LOADING_MOSAIC_INFO: function (e, n) { e.loadingInfo = n }, EVENT_INSERTED: function (e, n) { e.inserted = n }, EVENT_UNCHANGED: function (e, n) { e.unchanged = n }, SOCKET_RETURN_INSERT_OFFERT: function (e, n) {}, SOCKET_RETURN_INSERT_EXECUTE_OFFERS: function (e, n) {}, SOCKET_RETURN_GET_OFFERT_TX_ID_HEX: function (e, n) { Object(h['d'])(n), Object(h['c'])(n) }, SOCKET_RETURN_INSERT_MOSAIC_INFO: function (e, n) { e.unchanged = null, e.inserted = null; var t = n.dataDb; if (console.log('SOCKET_RETURN_INSERT_MOSAIC_INFO', n), t['inserted'] > 0) for (var o = 0; o < t['inserted']; o++) { var r = t['changes'][o]; r['new_val'] && (console.log('UPDATE inserted', r['new_val']), Object(h['e'])(r['new_val'])) } else t['changes'].length > 0 && (console.log('changes udapte', n.dataOffer), Object(h['e'])(n.dataOffer)) } }, getters: { inserted: function (e) { return e.inserted }, unchanged: function (e) { return e.unchanged }, offersTx: function (e) { return e.offersTx }, newOffersTx: function (e) { return e.newOffersTx }, offers: function (e) { var n = []; if (e.offersTx) { var t; var o = Object(c['a'])(e.offersTx); try { for (o.s(); !(t = o.n()).done;) { var r = t.value; n.push({ offer: r.offers }) } } catch (a) { o.e(a) } finally { o.f() } } return n }, mosaicsInfOffer: function (e) { return e.mosaicsInfOffer }, mosaicsInfOfferFromIdHex: function (e) { return function (n) { return e.mosaicsInfOffer.filter(function (e) { return e.mosaicIdHex === n }) } }, loadingInfo: function (e) { return e.loadingInfo } }, actions: { UPDATE_MOSAICS_INFO: function (e, n) { e.commit; var t = e.dispatch; var o = e.state; Object(d['a'])(regeneratorRuntime.mark(function e () { var r; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:r = o.mosaicsInfOffer.find(function (e) { return e.mosaicIdHex === n.mosaicIdHex }), r ? (console.log('GET_EXCHANGE_OFFER 1'), t('offersStore/GET_EXCHANGE_OFFER', r, { root: !0 })) : t('GET_MOSAICS_INFO', [n]); case 2:case 'end':return e.stop() } }, e) }))() }, GET_MOSAICS_INFO: function (e, n) { var t = this; var o = e.commit; var r = e.dispatch; Object(d['a'])(regeneratorRuntime.mark(function e () { var a, i, s, u, d; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (!(n.length > 0)) { e.next = 30; break }a = Object(c['a'])(n), e.prev = 2, a.s(); case 4:if ((i = a.n()).done) { e.next = 20; break } if (s = i.value, o('EVENT_LOADING_MOSAIC_INFO', !0), void 0 !== s.mosaicInfo) { e.next = 18; break } return e.prev = 8, u = t._vm.$blockchainProvider.getMosaicId(s.mosaicIdHex), e.next = 12, Object(m['h'])([u], !0); case 12:d = e.sent, r('SET_MOSAICS_INFO_FOR_OFFER', d), e.next = 18; break; case 16:e.prev = 16, e.t0 = e['catch'](8); case 18:e.next = 4; break; case 20:e.next = 25; break; case 22:e.prev = 22, e.t1 = e['catch'](2), a.e(e.t1); case 25:return e.prev = 25, a.f(), e.finish(25); case 28:e.next = 31; break; case 30:o('EVENT_LOADING_MOSAIC_INFO', !1); case 31:case 'end':return e.stop() } }, e, null, [[2, 22, 25, 28], [8, 16]]) }))() }, SET_MOSAICS_INFO_FOR_OFFER: function (e, n) { e.commit; var t = e.dispatch; var o = e.state; var r = this._vm.$blockchainProvider.getMosaicId(n[0].idMosaic).toHex(); var c = o.mosaicsInfOffer.find(function (e) { return e.mosaicIdHex === r }); if (c) { for (var a in o.mosaicsInfOffer) if (o.mosaicsInfOffer[a].mosaicIdHex === r) { o.mosaicsInfOffer[a].mosaicInfo = n, console.log('GET_EXCHANGE_OFFER 2'), t('offersStore/GET_EXCHANGE_OFFER', o.mosaicsInfOffer[a], { root: !0 }); break }o.loadingInfo = !1, o.mosaicsInfOffer = JSON.parse(JSON.stringify(o.mosaicsInfOffer)) } else { o.loadingInfo = !1; var i = { mosaicIdHex: r, mosaicInfo: n }; console.log('GET_EXCHANGE_OFFER 3'), t('offersStore/GET_EXCHANGE_OFFER', i, { root: !0 }), o.mosaicsInfOffer.push(i) } }, getOffertsTx: function (e, n) { e.commit, e.state; n.io.emit('getOffertsTx', n.data) }, getMoisaicsInfo: function (e, n) { var t = e.commit; e.state; t('EVENT_LOADING_MOSAIC_INFO', !0), n.io.emit('getMoisaicsInfo', n.data) }, getOffertTxFromIdHexMosaic: function (e, n) { e.commit, e.state; n.io.emit('getOffertTxFromIdHexMosaic', n.data) }, insertNewOffers: function (e, n) { e.commit, e.state; n.io.emit('insertNewOffers', n.data) }, insertExecuteOffers: function (e, n) { e.commit, e.state; n.io.emit('insertExecuteOffers', n.data) }, insertMoisaicsInfo: function (e, n) { e.commit, e.state; n.io.emit('insertMoisaicsInfo', n.data) }, setMoisaicUnchanged: function (e, n) { var t = e.commit; e.state; t('EVENT_SET_MOSAIC_INFO', n) }, pushMosaicInfoOffer: function (e, n) { var t = e.commit; e.state; return t('EVENT_PUSH_MOSAIC_INFO', n) } } }; var g = { namespaced: !0, state: { exchange: null, dataAssets: null, exchangeDelete: null, expire: 0 }, getters: { exchange: function (e) { return e.exchange }, dataAssets: function (e) { return e.dataAssets }, exchangeDelete: function (e) { return e.exchangeDelete }, expire: function (e) { return e.expire } }, mutations: { SET_EXCHANGE: function (e, n) { e.exchange = n }, SET_EXCHANGE_DELETE: function (e, n) { e.exchangeDelete = n }, SET_DATA_ASSETS: function (e, n) { e.dataAssets = n }, SET_EXPIRE: function (e, n) { e.expire = n } } }; var v = { namespaced: !0, state: { statusTx: { type: null, hash: null } }, mutations: { SET_STATUS_TX: function (e, n) { e.statusTx = n } }, getters: { statusTx: function (e) { return e.statusTx }, statusTxFormHash: function (e) { return function (n) { return e.statusTx.filter(function (e) { return e.hash === n }) } } } }; var b = (t('a434'), { namespaced: !0, state: { offerSelected: [], offerAll: [], type: ['buy', 'sell'], allOfferGet: [], updateBoolean: !1 }, getters: { offerSelected: function (e) { return e.offerSelected }, offerAll: function (e) { return e.offerAll }, offersForPublicKey: function (e) { return e.offersForPublicKey }, type: function (e) { return e.type }, updateBoolean: function (e) { return e.updateBoolean } }, mutations: { SET_OFFER_SELECTED: function (e, n) { e.offerSelected = n }, UPDATE_OFFER_BOOLEAN: function (e) { e.updateBoolean = !e.updateBoolean }, SET_OFFER_ALL: function (e, n) { e.offerAll = n }, PUSH_OFFER_ALL: function (e, n) { e.offerAll.push(n) }, UPDATE_OFFER_ALL: function (e, n) { for (var t = 0; t < e.offerAll.length; t++) if (e.offerAll[t].tableData.info.mosaicIdHex === n.tableData.info.mosaicIdHex) { e.offerAll[t].allOffers = n.allOffers, e.offerAll[t].tableData = n.tableData; break } }, UPDATE_OFFER_GRAPHIC_CHANGE: function (e, n) { if (n.mosaicIdHex) for (var t = 0; t < e.offerAll.length; t++) if (e.offerAll[t].tableData.info.mosaicIdHex === n.mosaicIdHex) { e.offerAll[t].tableData.graphic = n.valueGraphic; break } }, UPDATE_OFFER_TWENTY_FOUR_CHANGE: function (e, n) { if (n.mosaicIdHex) for (var t = 0; t < e.offerAll.length; t++) if (e.offerAll[t].tableData.info.mosaicIdHex === n.mosaicIdHex) { e.offerAll[t].tableData.twentyFourChange = n; break } }, DELETE_OFFER_ALL: function (e, n) { for (var t = 0; t < e.offerAll.length; t++) if (e.offerAll[t].tableData.info.mosaicIdHex === n) { e.offerAll.splice(t, 1); break } } }, actions: { GET_EXCHANGE_OFFER: function (e, n) { var t = this; var o = e.commit; e.dispatch; Object(d['a'])(regeneratorRuntime.mark(function e () { var r, c, a, i, s; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return r = Object(h['a'])(n), e.next = 3, t._vm.$blockchainProvider.getExchangeOffersfromId(r.mosaicIdHex, 0).toPromise(); case 3:return c = e.sent, e.next = 6, t._vm.$blockchainProvider.getExchangeOffersfromId(r.mosaicIdHex, 1).toPromise(); case 6:a = e.sent, i = { type: 'buy', data: c }, s = { type: 'sell', data: a }, s.data.length > 0 || i.data.length > 0 ? Object(h['b'])({ items: { itemBuy: i, itemSell: s }, info: n }) : o('DELETE_OFFER_ALL', r.mosaicIdHex); case 10:case 'end':return e.stop() } }, e) }))() } } }); var k = { namespaced: !0, state: { aggregateBondedAdded: [], aggregateBondedRemoved: [], blockInfo: [], cosignatureAdded: [], confirmed: [], unconfirmedAdded: [], unconfirmedRemoved: [], status: [], monitorHashs: [] }, getters: { aggregateBondedAdded: function (e) { return e.aggregateBondedAdded }, aggregateBondedRemoved: function (e) { return e.aggregateBondedRemoved }, blockInfo: function (e) { return function (n) { return e.blockInfo.find(function (e) { return e.height.compact() === n }) } }, cosignatureAdded: function (e) { return e.cosignatureAdded }, confirmed: function (e) { return e.confirmed }, unconfirmedAdded: function (e) { return e.unconfirmedAdded }, unconfirmedRemoved: function (e) { return e.unconfirmedRemoved }, status: function (e) { return e.status }, filterHash: function (e) { return function (n) { return n.filter(function (n) { return e.monitorHashs.filter(function (e) { return e.hash === n.transactionInfo.hash }) }) } }, getMonitorHashs: function (e) { return e.monitorHashs } }, mutations: { SET_AGGREGATE_BONDED_ADDED: function (e, n) { if (!e.aggregateBondedAdded.find(function (e) { return n.transactionInfo.hash === e.transactionInfo.hash })) { var t = e.aggregateBondedAdded; t.unshift(n), e.aggregateBondedAdded = t } }, SET_AGGREGATE_BONDED_REMOVED: function (e, n) { if (!e.aggregateBondedRemoved.find(function (e) { return n.transactionInfo.hash === e.transactionInfo.hash })) { var t = e.aggregateBondedRemoved; t.unshift(n), e.aggregateBondedRemoved = t } }, SET_BLOCK_INFO: function (e, n) { if (!e.blockInfo.find(function (e) { return n.hash === e.hash })) { var t = e.blockInfo; t.unshift(n), e.blockInfo = t } }, SET_COSIGNATURE_ADDED: function (e, n) { if (!e.cosignatureAdded.find(function (e) { return n.transactionInfo.hash === e.transactionInfo.hash })) { var t = e.cosignatureAdded; t.unshift(n), e.cosignatureAdded = t } }, SET_CONFIRMED: function (e, n) { if (!e.confirmed.find(function (e) { return n.transactionInfo.hash === e.transactionInfo.hash })) { var t = e.confirmed; t.unshift(n), e.confirmed = t } }, SET_UNCONFIRMED_ADDED: function (e, n) { if (!e.unconfirmedAdded.find(function (e) { return n.transactionInfo.hash === e.transactionInfo.hash })) { var t = e.unconfirmedAdded; t.unshift(n), e.unconfirmedAdded = t } }, SET_UNCONFIRMED_REMOVED: function (e, n) { if (!e.unconfirmedRemoved.find(function (e) { return n === e })) { var t = e.unconfirmedRemoved; t.unshift(n), e.unconfirmedRemoved = t } }, SET_STATUS: function (e, n) { if (!e.status.find(function (e) { return n === e })) { var t = e.status; t.unshift(n), e.status = t } }, SET_MONITOR_HASH: function (e, n) { var t = e.monitorHashs.filter(function (e) { return e.hash !== n.hash }); t.push(n), e.monitorHashs = t }, REMOVE_AGGREGATE_BONDED_ADDED_TX: function (e, n) { e.aggregateBondedAdded = e.aggregateBondedAdded.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_AGGREGATE_BONDED_REMOVED_TX: function (e, n) { e.aggregateBondedRemoved = e.aggregateBondedRemoved.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_COSIGNATURE_ADDED_TX: function (e, n) { e.cosignatureAdded = e.cosignatureAdded.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_CONFIRMED_TX: function (e, n) { e.confirmed = e.confirmed.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_UNCONFIRMED_ADDED_TX: function (e, n) { e.unconfirmedAdded = e.unconfirmedAdded.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_UNCONFIRMED_REMOVED_TX: function (e, n) { e.unconfirmedRemoved = e.unconfirmedRemoved.filter(function (e) { return n !== e.transactionInfo.hash }) }, REMOVE_STATUS_TX: function (e, n) { e.status = e.status.filter(function (e) { return n !== e }) }, REMOVE_ALL_TXN: function (e) { e.aggregateBondedAdded = [], e.aggregateBondedRemoved = [], e.blockInfo = [], e.cosignatureAdded = [], e.confirmed = [], e.unconfirmedAdded = [], e.unconfirmedRemoved = [], e.status = [] }, REMOVE_MONITOR_HASH: function (e, n) { var t = e.monitorHashs.filter(function (e) { return e.hash !== n }); e.monitorHashs = t } }, actions: {} }; var T = (t('99af'), t('a9e3'), t('ac1f'), t('5319'), { namespaced: !0, state: { xpxInformation: null, typeCurrency: [{ label: 'USD', value: 'usd' }, { label: 'BTC', value: 'btc' }, { label: 'ETH', value: 'eth' }] }, getters: { typeCurrency: function (e) { return e.typeCurrency }, xpxInformation: function (e) { return e.xpxInformation }, xpxToOtherCurrency: function (e) { return function (n) { return e.xpxInformation ? e.xpxInformation.market_data.current_price[n] : '0.00' } }, convertToOtherCurrency: function (e, n) { return function (e, t) { var o = ''; var r = n.xpxToOtherCurrency(t); return r && (o = Number(e.replace(/,/g, '')) * r), o } } }, mutations: { SET_XPX_INFORMATION: function (e, n) { e.xpxInformation = n } }, actions: { searchInformationXPX: function (e) { var n = e.commit; var t = e.rootGetters; var o = t.environment.coingecko.url; var r = 'proximax'; this._vm.$http.get(''.concat(o).concat(r)).then(function (e) { n('SET_XPX_INFORMATION', e.data) }, function () {}) } } }); var E = { namespaced: !0, state: { connected: window.navigator.onLine }, getters: { connected: function (e) { return e.connected } }, mutations: { SET_CONNECTED: function (e, n) { e.connected = n } }, actions: { setConnected: function (e, n) { var t = e.commit; t('SET_CONNECTED', n) } } }; var N = (t('fb6a'), t('1ca7')); var y = { namespaced: !0, state: { currentHeight: 0, currentNode: '', generationHash: null, networkType: null, nodesList: [], customNodes: [], nodeStatus: N['TypeStatusNode'].NODE_OFF, reconnect: !1, stoppedByUser: !1, retryConnection: 0 }, getters: { configHttp: function (e, n, t, o) { return { headers: { Authorization: 'Bearer '.concat(o['accountStore/token']) } } }, currentHeight: function (e) { return e.currentHeight }, currentNode: function (e) { return e.currentNode }, generationHash: function (e) { return e.generationHash }, networkType: function (e) { return e.networkType }, nodesList: function (e) { return e.nodesList }, nodeStatus: function (e) { return e.nodeStatus }, customNodes: function (e) { return e.customNodes }, blockchainNodes: function (e, n) { return n.nodesList.filter(function (e) { return e.node && e.identification_type === 1 }) }, reconnect: function (e) { return e.reconnect }, stoppedByUser: function (e) { return e.stoppedByUser }, retryConnection: function (e) { return e.retryConnection } }, mutations: { ADD_RETRY_CONNECTION: function (e, n) { console.log('value', n), e.retryConnection = n }, STOPPED_BY_USER: function (e, n) { e.stoppedByUser = n }, ADD_NODES: function (e, n, t) { var o = e.nodesList.slice(); var r = []; n.nodes.length > 0 && n.nodes.forEach(function (e) { var t = ''.concat(n.protocol, '://').concat(e); var c = o.find(function (e) { return e === t }); void 0 !== c && c !== null || (r.push(t), o.push(t)) }), n.toServer || (e.nodesList = o) }, SET_DATA_NODE: function (e, n) { e.currentNode = n.uri, e.currentHeight = n.height, e.generationHash = n.generationHash, e.networkType = Number(n.networkType) }, SET_CURRENT_HEIGHT: function (e, n) { e.currentHeight = n }, SET_CURRENT_NODE: function (e, n) { e.currentNode = n }, SET_GENERATION_HASH: function (e, n) { e.generationHash = n }, SET_NETWORK_TYPE: function (e, n) { e.networkType = n }, SET_NODES_LIST: function (e, n) { e.nodesList = n }, SET_STATUS_NODE: function (e, n) { e.nodeStatus = n }, RECONNECT: function (e, n) { e.reconnect = n } }, actions: { searchNodes: function () {}, closeWebsocket: function (e) { var n = e.commit; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; n('SET_CURRENT_HEIGHT', 0), n('SET_CURRENT_NODE', ''), n('SET_GENERATION_HASH', 0), n('SET_NETWORK_TYPE', null), n('SET_STATUS_NODE', t || N['TypeStatusNode'].NODE_OFF) } } }; o['a'].use(r['a']); var A = n['a'] = new r['a'].Store({ state: { environment: null, configApp: null, networkSelected: '', count: null, showMenu: !0, overlay: !1, loadingInfoWallet: { show: !1, text: '', type: null }, snackbar: { color: '', mode: '', snackbar: !1, text: '', timeout: 5e3, x: 'center', y: 'top' } }, getters: { nameApp: function (e) { return e.configApp ? e.configApp.infoApp.nameApp : '' }, pseudonymApp: function (e) { return e.configApp ? e.configApp.infoApp.pseudonymApp : '' }, version: function (e) { return e.configApp ? e.configApp.infoApp.version : '' }, environment: function (e) { return e.environment } }, mutations: { ADD_CONFIG_APP: function (e, n) { e.configApp = n, e.networkSelected = n.networkSelected }, ADD_ENVIRONMENT_APP: function (e, n) { e.configApp && (e.environment = e.configApp.environment[n]) }, SHOW_LOADING: function (e, n) { e.overlay = n }, SHOW_MENU: function (e, n) { e.showMenu = n }, SHOW_LOADING_INFO_WALLET: function (e, n) { e.loadingInfoWallet.show = n.show, e.loadingInfoWallet.text = n.text, e.loadingInfoWallet.type = n.type }, SHOW_SNACKBAR: function (e, n) { e.snackbar.snackbar = n.snackbar, e.snackbar.text = n.text, e.snackbar.color = n.color } }, actions: { showMSG: function (e, n) { var t = e.commit; t('SHOW_SNACKBAR', n) }, showLIW: function (e, n) { var t = e.commit; t('SHOW_LOADING_INFO_WALLET', n) } }, modules: { accountStore: a, walletStore: i, appCoreStore: s, transactionsStore: k, coingeckoStore: T, namespaceStore: u, mosaicStore: l, socketDbStore: p, mosaicExchange: g, socketBcStore: v, offersStore: b, onLineStore: E, nodesStoreNew: y } }) }, '439d': function (e, n, t) { 'use strict'; t.d(n, 'c', function () { return u }), t.d(n, 'd', function () { return d }), t.d(n, 'b', function () { return f }), t.d(n, 'a', function () { return s }), t.d(n, 'g', function () { return p }), t.d(n, 'e', function () { return l }), t.d(n, 'h', function () { return g }), t.d(n, 'f', function () { return N }); t('4de4'), t('7db0'), t('4160'), t('d81d'), t('3ca3'), t('159b'), t('ddb0'); var o = t('b85c'); var r = (t('96cf'), t('1da1')); var c = t('2b0e'); var a = t('4360'); var i = t('c9e2'); function s (e, n) { var t = []; var o = 'metadataMosaicTx'; var r = c['a'].prototype.$blockchainProvider.modifyMetadataTransactionMosaic(e, n); return { transaction: r, dataRequired: t, action: o } } function u (e, n, t, o, r, a) { var i = []; var s = 'mosaicDefinitionTx'; var u = c['a'].prototype.$blockchainProvider.mosaicDefinitionTransaction(e, n, t, o, r, a); return { transaction: u, dataRequired: i, action: s } } function d (e, n, t) { var o = []; var r = 'mosaicSupplyChangeTx'; var a = c['a'].prototype.$blockchainProvider.mosaicSupplyChangeTransaction(e, n, t); return { transaction: a, dataRequired: o, action: r } } function f (e, n, t) { var o = []; var r = 'mosaicAliasTx'; var a = c['a'].prototype.$blockchainProvider.mosaicAliasTransaction(e, n, t); return { transaction: a, dataRequired: o, action: r } } function l () { return m.apply(this, arguments) } function m () { return m = Object(r['a'])(regeneratorRuntime.mark(function e () { var n; var t; var r; var i; var s; var u; var d; var f; var l; var m = arguments; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (n = m.length > 0 && void 0 !== m[0] ? m[0] : null, !n) { e.next = 20; break } if (t = a['a'].getters['mosaicStore/mosaics'], !(t.length > 0)) { e.next = 16; break }r = [], i = [], s = Object(o['a'])(n); try { for (d = function () { var e = u.value; var n = t.find(function (n) { return c['a'].prototype.$blockchainProvider.getMosaicId(n.idMosaic).toHex() === e.toHex() }); if (n)r.push(n); else { var o = t.find(function (n) { return n.isNamespace ? c['a'].prototype.$blockchainProvider.getMosaicId(n.isNamespace).toHex() === e.toHex() : void 0 }); o ? r.push(o) : i.push(e) } }, s.s(); !(u = s.n()).done;)d() } catch (p) { s.e(p) } finally { s.f() } if (!(i.length > 0)) { e.next = 13; break } return e.next = 11, g(i); case 11:f = e.sent, f && f.length > 0 && f.forEach(function (e) { r.push(e) }); case 13:return e.abrupt('return', h(r)); case 16:return e.next = 18, g(n); case 18:return l = e.sent, e.abrupt('return', h(l)); case 20:case 'end':return e.stop() } }, e) })), m.apply(this, arguments) } function h (e) { var n = []; return e && e.length > 0 && e.forEach(function (e) { if (n.length > 0) { var t = n.find(function (n) { return n.isNamespace && e.isNamespace ? c['a'].prototype.$blockchainProvider.getMosaicId(n.isNamespace).toHex() === c['a'].prototype.$blockchainProvider.getMosaicId(e.isNamespace).toHex() : void 0 }); if (!t) { var o = n.find(function (n) { return c['a'].prototype.$blockchainProvider.getMosaicId(n.idMosaic).toHex() === c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).toHex() }); o || n.push(e) } } else n.push(e) }), n } function p (e) { var n = { randomNonce: null, mosaicId: null }; return n.randomNonce = i['MosaicNonce'].createRandom(), n.mosaicId = c['a'].prototype.$blockchainProvider.mosaicNonceFromPublicKey(e, n.randomNonce), n } function g (e) { return v.apply(this, arguments) } function v () { return v = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t; var o; var r; var i; var s; var u; var d; var f = arguments; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (t = f.length > 1 && void 0 !== f[1] && f[1], o = t ? 'mosaicsInfOffer' : 'mosaicsInfo', a['a'].dispatch('showLIW', { show: !0, text: 'Mosaics info', type: o }), e.prev = 3, r = [], !(n.length > 0)) { e.next = 23; break } return i = [], e.next = 9, c['a'].prototype.$blockchainProvider.getMosaics(n).toPromise(); case 9:if (s = e.sent, n.forEach(function (e) { var n = s.find(function (n) { return n.mosaicId.id.toHex() === e.id.toHex() }); n || i.push(e) }), !(i.length > 0)) { e.next = 16; break } return e.next = 14, b(i); case 14:u = e.sent, u.forEach(function (e) { r.push(e) }); case 16:if (!(s.length > 0)) { e.next = 21; break } return e.next = 19, c['a'].prototype.$blockchainProvider.getMosaicsName(n).toPromise(); case 19:d = e.sent, s.forEach(function (e) { try { var n = d ? d.find(function (n) { return n.mosaicId.toHex() === e.mosaicId.toHex() }) : null; r.push({ idMosaic: [e.mosaicId.id.lower, e.mosaicId.id.higher], isNamespace: n && n.names && n.names.length > 0 ? [n.names[0].namespaceId.id.lower, n.names[0].namespaceId.id.higher] : null, mosaicNames: n, mosaicInfo: e }) } catch (t) {} }); case 21:return t || T(r), e.abrupt('return', r); case 23:e.next = 28; break; case 25:return e.prev = 25, e.t0 = e['catch'](3), e.abrupt('return', null); case 28:case 'end':return e.stop() } }, e, null, [[3, 25]]) })), v.apply(this, arguments) } function b (e) { return k.apply(this, arguments) } function k () { return k = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t, r, a, i, s, u, d, f, l, m; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (t = [], !(n.length > 0)) { e.next = 32; break }r = [], a = [], i = Object(o['a'])(n), e.prev = 5, i.s(); case 7:if ((s = i.n()).done) { e.next = 16; break } return u = s.value, d = c['a'].prototype.$blockchainProvider.getNamespaceId([u.id.lower, u.id.higher]), e.next = 12, c['a'].prototype.$blockchainProvider.getLinkedMosaicId(d).toPromise(); case 12:f = e.sent, f && (a.push({ mosaicId: f, namespaceId: d }), r.push(f)); case 14:e.next = 7; break; case 16:e.next = 21; break; case 18:e.prev = 18, e.t0 = e['catch'](5), i.e(e.t0); case 21:return e.prev = 21, i.f(), e.finish(21); case 24:if (!(r.length > 0)) { e.next = 32; break } return e.next = 27, this.proximaxProvider.getMosaics(r).toPromise(); case 27:return l = e.sent, e.next = 30, c['a'].prototype.$blockchainProvider.getMosaicsName(a.map(function (e) { return e.mosaicId })); case 30:m = e.sent, l.forEach(function (e) { var n = a.find(function (n) { return n.mosaicId.toHex() === e.mosaicId.toHex() }); var o = n ? [n.namespaceId.id.lower, n.namespaceId.id.higher] : null; o && t.push({ idMosaic: [e.mosaicId.id.lower, e.mosaicId.id.higher], isNamespace: o, mosaicNames: m ? m.find(function (e) { return e.mosaicId.toHex() === n.mosaicId.toHex() }) : null, mosaicInfo: e }) }); case 32:return e.abrupt('return', t); case 33:case 'end':return e.stop() } }, e, this, [[5, 18, 21, 24]]) })), k.apply(this, arguments) } function T (e) { return E.apply(this, arguments) } function E () { return E = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t, r, i, s; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (!n) { e.next = 22; break }t = a['a'].getters['mosaicStore/mosaics'], r = Object(o['a'])(n), e.prev = 3, r.s(); case 5:if ((i = r.n()).done) { e.next = 12; break } if (s = i.value, !(t.length > 0)) { e.next = 9; break } return e.delegateYield(regeneratorRuntime.mark(function e () { var n, o, r, a; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (n = c['a'].prototype.$blockchainProvider.getMosaicId(s.idMosaic).toHex(), o = t.find(function (e) { return c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).toHex() === n }), !o) { e.next = 14; break } if (!o.isNamespace || s.isNamespace) { e.next = 14; break } return e.prev = 4, r = c['a'].prototype.$blockchainProvider.getNamespaceId(o.isNamespace), e.next = 8, c['a'].prototype.$blockchainProvider.getLinkedMosaicId(r).toPromise(); case 8:a = e.sent, a && a.toHex() === n && (s.isNamespace = o.isNamespace), e.next = 14; break; case 12:e.prev = 12, e.t0 = e['catch'](4); case 14:t = t.filter(function (e) { return c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).toHex() !== n }); case 15:case 'end':return e.stop() } }, e, null, [[4, 12]]) })(), 't0', 9); case 9:t.push(s); case 10:e.next = 5; break; case 12:e.next = 17; break; case 14:e.prev = 14, e.t1 = e['catch'](3), r.e(e.t1); case 17:return e.prev = 17, r.f(), e.finish(17); case 20:a['a'].dispatch('showLIW', { show: !1, text: 'Mosaics info', type: null }), a['a'].commit('mosaicStore/SET_MOSAICS', t); case 22:case 'end':return e.stop() } }, e, null, [[3, 14, 17, 20]]) })), E.apply(this, arguments) } function N () { return a['a'].getters.environment.rentalFee.mosaic } }, 5: function (e, n) {}, 5220: function (e, n, t) { 'use strict'; t.d(n, 'a', function () { return i }), t.d(n, 'b', function () { return s }), t.d(n, 'c', function () { return u }), t.d(n, 'e', function () { return d }), t.d(n, 'f', function () { return f }), t.d(n, 'g', function () { return m }), t.d(n, 'h', function () { return h }), t.d(n, 'd', function () { return v }); t('99af'), t('7db0'), t('4160'), t('d81d'), t('fb6a'), t('a9e3'), t('ac1f'), t('5319'), t('498a'), t('159b'); var o = t('b85c'); var r = (t('96cf'), t('1da1')); var c = t('2b0e'); var a = t('4360'); function i (e) { var n = null; return e === 0 && (n = 'none'), e === 1 && (n = 'mosaic'), e === 2 && (n = 'address'), n } function s (e, n, t, o) { var r = c['a'].prototype.$generalService.calculateDurationforDay(Number(t)); var a = []; var i = 'registerNamespaceTx'; var s = c['a'].prototype.$blockchainProvider.registerNamespaceTransaction(e, n, r, o); return { transaction: s, dataRequired: a, action: i } } function u (e) { var n = c['a'].prototype.$generalService.calculateDurationforDay(e); return a['a'].getters.environment.rentalFee.namespace * n } function d () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; var t = null; return t = e && n ? ''.concat(n, '.').concat(e) : e || n, t } function f (e) { return l.apply(this, arguments) } function l () { return l = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t, r, i, s, u, d; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:a['a'].commit('namespaceStore/LOADING', !0), t = [], r = Object(o['a'])(n), e.prev = 3, r.s(); case 5:if ((i = r.n()).done) { e.next = 21; break } return s = i.value, u = c['a'].prototype.$blockchainProvider.createRawAddress(s.simpleWallet.address['address']), e.prev = 8, e.next = 11, c['a'].prototype.$blockchainProvider.getNamespaceFromAccount(u).toPromise(); case 11:d = e.sent, d && d.length > 0 && d.forEach(function (e) { t.push(e) }), e.next = 18; break; case 15:return e.prev = 15, e.t0 = e['catch'](8), e.abrupt('return'); case 18:p(t); case 19:e.next = 5; break; case 21:e.next = 26; break; case 23:e.prev = 23, e.t1 = e['catch'](3), r.e(e.t1); case 26:return e.prev = 26, r.f(), e.finish(26); case 29:case 'end':return e.stop() } }, e, null, [[3, 23, 26, 29], [8, 15]]) })), l.apply(this, arguments) } function m (e) { var n = null; if (e) { var t = e.toLowerCase().replace(/[^a-z0-9]/gi, '').trim(); n = t === e || 'Format not allowed, characters ('.concat(c['a'].prototype.$generalService.differString(t, e), ') not valid') } return n } function h (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'rootNamespaceName'; var o = { rootNamespaceName: null, subNamespaceName: null }; var r = 'd'; return t === 'rootNamespaceName' ? (o.rootNamespaceName = e || r, o.subNamespaceName = e || r) : (o.rootNamespaceName = n || r, o.subNamespaceName = e || r), o } function p (e) { return g.apply(this, arguments) } function g () { return g = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t, r, i, s, u, d, f, l, m, h; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return t = [], e.next = 3, c['a'].prototype.$blockchainProvider.getNamespacesName(n.map(function (e) { return e.id })).toPromise(); case 3:r = e.sent, i = [], s = Object(o['a'])(n); try { for (d = function () { var e = u.value; i.push({ id: [e.id.id.lower, e.id.id.higher], idToHex: e.id.toHex(), namespaceName: r.find(function (n) { return n.namespaceId.toHex() === e.id.toHex() }), namespaceInfo: e }) }, s.s(); !(u = s.n()).done;)d() } catch (p) { s.e(p) } finally { s.f() } if (f = i.slice(0), t.length > 0 && f.length > 0) { l = Object(o['a'])(t); try { for (h = function () { var e = m.value; var n = f.find(function (n) { return n.idToHex === e.idToHex }); n || f.push(e) }, l.s(); !(m = l.n()).done;)h() } catch (p) { l.e(p) } finally { l.f() } }a['a'].commit('namespaceStore/SET_NAMESPACES', f); case 10:case 'end':return e.stop() } }, e) })), g.apply(this, arguments) } function v () { return a['a'].getters.environment.rentalFee.subnamespace } }, '56d7': function (e, n, t) { 'use strict'; t.r(n); var o = {}; t.r(o), t.d(o, 'clear', function () { return ne }), t.d(o, 'get', function () { return te }), t.d(o, 'set', function () { return oe }); var r = {}; t.r(r), t.d(r, 'instanceConnectionApi', function () { return We }), t.d(r, 'addExchangeOffer', function () { return Ke }), t.d(r, 'announceTx', function () { return $e }), t.d(r, 'aggregateTransaction', function () { return Ge }), t.d(r, 'createPublicAccount', function () { return Ye }), t.d(r, 'createRawAddress', function () { return Xe }), t.d(r, 'createSimpleWallet', function () { return ze }), t.d(r, 'createSimpleWalletFromPrivateKey', function () { return Je }), t.d(r, 'decryptPrivateKey', function () { return en }), t.d(r, 'exchangeOffer', function () { return qe }), t.d(r, 'exchangeOfferDb', function () { return Ve }), t.d(r, 'isValidPrivateKey', function () { return nn }), t.d(r, 'isHexadecimal', function () { return tn }), t.d(r, 'filterNetworkTypeFromString', function () { return on }), t.d(r, 'filterNetworkTypeFromNumber', function () { return rn }), t.d(r, 'getAddressFromPublicKey', function () { return fn }), t.d(r, 'getAccountFromPrivateKey', function () { return dn }), t.d(r, 'getAccountInfo', function () { return an }), t.d(r, 'getMosaicMetadata', function () { return sn }), t.d(r, 'getMosaics', function () { return vn }), t.d(r, 'getMosaicId', function () { return kn }), t.d(r, 'getMosaicsName', function () { return bn }), t.d(r, 'getMultisigAccountInfo', function () { return ln }), t.d(r, 'getNamespaceId', function () { return Tn }), t.d(r, 'getLinkedMosaicId', function () { return An }), t.d(r, 'getNetworkTypes', function () { return On }), t.d(r, 'getIncomingTransactions', function () { return pn }), t.d(r, 'getEnvironmentByNetworkType', function () { return Sn }), t.d(r, 'getExchangeOffersfromId', function () { return un }), t.d(r, 'getUint64', function () { return _n }), t.d(r, 'getOutgoingTransactions', function () { return gn }), t.d(r, 'mosaicNonceFromPublicKey', function () { return In }), t.d(r, 'mosaicDefinitionTransaction', function () { return wn }), t.d(r, 'mosaicSupplyChangeTransaction', function () { return Cn }), t.d(r, 'mosaicAliasTransaction', function () { return xn }), t.d(r, 'modifyMetadataTransactionMosaic', function () { return Rn }), t.d(r, 'registerNamespaceTransaction', function () { return Mn }), t.d(r, 'publicAccountFromPublicKey', function () { return Dn }), t.d(r, 'removeExchangeOffer', function () { return Hn }), t.d(r, 'getTransactionsFromAccount', function () { return mn }), t.d(r, 'getNamespaceFromAccount', function () { return Nn }), t.d(r, 'getNamespacesName', function () { return yn }), t.d(r, 'getPrefixAndPrivateKey', function () { return En }), t.d(r, 'getBlockInfo', function () { return cn }), t.d(r, 'getTransactionId', function () { return hn }), t.d(r, 'typeTransactions', function () { return Un }), t.d(r, 'transferTransaction', function () { return Fn }), t.d(r, 'dateFormatUTC', function () { return Qe }), t.d(r, 'signedTransaction', function () { return Pn }); var c = {}; t.r(c), t.d(c, 'amount', function () { return Wn }), t.d(c, 'buildButton', function () { return $n }), t.d(c, 'duration', function () { return Xn }), t.d(c, 'getConfigMoney', function () { return Gn }), t.d(c, 'isMatch', function () { return Kn }), t.d(c, 'iconMosaic', function () { return Jn }), t.d(c, 'divisibility', function () { return zn }), t.d(c, 'supply', function () { return Zn }), t.d(c, 'namespaceName', function () { return qn }), t.d(c, 'descriptionAsset', function () { return Vn }), t.d(c, 'namespace', function () { return Yn }), t.d(c, 'password', function () { return Qn }), t.d(c, 'privateKey', function () { return et }), t.d(c, 'walletAccountName', function () { return nt }); var a = {}; t.r(a), t.d(a, 'reconnect', function () { return Ot }), t.d(a, 'closeConnection', function () { return mt }), t.d(a, 'selectNode', function () { return St }), t.d(a, 'monitorAllChannels', function () { return yt }), t.d(a, 'getAggregateBondedAdded', function () { return gt }), t.d(a, 'getAggregateBondedRemoved', function () { return vt }), t.d(a, 'getCosignatureAdded', function () { return bt }), t.d(a, 'getConfirmed', function () { return kt }), t.d(a, 'getUnconfirmedAdded', function () { return Tt }), t.d(a, 'getUnconfirmedRemoved', function () { return Et }), t.d(a, 'getStatus', function () { return Nt }), t.d(a, 'webSocketConnection', function () { return ut }); var i = {}; t.r(i), t.d(i, 'addZerosQuantity', function () { return Mt }), t.d(i, 'amountFormatter', function () { return wt }), t.d(i, 'priceFormatter', function () { return Yt }), t.d(i, 'buildBoxServices', function () { return Dt }), t.d(i, 'buildButton', function () { return Ht }), t.d(i, 'buildTableHeader', function () { return Pt }), t.d(i, 'buildMonitorHash', function () { return Kt }), t.d(i, 'calculateDurationforDay', function () { return Ut }), t.d(i, 'sortByKey', function () { return Ct }), t.d(i, 'calculateDurationExpire', function () { return Ft }), t.d(i, 'differString', function () { return Lt }), t.d(i, 'sumObject', function () { return Wt }), t.d(i, 'doCopy', function () { return jt }), t.d(i, 'formatterPrice', function () { return $t }), t.d(i, 'getDataPart', function () { return Gt }), t.d(i, 'quantityStringToInt', function () { return qt }), t.d(i, 'quantityStringToIntMath', function () { return Vt }), t.d(i, 'replaceData', function () { return Xt }), t.d(i, 'validateMatch', function () { return zt }), t.d(i, 'validateZero', function () { return Jt }), t.d(i, 'verifyTypeOfferName', function () { return Zt }), t.d(i, 'showMsgStatusNode', function () { return Qt }), t.d(i, 'formValue', function () { return xt }), t.d(i, 'formValueParse', function () { return Rt }), t.d(i, 'typeInvert', function () { return Bt }); var s = {}; t.r(s), t.d(s, 'rawAddress', function () { return eo }), t.d(s, 'toCurrency', function () { return no }); var u = {}; t.r(u), t.d(u, 'formatQuantity', function () { return to }), t.d(u, 'quantity', function () { return oo }); var d = {}; t.r(d), t.d(d, 'nodes', function () { return ro }); t('4de4'), t('4160'), t('b64b'), t('159b'), t('96cf'); var f = t('1da1'); var l = (t('e260'), t('e6cf'), t('cca6'), t('a79d'), t('2b0e')); var m = function () { var e = this; var n = e.$createElement; var t = e._self._c || n; return t('v-app', [t('v-overlay', { attrs: { value: e.overlay } }, [t('v-progress-circular', { attrs: { indeterminate: '', size: '64' } })], 1), t('v-snackbar', { attrs: { bottom: e.snackbar.y === 'bottom', top: e.snackbar.y === 'top', right: e.snackbar.x === 'right', left: e.snackbar.x === 'left', vertical: e.snackbar.mode === 'vertical', color: e.snackbar.color, 'multi-line': e.snackbar.mode === 'multi-line', timeout: e.snackbar.timeout }, model: { value: e.snackbar.snackbar, callback: function (n) { e.$set(e.snackbar, 'snackbar', n) }, expression: 'snackbar.snackbar' } }, [e._v(' ' + e._s(e.snackbar.text) + ' '), t('v-btn', { attrs: { dark: '', text: '' }, on: { click: function (n) { e.snackbar.snackbar = !1 } } }, [e._v('Close')])], 1), t('menu-item')], 1) }; var h = []; var p = (t('d3b7'), t('5530')); var g = t('2f62'); var v = (t('7db0'), t('d81d'), t('a988')); var b = t('3697'); var k = { data: function () { return { connectionStablished: !1 } }, computed: Object(p['a'])(Object(p['a'])(Object(p['a'])({}, Object(g['d'])('nodesStoreNew', ['RECONNECT'])), Object(g['c'])('nodesStoreNew', ['nodeStatus', 'currentNode', 'reconnect'])), Object(g['c'])('transactionsStore', ['confirmed', 'status', 'unconfirmedAdded'])), watch: { nodeStatus: function (e) { if (e === 2) { var n = b['Utilities'].splitURL(this.currentNode); this.$blockchainProvider.instanceConnectionApi(n.domainIp, n.protocol), this.connectionStablished = !0; var t = this.$store.getters['walletStore/currentWallet'].accounts; Object(v['f'])(t), this.reconnect || this.$store.dispatch('socketDbStore/getMoisaicsInfo', { io: this.$socket, data: null }) } }, confirmed: function (e) { var n = this; var t = this.$store.getters['walletStore/currentWallet'].accounts; Object(v['f'])(t); var o = e.map(function (e) { return e.transactionInfo.hash }); var r = this.$store.getters['transactionsStore/getMonitorHashs']; r.forEach(function (e) { o.find(function (n) { return n === e.hash }) && (n.REMOVE_MONITOR_HASH(e.hash), n.actions(e)) }) }, status: function (e) { var n = this; var t = this.$store.getters['transactionsStore/getMonitorHashs']; t.forEach(function (t) { e.find(function (e) { return e === t.hash }) && (n.REMOVE_MONITOR_HASH(t.hash), n.REMOVE_STATUS_TX(t.hash)) }) } }, methods: Object(p['a'])(Object(p['a'])({}, Object(g['d'])('transactionsStore', ['REMOVE_STATUS_TX', 'REMOVE_MONITOR_HASH'])), {}, { actions: function (e) { switch (e.action) { case 'insertMoisaicsInfo':this.$store.dispatch('socketDbStore/insertMoisaicsInfo', { io: this.$socket, data: e.dataRequired }); break; case 'insertExecuteOffers':this.$store.dispatch('socketDbStore/insertExecuteOffers', { io: this.$socket, data: e.dataRequired.dataRequiredDb }), this.$store.dispatch('socketDbStore/insertMoisaicsInfo', { io: this.$socket, data: e.dataRequired.dataRequiredMosaic }); break; case 'removeExchangeOffer':this.$store.dispatch('socketDbStore/insertMoisaicsInfo', { io: this.$socket, data: e.dataRequired.dataRequiredMosaic }); break } } }), created: function () { var e = this; window.addEventListener('offline', function () { e.$store.dispatch('onLineStore/setConnected', !1) }), window.addEventListener('online', function () { e.$store.dispatch('onLineStore/setConnected', !0) }) } }; var T = t('1ca7'); var E = t('99a0'); var N = { mixins: [k], name: 'App', data: function () { return {} }, components: { 'menu-item': function () { return Promise.all([t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('chunk-6dbc4faa')]).then(t.bind(null, 'fb62')) } }, computed: Object(p['a'])(Object(p['a'])(Object(p['a'])({}, Object(g['e'])(['overlay', 'snackbar'])), Object(g['e'])(['showMenu'])), Object(g['c'])('nodesStoreNew', ['nodeStatus', 'stoppedByUser', 'retryConnection'])), methods: Object(p['a'])(Object(p['a'])({}, Object(g['d'])(['SHOW_LOADING', 'SHOW_SNACKBAR'])), Object(g['d'])('nodesStoreNew', ['STOPPED_BY_USER', 'ADD_RETRY_CONNECTION'])), watch: { nodeStatus: function (e) { var n = this; if (console.warn('new status nodes', e), e === T['TypeStatusNode'].NODE_OFF && !this.stoppedByUser) if (this.STOPPED_BY_USER(!1), this.retryConnection < 3)setTimeout(function () { n.ADD_RETRY_CONNECTION(n.retryConnection + 1), E['a'].connect() }, 1e3); else { this.ADD_RETRY_CONNECTION(0); var t = 'Ha alcanzado el número máximo de reconexión, por favor revise su conexión a internet e intente seleccionar un nuevo nodo'; this.SHOW_SNACKBAR({ snackbar: !0, text: t, color: 'errorIntense', timeout: 8e3 }) } } } }; var y = N; var A = t('2877'); var O = t('6544'); var S = t.n(O); var _ = t('7496'); var I = t('8336'); var w = t('a797'); var C = t('490a'); var x = t('2db4'); var R = Object(A['a'])(y, m, h, !1, null, null, null); var M = R.exports; S()(R, { VApp: _['a'], VBtn: I['a'], VOverlay: w['a'], VProgressCircular: C['a'], VSnackbar: x['a'] }); t('6672'), t('45fc'); var D = t('8c4f'); var H = t('4360'); l['a'].use(D['a']); var P = [{ path: '/', name: 'Log In', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, '60bf')) }, meta: {} }, { path: '/searchOfferts', name: 'Search Offerts ', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('searchOfferts')]).then(t.bind(null, 'ba83')) }, meta: { requiresAuth: !0 } }, { path: '/nodes', name: 'nodes', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('searchOfferts')]).then(t.bind(null, 'e307')) }, meta: { requiresAuth: !0 } }, { path: '/newAsset', name: 'new Asset', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('newAsset')]).then(t.bind(null, 'cdd7')) }, meta: { requiresAuth: !0 } }, { path: '/newOffer', name: 'new Offer', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('newOffer')]).then(t.bind(null, '6583')) }, meta: { requiresAuth: !0 } }, { path: '/home', name: 'home', component: function () { return t.e('Home').then(t.bind(null, 'bb51')) }, meta: { requiresNotAuth: !0 } }, { path: '/create-new-signup', name: 'New Signup', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('CreateNewSignup.vue')]).then(t.bind(null, '9b68')) }, meta: { requiresNotAuth: !0, hideMenu: !1 } }, { path: '/select-signup-type', name: 'Signup Type', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, '8803')) }, meta: { requiresNotAuth: !0, hideMenu: !1 } }, { path: '/take-offers', name: 'take offers', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, 'cf8e')) }, meta: { requiresAuth: !0, hideMenu: !1 } }, { path: '/offer-board', name: 'Offer Board', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, '270a')) }, meta: { requiresNotAuth: !0, requiresAuth: !0, hideMenu: !1 } }, { path: '/create-from-privateKey', name: 'Create from private key', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, '43bb')) }, meta: { requiresNotAuth: !0, hideMenu: !1 } }, { path: '/login', name: 'Log In', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, '60bf')) }, meta: { requiresNotAuth: !0, hideMenu: !1 } }, { path: '/dashboard', name: 'Dashboard', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('chunk-d919d12c'), t.e('chunk-48cc6628'), t.e('SelectTypeSignup')]).then(t.bind(null, 'b7b4')) }, meta: { requiresAuth: !0, hideMenu: !1 } }, { path: '/allOffer', name: 'All offer', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('AllOffer')]).then(t.bind(null, '6f89')) }, meta: { requiresAuth: !0, hideMenu: !1 } }, { path: '/myWallet', name: 'Info walleet', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-d919d12c'), t.e('WalletInfo')]).then(t.bind(null, 'b7d3')) }, meta: { requiresAuth: !0, hideMenu: !1 } }, { path: '/deleteOffer', name: 'Delete Offer', component: function () { return Promise.all([t.e('chunk-5466d8f6'), t.e('chunk-92d3c5fe'), t.e('deleteOffer')]).then(t.bind(null, '5ea2')) }, meta: { requiresAuth: !0, hideMenu: !1 } }, { path: '*', redirect: '/' }]; var U = new D['a']({ mode: 'history', base: '/', routes: P }); U.beforeEach(function () { var e = Object(f['a'])(regeneratorRuntime.mark(function e (n, t, o) { var r, c, a; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (r = n.matched.some(function (e) { return e.meta.hideMenu }), c = n.matched.some(function (e) { return e.meta.requiresAuth }), a = n.matched.some(function (e) { return e.meta.requiresNotAuth }), r ? H['a'].commit('SHOW_MENU', !1) : H['a'].commit('SHOW_MENU', !0), !c || !a) { e.next = 7; break } return o(), e.abrupt('return'); case 7:c && !H['a'].getters['accountStore/isLogged'] ? o('/') : a && H['a'].getters['accountStore/isLogged'] ? o('/home') : o(); case 8:case 'end':return e.stop() } }, e) })); return function (n, t, o) { return e.apply(this, arguments) } }()); var F = U; var B = (t('ac1f'), t('5319'), t('f309')); var j = t('fcf4'); l['a'].use(B['a']); var L = new B['a']({ theme: { dark: !1, options: { customProperties: !0, minifyTheme: function (e) { return e.replace(/[\r\n|\r|\n]/g, '') } }, themes: { light: { primary: '#1C82A9', secondary: '#00bcd4', accent: '#03a9f4', error: '#f44336', warning: '#ffc107', info: '#2196f3', success: '#4caf50', darkness: '#222222', errorIntense: j['a'].red.darken1, orange: j['a'].orange, pin: '604CC0', dim: '#00B938', sky: '062B39', leve: '#F4F4F4', leveint: 'FFF', leveif: 'EEEEEE', inputStyle: '1C82A9' }, dark: { primary: '#0CFF5D', secondary: '#FFB80C', light: '#49B3FF', leve: '#FFFFFF', dim: '#333333', darkness: '#222222', chip1: '#194b2e', chip2: '#4a3c19', chip3: '#102638', errorIntense: j['a'].red.darken1 } } } }); var W = t('bc3a'); var $ = t.n(W); var G = t('a7fe'); var K = t.n(G); var q = t('4eb5'); var V = t.n(q); var Y = t('9955'); var X = t.n(Y); var z = t('5132'); var J = t.n(z); var Z = t('716b'); var Q = t.n(Z); var ee = localStorage; function ne () { ee.clear() } function te (e) { return ee.getItem(e) } function oe (e, n) { ee.setItem(e, n) }t('99af'), t('a9e3'), t('fb6a'), t('466d'); var re = t('6b81'); var ce = t('006a'); var ae = t('adcb'); var ie = t('e6a4'); var se = t('5e5e'); var ue = t('5c0a'); var de = t('5a21'); var fe = t('4630'); var le = t('1519'); var me = t('e0cc'); var he = t('2f69'); var pe = t('6bc3'); var ge = t('8248'); var ve = t('8050'); var be = t('60dd'); var ke = t('2f6c'); var Te = t('dd73'); var Ee = t('ebdf'); var Ne = t('bd05'); var ye = t('5971'); var Ae = t('4c0d'); var Oe = t('3562'); var Se = t('e09c'); var _e = t('fa85'); var Ie = t('511f'); var we = t('d935'); var Ce = t('555e'); var xe = t('e578'); var Re = t('d4ec'); var Me = t('bee2'); var De = t('c123'); var He = t('08c3'); var Pe = t('014d'); var Ue = t('f4e8'); var Fe = t('f9d8'); var Be = t('6ee8'); var je = (function () { function e (n, t) { Object(Re['a'])(this, e), this.url = this.getBuildUrl(n, t), this.accountHttp = new De['AccountHttp'](this.url), this.blockHttp = new pe['BlockHttp'](this.url), this.mosaicHttp = new Pe['MosaicHttp'](this.url), this.metadataHttp = new Ue['MetadataHttp'](this.url), this.namespaceHttp = new Fe['NamespaceHttp'](this.url), this.transactionHttp = new Be['TransactionHttp'](this.url), this.exchangeHttp = new He['ExchangeHttp'](this.url) } return Object(Me['a'])(e, [{ key: 'getBuildUrl', value: function (e, n) { switch (n) { case 'http':return ''.concat(n, '://').concat(e, ':3000'); case 'https':return ''.concat(n, '://').concat(e, ':443') } } }]), e }()); var Le = []; function We (e, n) { Le = new je(e, n) } function $e (e) { return Le.transactionHttp.announce(e) } function Ge () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; var t = H['a'].getters['nodesStoreNew/networkType']; return de['AggregateTransaction'].createComplete(fe['Deadline'].create(10), e, t, n) } function Ke (e, n, t, o, r) { var c = xe['UInt64'].fromUint(n); var a = xe['UInt64'].fromUint(t); var i = xe['UInt64'].fromUint(r); var s = H['a'].getters['nodesStoreNew/networkType']; return se['AddExchangeOfferTransaction'].create(fe['Deadline'].create(10), [new ae['AddExchangeOffer'](e, c, a, o, i)], s) } function qe (e, n, t, o, r) { var c = xe['UInt64'].fromUint(n); var a = xe['UInt64'].fromUint(t); var i = H['a'].getters['nodesStoreNew/networkType']; return ue['ExchangeOfferTransaction'].create(fe['Deadline'].create(10), [new ie['ExchangeOffer'](e, c, a, o, r)], i) } function Ve (e, n, t, o, r) { var c = xe['UInt64'].fromUint(n); var a = xe['UInt64'].fromUint(t); return new ie['ExchangeOffer'](e, c, a, o, r) } function Ye (e, n) { return le['PublicAccount'].createFromPublicKey(e, n) } function Xe (e) { return ve['Address'].createFromRawAddress(e) } function ze (e, n, t) { return we['SimpleWallet'].create(e, Ze(n), t) } function Je (e, n, t, o) { return we['SimpleWallet'].createFromPrivateKey(e, Ze(n), t, o) } function Ze (e) { return new Ce['Password'](e) } function Qe (e) { return new Date(e.compact() + 14594688e5).toLocaleString() } function en (e, n) { try { if (!n || n.encrypted === '' || !e) return { status: !1, msg: 'You do not have a valid account selected' }; if (!re['passwordToPrivatekey'](e, n, n.algo)) return { status: !1, msg: 'Invalid password' }; if (e.isHW) return { status: !1, msg: 'Invalid password' }; if (!nn(e.privateKey)) return { status: !1, msg: 'Invalid password' }; if (e.privateKey !== '') return { status: !0, msg: '' } } catch (t) { return { status: !1, msg: 'Has ocurred a error to decrypt your account.' } } } function nn (e) { return !(!e || e === '' || e.length !== 64 && e.length !== 66 || !tn(e)) } function tn (e) { return !!e && e.match('^(0x|0X)?[a-fA-F0-9]+$') !== null } function on (e) { switch (e) { case 'MAIN_NET':return be['NetworkType'].MAIN_NET; case 'MIJIN_TEST':return be['NetworkType'].MIJIN_TEST; case 'TEST_NET':return be['NetworkType'].TEST_NET; case 'PRIVATE':return be['NetworkType'].PRIVATE } } function rn (e) { switch (e) { case be['NetworkType'].MAIN_NET:return 'MAIN_NET'; case be['NetworkType'].MIJIN_TEST:return 'MIJIN_TEST'; case be['NetworkType'].TEST_NET:return 'TEST_NET'; case be['NetworkType'].PRIVATE:return 'PRIVATE' } } function cn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ''; if (Le) return Le.blockHttp.getBlockByHeight(e); var t = new pe['BlockHttp'](n); return t.blockHttp.getBlockByHeight(e) } function an (e) { return Le.accountHttp.getAccountInfo(e) } function sn (e) { return Le.metadataHttp.getMosaicMetadata(e) } function un (e, n) { var t = new ke['MosaicId'](e); return Le.exchangeHttp.getExchangeOffers(n, t) } function dn (e, n) { var t = n || H['a'].getters['nodesStoreNew/networkType']; return ce['Account'].createFromPrivateKey(e, t) } function fn (e) { var n = H['a'].getters['nodesStoreNew/networkType']; return ve['Address'].createFromPublicKey(e, n) } function ln (e) { return Le.accountHttp.getMultisigAccountInfo(e) } function mn (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 100; var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0; var o = t ? new ge['QueryParams'](n, t) : new ge['QueryParams'](n); return Le.accountHttp.transactions(e, o) } function hn (e) { return Le.transactionHttp.getTransaction(e) } function pn (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 100; return Le.accountHttp.incomingTransactions(e, new ge['QueryParams'](n)) } function gn (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 100; var o = n ? new ge['QueryParams'](t, n) : new ge['QueryParams'](t); return Le.accountHttp.outgoingTransactions(e, o) } function vn (e) { return Le.mosaicHttp.getMosaics(e) } function bn (e) { return Le.mosaicHttp.getMosaicsNames(e) } function kn (e) { return new ke['MosaicId'](e) } function Tn (e) { return new Oe['NamespaceId'](e) } function En (e) { var n = null; var t = e; return t && t.length > 64 && (n = t.slice(0, -64), t = t.slice(2)), { pref: n, pvk: t } } function Nn (e) { return Le.namespaceHttp.getNamespacesFromAccount(e) } function yn (e) { return Le.namespaceHttp.getNamespacesName(e) } function An (e) { return Le.namespaceHttp.getLinkedMosaicId(e) } function On () { return [{ text: 'Public Test', value: be['NetworkType'].TEST_NET }, { text: 'Main Net', value: be['NetworkType'].MAIN_NET }, { text: 'Private', value: be['NetworkType'].PRIVATE }] } function Sn (e) { var n = null; switch (e.infoApp.version) { case 'TEST_NET':n = e.environment.TEST_NET; break; case 'MAIN_NET':n = e.environment.MAIN_NET; break; case 'MIJIN_TEST':n = e.environment.MIJIN_TEST; break } return n } function _n (e) { return new xe['UInt64'](e) } function In (e, n) { var t = H['a'].getters['nodesStoreNew/networkType']; return ke['MosaicId'].createFromNonce(n, le['PublicAccount'].createFromPublicKey(e, t)) } function wn (e, n, t, o, r, c) { var a = H['a'].getters['nodesStoreNew/networkType']; var i = In(e, n); return Ee['MosaicDefinitionTransaction'].create(fe['Deadline'].create(10), n, i, Te['MosaicProperties'].create({ supplyMutable: r, transferable: c, divisibility: o, duration: t ? xe['UInt64'].fromUint(t) : void 0 }), a) } function Cn (e, n, t) { var o = H['a'].getters['nodesStoreNew/networkType']; return Ne['MosaicSupplyChangeTransaction'].create(fe['Deadline'].create(10), e, n, xe['UInt64'].fromUint(t), o) } function xn (e, n, t) { var o = H['a'].getters['nodesStoreNew/networkType']; return ye['MosaicAliasTransaction'].create(fe['Deadline'].create(10), e, n, t, o) } function Rn (e, n) { var t = H['a'].getters['nodesStoreNew/networkType']; return Ae['ModifyMetadataTransaction'].createWithMosaicId(t, fe['Deadline'].create(10), e, n) } function Mn (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; var t = arguments.length > 2 ? arguments[2] : void 0; var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'rootNamespaceName'; var r = H['a'].getters['nodesStoreNew/networkType']; var c = []; var a = xe['UInt64'].fromUint(t); var i = fe['Deadline'].create(10); return o === 'rootNamespaceName' && (c = Se['RegisterNamespaceTransaction'].createRootNamespace(i, e, a, r)), o === 'subNamespaceName' && (c = Se['RegisterNamespaceTransaction'].createSubNamespace(i, n, e, r)), c } function Dn (e, n) { var t = n || H['a'].getters['nodesStoreNew/networkType']; return le['PublicAccount'].createFromPublicKey(e, t) } function Hn (e, n) { var t = H['a'].getters['nodesStoreNew/networkType']; return me['RemoveExchangeOfferTransaction'].create(fe['Deadline'].create(10), [new he['RemoveExchangeOffer'](e, n)], t) } function Pn (e, n, t) { var o = t || H['a'].getters['nodesStoreNew/networkType']; var r = H['a'].getters['nodesStoreNew/generationHash']; var c = dn(e, o); return c.sign(n, r) } function Un () { return { transfer: { id: _e['TransactionType'].TRANSFER, name: 'Transfer Transaction' }, registerNamespace: { id: _e['TransactionType'].REGISTER_NAMESPACE, name: 'Register Namespace Transaction' }, mosaicDefinition: { id: _e['TransactionType'].MOSAIC_DEFINITION, name: 'Mosaic definition' }, mosaicSupplyChange: { id: _e['TransactionType'].MOSAIC_SUPPLY_CHANGE, name: 'Mosaic supply change' }, modifyMultisigAccount: { id: _e['TransactionType'].MODIFY_MULTISIG_ACCOUNT, name: 'Modify multisig account' }, aggregateComplete: { id: _e['TransactionType'].AGGREGATE_COMPLETE, name: 'Aggregate complete' }, aggregateBonded: { id: _e['TransactionType'].AGGREGATE_BONDED, name: 'Aggregate bonded' }, lock: { id: _e['TransactionType'].LOCK, name: 'Lock' }, secretLock: { id: _e['TransactionType'].SECRET_LOCK, name: 'Secret lock' }, secretProof: { id: _e['TransactionType'].SECRET_PROOF, name: 'Secret proof' }, mosaicAlias: { id: _e['TransactionType'].MOSAIC_ALIAS, name: 'Mosaic Alias' }, addressAlias: { id: _e['TransactionType'].ADDRESS_ALIAS, name: 'Address Alias' }, modifyAccountPropertyAddress: { id: _e['TransactionType'].MODIFY_ACCOUNT_PROPERTY_ADDRESS, name: 'Modify Account Property Address' }, modifyAccountPropertyMosaic: { id: _e['TransactionType'].MODIFY_ACCOUNT_PROPERTY_MOSAIC, name: 'Modify Account Property Mosaic' }, modifyAccountPropertyEntityType: { id: _e['TransactionType'].MODIFY_ACCOUNT_PROPERTY_ENTITY_TYPE, name: 'Modify Account Entity Type' }, linkAccount: { id: _e['TransactionType'].LINK_ACCOUNT, name: 'Link Account' }, modifyAccountMetadata: { id: _e['TransactionType'].MODIFY_ACCOUNT_METADATA, name: 'Modify Account Metadata' }, modifyMosaicMetadata: { id: _e['TransactionType'].MODIFY_MOSAIC_METADATA, name: 'Modify Mosaic Metadata' }, modifyNamespaceMetadata: { id: _e['TransactionType'].MODIFY_NAMESPACE_METADATA, name: 'Modify Namespace Metadata' } } } function Fn (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; var t = arguments.length > 2 ? arguments[2] : void 0; var o = H['a'].getters['nodesStoreNew/networkType']; return Ie['TransferTransaction'].create(fe['Deadline'].create(10), e, n, t, o) } var Bn = { img: { width: 35, height: 35, size: 4e3, typeForm: 'image/png' }, amount: { min: 1, max: 30 }, divisibility: { min: 0, max: 6 }, duration: { min: 1, max: 365 }, supply: { min: 1, max: 9e15, maxTex: 9 }, namespace: { min: 1, max: 30 }, namespaceName: { min: 2, max: 16 }, descriptionAsset: { min: 4, max: 30 }, password: { min: 8, max: 30 }, privateKey: { min: 64, max: 66 }, publicKey: { min: 64, max: 66 }, walletAccountName: { min: 3, max: 30 } }; function jn (e, n, t, o, r, c) { var a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6]; var i = arguments.length > 7 && void 0 !== arguments[7] && arguments[7]; var s = arguments.length > 8 && void 0 !== arguments[8] && arguments[8]; return { label: e, icon: n, type: t, min: o, max: r, rules: c, showIcon: a, show: i, showConfirm: s } } function Ln (e, n, t, o, r) { var c = { width: e, height: n, size: t, typeForm: o }; return Object.assign(c, r) } function Wn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Amount'; var n = Bn.amount.min; var t = Bn.amount.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' must be at least ').concat(n, ' characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' must be a maximum of ').concat(t, ' characters.') } }; return jn(e, '', 'number', n, t, o) } function $n (e, n, t, o, r) { var c = arguments.length > 5 && void 0 !== arguments[5] && arguments[5]; var a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6]; return { text: e, key: n, action: t, color: o, textColor: r, disabled: c, loading: a } } function Gn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '.'; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ','; var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ''; var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ''; var r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 6; var c = arguments.length > 5 && void 0 !== arguments[5] && arguments[5]; return { decimal: e, thousands: n, prefix: t, suffix: o, precision: r, masked: c } } function Kn (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ''; return e === n || ''.concat(t, ' must match.') } function qn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'namespaceName'; var n = Bn.namespaceName.min; var t = Bn.namespaceName.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' min length ').concat(n, ' alphanumeric characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' max length ').concat(t, ' alphanumeric characters.') } }; return jn(e, '', '', n, t, o) } function Vn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Description asset'; var n = Bn.descriptionAsset.min; var t = Bn.descriptionAsset.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' min length ').concat(n, ' alphanumeric characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' max length ').concat(t, ' alphanumeric characters.') } }; return jn(e, '', '', n, t, o) } function Yn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Namespace'; var n = Bn.namespace.min; var t = Bn.namespace.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' must be at least ').concat(n, ' characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' must be a maximum of ').concat(t, ' characters.') } }; return jn(e, '', '', n, t, o) } function Xn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Duration'; var n = Bn.duration.min; var t = Bn.duration.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && Number(t) >= n || ''.concat(e, ' must be at least ').concat(n, '.') }, max: function (e) { return e && Number(e) <= t || 'Maximum is '.concat(t, '.') } }; return jn(e, '', 'number', n, t, o) } function zn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Divisibility'; var n = Bn.divisibility.min; var t = Bn.divisibility.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && Number(t) >= n || ''.concat(e, ' must be at least ').concat(n, '.') }, max: function (e) { return e && Number(e) <= t || 'Maximum is '.concat(t, '.') } }; return jn(e, '', 'number', n, t, o) } function Jn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Select image icon'; var n = Bn.img.size; var t = Bn.img.typeForm; var o = Bn.img.width; var r = Bn.img.height; var c = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, size: function (e) { return !e || e.size < n || 'Icon size must be at least 4 kB!' }, typeForm: function (e) { return !e || e.type === t || 'Allowed format ('.concat(t, ').') } }; return Ln(o, r, n, t, jn(e, '', 'file', null, null, c)) } function Zn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Supply'; var n = Bn.supply.min; var t = Bn.supply.max; var o = Bn.supply.maxTex; var r = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && Number(t) >= n || ''.concat(e, ' must be at least ').concat(n, '.') }, max: function (e) { return e && Number(e) <= t || 'Maximum is '.concat(o, ' billion.') } }; return jn(e, '', 'number', n, t, r) } function Qn () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Password'; var n = Bn.password.min; var t = Bn.password.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' must be at least ').concat(n, ' characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' must be a maximum of ').concat(t, ' characters.') } }; return jn(e, '', 'password', n, t, o) } function et () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Private key'; var n = Bn.privateKey.min; var t = Bn.privateKey.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' must be at least ').concat(n, ' characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' must be a maximum of ').concat(t, ' characters.') }, validatePvk: function (e) { return nn(e) || 'Private key must be Hexadecimal.' } }; return jn(e, '', 'password', n, t, o) } function nt () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Wallet'; var n = Bn.walletAccountName.min; var t = Bn.walletAccountName.max; var o = { required: function (n) { return !!n || ''.concat(e, ' is required.') }, min: function (t) { return t && t.length >= n || ''.concat(e, ' must be at least ').concat(n, ' characters.') }, max: function (n) { return n && n.length <= t || ''.concat(e, ' must be a maximum of ').concat(t, ' characters.') } }; return jn(e, '', '', n, t, o) }t('a15b'), t('1276'); var tt; var ot; var rt = t('85b4'); var ct = 1; var at = !1; var it = null; var st = { aggregateBondedAdded: 'Transaction Aggregate Bonded Added', aggregateBondedRemoved: 'Transaction Aggregate Bonded Removed', cosignatureAdded: 'Cosignature Added', confirmed: 'Transaction confirmed', unconfirmed: 'Transaction send', unconfirmedRemoved: 'Transaction unconfirmed removed' }; function ut (e, n) { try { it = l['a'].prototype.$modulesConfig.nodes, Ot(!1), H['a'].commit('nodeStore/SET_STATUS_NODE', 2), setTimeout(function () { var t = dt(e, n); tt = new rt['Listener'](t, WebSocket), At() }, 10) } catch (t) { _t('Error connecting to the node', 'errorIntense', 0) } } function dt (e, n) { switch (n) { case 'ws':return ''.concat(n, '://').concat(e, ':3000'); case 'wss':return ''.concat(n, '://').concat(e, ':443') } } function ft () { return tt && tt.isOpen } function lt (e) { ht(), ot = setTimeout(function () { mt(), _t('The connection node is stuck', 'errorIntense', 0) }, 1e3 * Number(it.timeOutNewBlocks)), tt && !at && (at = !0, setTimeout(function () { at = !1, ct > 1 && e > ct + 4 ? (ht(), mt(), _t('The node is synchronizing', 'errorIntense', 0)) : ct = e }, it.timeValidateSynchronization)) } function mt () { tt && (tt.close(), tt.terminate(), ht()) } function ht () { ot && (clearTimeout(ot), ot = null) } function pt () { tt.newBlock().subscribe(function (e) { lt(e.height.compact()), H['a'].commit('nodeStore/SET_CURRENT_BLOCK', e.height.compact()) }, function () { _t('Error connecting to the node', 'errorIntense', 0) }) } function gt (e) { ft() && e.forEach(function (e) { tt.aggregateBondedAdded(e).subscribe(function (e) { _t(st.aggregateBondedAdded, 'success'), H['a'].commit('transactionsStore/SET_AGGREGATE_BONDED_ADDED', e) }) }) } function vt (e) { ft() && e.forEach(function (e) { tt.aggregateBondedRemoved(e).subscribe(function (e) { _t(st.aggregateBondedRemoved, 'success'), H['a'].commit('transactionsStore/SET_AGGREGATE_BONDED_REMOVED', e) }) }) } function bt (e) { ft() && e.forEach(function (e) { tt.cosignatureAdded(e).subscribe(function (e) { _t(st.cosignatureAdded, 'success'), H['a'].commit('transactionsStore/SET_COSIGNATURE_ADDED', e) }) }) } function kt (e) { ft() && e.forEach(function (e) { tt.confirmed(e).subscribe(function (e) { _t(st.confirmed, 'success'), H['a'].commit('transactionsStore/SET_CONFIRMED', e) }) }) } function Tt (e) { ft() && e.forEach(function (e) { tt.unconfirmedAdded(e).subscribe(function (e) { _t(st.unconfirmed, 'success') }) }) } function Et (e) { ft() && e.forEach(function (e) { tt.unconfirmedRemoved(e).subscribe(function (e) { H['a'].commit('transactionsStore/REMOVE_UNCONFIRMED_ADDED_TX', e) }) }) } function Nt (e) { ft() && e.forEach(function (e) { tt.status(e).subscribe(function (e) { _t(e.status.split('_').join(' '), 'errorIntense'), H['a'].commit('transactionsStore/SET_STATUS', e.hash) }) }) } function yt (e) { ft() && (gt(e), vt(e), bt(e), kt(e), Tt(e), Et(e), Nt(e)) } function At () { ct = 1, at = !1, tt && tt.open().then(function () { lt(1), _t('Node Connection Established', 'success', 1), pt() }, function () { _t('Error connecting to the node', 'errorIntense', 0) }) } function Ot () { var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; tt && (e && H['a'].commit('nodeStore/SET_STATUS_NODE', 2), mt()) } function St (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; return n && n !== '' ? n : e[Math.floor(Math.random() * e.length)] } function _t (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null; t !== null && H['a'].commit('nodeStore/SET_STATUS_NODE', t), H['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: e, color: n }) }t('caad'), t('b0c0'), t('b680'), t('25f0'), t('2532'); var It = t('32ca'); function wt (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6; return Number(e / Math.pow(10, n)).toLocaleString('en-us', { minimumFractionDigits: n }) } function Ct (e, n) { return e.sort(function (e, t) { var o = e[n]; var r = t[n]; return o < r ? -1 : o > r ? 1 : 0 }) } function xt (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6; return parseFloat(e.toString().replace(/,/g, '')).toFixed(n) } function Rt (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 6; return qt(String(xt(e * n, t))) } function Mt (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '0'; var t = '0'; if (n === '0') for (var o = 0; o < e - 1; o++)n += t; else for (var r = 0; r < e; r++)n += t; return n } function Dt (e, n, t, o, r, c, a, i) { return { title: e, show: n, description: t, image: o, route: r, children: c, viewChildren: a, className: i } } function Ht (e, n, t, o, r) { return { action: e, disabled: n, color: t, loading: o, text: r } } function Pt (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; return { text: e, value: n, sortable: t } } function Ut (e) { return 5760 * e } function Ft (e) { var n = 15 * e; var t = Math.floor(n / 86400); n -= 3600 * t * 24; var o = Math.floor(n / 3600); n -= 3600 * o; var r = Math.floor(n / 60); n -= 60 * r; var c = t + ' days, ' + o + ' Hrs, ' + r + ' Minutes, ' + n + ' Seconds'; return c } function Bt () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null; var n = null; return e === 'buy' && (n = 'sell'), e === 'sell' && (n = 'buy'), n } function jt (e, n) { l['a'].prototype.$copyText(n).then(function (n) { H['a'].dispatch('showMSG', { snackbar: !0, text: ''.concat(e, ' copied'), color: 'success' }) }, function (e) { H['a'].dispatch('showMSG', { snackbar: !0, text: 'Can not copy', color: 'error' }) }) } function Lt (e, n) { var t = 0; var o = 0; var r = ''; while (o < n.length)e[t] !== n[o] || t === e.length ? r += n[o] : t++, o++; return r } function Wt (e) { var n = 0; if (e) for (var t in e)n += e[t]; return n } function $t (e) { var n = e.toString().split(',').join('').split('.').join(''); return Number(n) } function Gt (e, n) { return { part1: e.slice(0, e.length - n), part2: e.slice(-n) } } function Kt (e, n, t) { var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : []; return { action: e, hash: n, typeTransaction: t, dataRequired: o } } function qt (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6; var t = null; if (e !== '' && e !== null && Number(e) !== 0) { var o = e.toString().replace(/,/g, '').split('.'); var r = null; if (o.length < 2)r = Mt(n); else { var c = o[1].split(''); r = Mt(n - c.length, o[1]) }t = ''.concat(o[0]).concat(r) } return Number(t) } function Vt (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6; var t = e; var o = null; if (t !== '' && t !== null && Number(t) !== 0) { var r = t.toString().replace(/,/g, '').split('.'); var c = null; if (r.length < 2)c = Mt(n); else { var a = r[1].split(''); c = Mt(n - a.length, r[1]) }o = ''.concat(r[0]).concat(c) } return Number(o) } function Yt (e) { var n = String(e); return Number(n.split('.').join('')) } function Xt (e, n, t) { return !0 === e.includes(n) ? e.split(n).join(t) : e } function zt (e, n) { var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ''; return e === n || ''.concat(t, ' must match') } function Jt () { for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], n = !0, t = 0; t < e.length; t++) { var o = e[t]; var r = null; try { r = parseFloat(o.split(',').join('')) } catch (c) { r = Number(o) } if (r === 0) { n = !1; break } } return n } function Zt (e) { var n = [{ type: It['ExchangeOfferType'].SELL_OFFER, name: 'SELL' }, { type: It['ExchangeOfferType'].BUY_OFFER, name: 'BUY' }]; var t = n.find(function (n) { return n.type === e }).name; return t } function Qt () { return H['a'].getters['nodesStoreNew/nodeStatus'] === 0 ? (H['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: 'The connection node is down', color: 'errorIntense' }), !1) : H['a'].getters['nodesStoreNew/nodeStatus'] !== 1 || (H['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: 'Reconnect node', color: 'orange' }), !1) } function eo (e) { return e ? Xe(e).pretty() : '' } function no (e) { if (typeof e !== 'number') return e; var n = new Intl.NumberFormat('en-US', { style: 'decimal', currency: 'USD', minimumFractionDigits: 2, maximumFractionDigits: 6 }); return n.format(e) } function to (e, n) { var t = JSON.stringify; var o = t(n.value.q).replace(/["]+/g, ' ').split('.'); var r = t(n.value.c).replace(/["]+/g, ' '); var c = n.value.cl1 ? t(n.value.cl1).replace(/["]+/g, ' ') : ''; var a = n.value.cl1 ? t(n.value.cl2).replace(/["]+/g, ' ') : ''; o.length > 1 ? e.innerHTML = '<span class="fs-085rem font-weight-medium '.concat(c, '">').concat(o[0], '.</span><span class="fs-07rem ').concat(a, '">').concat(o[1], '</span>\n                    <span class="fs-085rem font-weight-medium ').concat(c, '">').concat(r, '</span>') : e.innerHTML = '<span class="fs-085rem font-weight-medium '.concat(c, '"> ').concat(o[0], '</span>\n                    <span class="fs-085rem font-weight-medium ').concat(c, '">').concat(r, '</span>') } function oo (e, n) { var t = JSON.stringify; var o = t(n.value.q).replace(/["]+/g, ' ').split('.'); var r = t(n.value.c).replace(/["]+/g, ' '); o.length > 1 ? e.innerHTML = '<span class="fs-085rem font-weight-medium">'.concat(o[0], '.</span><span class="fs-07rem">').concat(o[1], '</span>\n                      <span class="fs-085rem font-weight-medium">').concat(r, '</span>') : e.innerHTML = '<span class="fs-085rem font-weight-medium"> '.concat(o[0], '</span>\n                      <span class="fs-085rem font-weight-medium">').concat(r, '</span>') } var ro = { timeOutConnection: '', connectToWebsocket: !0, timeOutNewBlocks: 180, timeValidateSynchronization: 6e3 }; l['a'].use(K.a, $.a); var co = {}; Object.keys(d).forEach(function (e) { co[e] = d[e] }), l['a'].prototype.$modulesConfig = co, l['a'].prototype.$blockchainProvider = r, l['a'].prototype.$websocketProvider = a, l['a'].prototype.$generalService = i, l['a'].prototype.$browserStorage = o, l['a'].prototype.$configForm = c, Object.keys(s).forEach(function (e) { l['a'].filter(e, s[e]) }), Object.keys(u).forEach(function (e) { l['a'].directive(e, { bind: u[e], update: u[e] }) }), $.a.get('../config/config.json', { headers: { 'Cache-Control': 'no-cache' } }).then(function (e) { H['a'].commit('ADD_CONFIG_APP', e.data), H['a'].commit('ADD_ENVIRONMENT_APP', e.data.networkSelected) }), l['a'].config.productionTip = !1; var ao = { name: 'lodash' }; l['a'].use(V.a), l['a'].use(X.a, ao), l['a'].use(Q.a), l['a'].use(new J.a({ debug: !1, connection: 'http://localhost:900', vuex: { store: H['a'], actionPrefix: 'SOCKET_', mutationPrefix: 'SOCKET_' }, options: { path: '', transports: ['websocket'] }, transports: ['websocket'] })); var io = (function () { var e = Object(f['a'])(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:try { new l['a']({ router: F, store: H['a'], vuetify: L, render: function (e) { return e(M) } }).$mount('#app') } catch (n) {} case 1:case 'end':return e.stop() } }, e) })); return function () { return e.apply(this, arguments) } }()); io() }, 6: function (e, n) {}, 6672: function (e, n, t) {}, 7: function (e, n) {}, 8: function (e, n) {}, '89ef': function (e, n, t) { 'use strict'; t.d(n, 'e', function () { return g }), t.d(n, 'b', function () { return s }), t.d(n, 'd', function () { return d }), t.d(n, 'a', function () { return h }), t.d(n, 'c', function () { return l }); t('99af'), t('4de4'), t('d3b7'), t('ac1f'), t('1276'); var o = t('b85c'); var r = t('2b0e'); var c = t('361e'); var a = t('4ca9'); var i = { format: 'data:image/png;base64,' }; function s (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e3; var t = e.split(',')[1]; if (!p(t)) throw new Error('not Base64'); for (var o = e.split(';')[0].split('/')[1], r = [], c = Math.ceil(t.length / n), a = 0, i = 0; i < c; i++) { var s = t.substring(a, a + n); a += n, r.push({ s: s, i: i, t: 0 }) } return { arrayString: r, type: o } } function u (e) { for (var n = '', t = e.sort(function (e, n) { return e.i - n.i }), o = 0; o < t.length; o++)t[o].s && (n += t[o].s); if (!p(n)) throw new Error('not Base64'); return ''.concat(i.format).concat(n) } function d (e) { for (var n = '', t = e.sort(function (e, n) { return e.i - n.i }), o = 0; o < t.length; o++)t[o].s && (n += t[o].s); if (!p(n)) throw new Error('not Base64'); return ''.concat(i.format).concat(n) } function f () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : r['a'].prototype.$blockchainProvider.typeTransactions().transfer.id; return e.filter(function (e) { return e.type === n }) } function l (e) { var n = []; if (e) { var t; var r = Object(o['a'])(f(e.innerTransactions)); try { for (r.s(); !(t = r.n()).done;) { var c = t.value; n.push(m(c)) } } catch (a) { r.e(a) } finally { r.f() } } return u(n) } function m (e) { var n = null; if (a['MessageType'].PlainMessage === e.message.type) { var t = JSON.parse(e.message.payload); if (!('t' in t)) throw new Error('Type is not present in the Json (key = t )'); n = t } return n } function h (e, n) { var t = []; var a = r['a'].prototype.$blockchainProvider.getAddressFromPublicKey(n); if (e) { var i; var s = Object(o['a'])(e.arrayString); try { for (s.s(); !(i = s.n()).done;) { var u = i.value; var d = JSON.stringify(u); if (d.length > 1024) throw new Error('length message'); var f = r['a'].prototype.$blockchainProvider.transferTransaction(a, [], c['PlainMessage'].create(d)); t.push(f) } } catch (l) { s.e(l) } finally { s.f() } } return t } function p (e) { var n = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/; return n.test(e) } function g (e) { return new Promise(function (n) { var t = { msj: null, status: !0 }; var o = new Image(); o.src = e, o.addEventListener('load', function () { var e = r['a'].prototype.$configForm.iconMosaic(); t = o.width === e.width && o.height === e.height ? { msj: 'success', status: !0 } : { msj: 'image must be ('.concat(e.width, 'x').concat(e.height, ')'), status: !1 }, n(t) }) }) } }, 9: function (e, n) {}, '99a0': function (e, n, t) { 'use strict'; t.d(n, 'a', function () { return m }); t('a4d3'), t('e01a'), t('d81d'); var o = t('d4ec'); var r = t('bee2'); var c = t('ade3'); var a = t('4360'); var i = t('2b0e'); var s = t('9d72'); var u = t('1ca7'); var d = t('8050'); var f = (t('4160'), t('a15b'), t('ac1f'), t('1276'), t('159b'), t('09f9')); var l = (function () { function e () { Object(o['a'])(this, e) } return Object(r['a'])(e, null, [{ key: 'destroySubscriptions', value: function () { this.subscription && this.subscription.length > 0 && this.subscription.forEach(function (e) { return e.unsubscribe() }), this.subscription = [] } }, { key: 'subscribeAggregateBondedAdded', value: function (e) { this.subscription.push(e.aggregateBondedAdded.subscribe(function (e) {})) } }, { key: 'subscribeAggregateBondedRemoved', value: function (e) { this.subscription.push(e.aggregateBondedRemoved.subscribe(function (e) {})) } }, { key: 'subscribeBlockInfo', value: function (e) { this.subscription.push(e.newBlock.subscribe(function (e) { e && a['a'].commit('nodesStoreNew/SET_CURRENT_HEIGHT', e.height.compact()) })) } }, { key: 'subscribeCosignatureAdded', value: function (e) { this.subscription.push(e.cosignatureAdded.subscribe(function (e) {})) } }, { key: 'subscribeConfirmed', value: function (n) { this.subscription.push(n.confirmed.subscribe(function (n) { n && (e.showMsgAndChangeStatus(f['a'].ws.confirmed, 'success'), a['a'].commit('transactionsStore/SET_CONFIRMED', n)) })) } }, { key: 'subscribeUnconfirmedAdded', value: function (n) { this.subscription.push(n.unconfirmedAdded.subscribe(function (n) { n && (e.showMsgAndChangeStatus(f['a'].ws.unconfirmed, 'success'), a['a'].commit('transactionsStore/SET_UNCONFIRMED_ADDED', n)) })) } }, { key: 'subscribeUnconfirmedRemoved', value: function (e) { this.subscription.push(e.unconfirmedRemoved.subscribe(function (e) {})) } }, { key: 'subscribeStatus', value: function (n) { this.subscription.push(n.status.subscribe(function (n) { n && (e.showMsgAndChangeStatus(n.status.split('_').join(' '), 'errorIntense'), a['a'].commit('transactionsStore/SET_STATUS', n.hash)) })) } }, { key: 'showMsgAndChangeStatus', value: function (e, n) { a['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: e, color: n }) } }, { key: 'subscribeAllChannels', value: function (e) { this.destroySubscriptions(), this.subscribeAggregateBondedAdded(e), this.subscribeAggregateBondedRemoved(e), this.subscribeBlockInfo(e), this.subscribeCosignatureAdded(e), this.subscribeConfirmed(e), this.subscribeUnconfirmedAdded(e), this.subscribeUnconfirmedRemoved(e), this.subscribeStatus(e) } }]), e }()); Object(c['a'])(l, 'subscription', []); var m = (function () { function e () { Object(o['a'])(this, e) } return Object(r['a'])(e, null, [{ key: 'destroySubscription', value: function () { this.statusNodeSubscription && this.statusNodeSubscription.unsubscribe() } }, { key: 'connect', value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null; a['a'].commit('nodesStoreNew/STOPPED_BY_USER', !1), a['a'].getters['walletStore/currentWallet'].accounts || this.closeConnection(), a['a'].getters['nodesStoreNew/nodeStatus'] !== u['TypeStatusNode'].NODE_CONNECTING && (this.initTimeoutLimitConnection(), this.closeConnection(u['TypeStatusNode'].NODE_CONNECTING), a['a'].commit('nodesStoreNew/SET_CURRENT_NODE', e), this.connectionSocket()) } }, { key: 'connectionSocket', value: function () { var e = this; if (a['a'].getters['walletStore/currentWallet'].accounts) { this.initObjApiConnection(); var n = a['a'].getters['nodesStoreNew/nodesList']; this.objApiConnection.addNodeToList(n); var t = a['a'].getters['nodesStoreNew/currentNode']; this.objApiConnection.selectNode(t).then(function () { var n, t; a['a'].commit('nodesStoreNew/SET_DATA_NODE', { uri: ((n = e.objApiConnection) === null || void 0 === n ? void 0 : n.currentNode) || '', height: e.objApiConnection.height ? (t = e.objApiConnection.height) === null || void 0 === t ? void 0 : t.compact() : null, generationHash: e.objApiConnection.generationHash, networkType: e.objApiConnection.networkType }), e.initObjWebsocketConnection(), e.subscribeStatusNode(), e.objWebsocketConnection.connect(!0).then(function () { a['a'].commit('nodesStoreNew/ADD_RETRY_CONNECTION', 0), e.objApiConnection.apiInstances(); var n = a['a'].getters['walletStore/currentWallet'].accounts.map(function (e) { return new d['Address'](e.simpleWallet.address.address, e.simpleWallet.address.networkType) }); e.objWebsocketConnection.monitorAllChannels(n), l.subscribeAllChannels(e.objWebsocketConnection), a['a'].commit('nodesStoreNew/SET_STATUS_NODE', u['TypeStatusNode'].NODE_ACTIVE) }).catch(function (n) { console.error('Error to connect', n), e.objWebsocketConnection.closeConnectionWs(), e.objApiConnection.destroyDataNode() }) }).catch(function (e) { return console.error('Ha ocurrido un error:', e) }) } else console.error('Usted no posee una llave pública') } }, { key: 'initTimeoutLimitConnection', value: function () { console.log('\n initTimeoutLimitConnection \n'), console.log('check is open ', this.objWebsocketConnection && this.objWebsocketConnection.checkIsOpenConnection()); var e = this; this.timeoutLimitConnection = setTimeout(function () { console.log('validate time out.....'); try { e.clearTimeoutLimitConnection(), console.log('check is open ', e.objWebsocketConnection && e.objWebsocketConnection.checkIsOpenConnection()), e.objWebsocketConnection && e.objWebsocketConnection.checkIsOpenConnection() || (console.log('close connection, connection lazy!'), e.closeConnection()) } catch (n) { e.closeConnection() } }, 18e3) } }, { key: 'clearTimeoutLimitConnection', value: function () { this.timeoutLimitConnection && (clearTimeout(this.timeoutLimitConnection), this.timeoutLimitConnection = null) } }, { key: 'closeConnection', value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u['TypeStatusNode'].NODE_OFF; var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null; var o = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]; a['a'].dispatch('nodesStoreNew/closeWebsocket', e), this.destroySubscription(), this.objWebsocketConnection !== null && void 0 !== this.objWebsocketConnection && (this.objWebsocketConnection.closeConnectionWs(), this.objWebsocketConnection.destroyDataNode(), this._objWebsocketConnection = null), this.objApiConnection !== null && void 0 !== this.objApiConnection && (this._objApiConnection = null), n && a['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: t, color: o ? 'errorIntense' : '' }) } }, { key: 'deleteNodes', value: function (e) {} }, { key: 'initObjApiConnection', value: function () { this._objApiConnection = new s['ApiConnection']() } }, { key: 'initObjWebsocketConnection', value: function () { this._objWebsocketConnection = new u['WebsocketConnection']() } }, { key: 'saveNodes', value: function (e) { return i['a'].axios.post('/api/nodes/create', { description: e.description, node: e.node, identification_type: e.identificationType }, a['a'].getters['nodesStoreNew/configHttp']) } }, { key: 'subscribeStatusNode', value: function () { var e = this; this.destroySubscription(), this.objWebsocketConnection && (this.statusNodeSubscription = this.objWebsocketConnection.statusNode.subscribe(function (n) { a['a'].commit('nodesStoreNew/SET_STATUS_NODE', n); var t = n === u['TypeStatusNode'].NODE_STUCK; var o = n === u['TypeStatusNode'].NODE_SYNCHRONIZING; var r = n === u['TypeStatusNode'].NODE_OFF; (t || o || r) && (e.destroySubscription(), e.objWebsocketConnection && e.objWebsocketConnection.checkIsOpenConnection() && ((t || o) && a['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: t ? f['a'].nodes.error.stuck : f['a'].nodes.error.sync, color: 'errorIntense' }), e.closeConnection())) })) } }, { key: 'searchCustomNodes', value: function () { return i['a'].axios.get('/api/nodes/get-all', a['a'].getters['nodesStoreNew/configHttp']) } }, { key: 'objApiConnection', get: function () { return this._objApiConnection } }, { key: 'objWebsocketConnection', get: function () { return this._objWebsocketConnection } }]), e }()); Object(c['a'])(m, 'timeoutLimitConnection', null), Object(c['a'])(m, '_objApiConnection', null), Object(c['a'])(m, '_objWebsocketConnection', null), Object(c['a'])(m, 'statusNodeSubscription', null), Object(c['a'])(m, 'connecto', null) }, '9d72': function (e, n, t) { 'use strict'; var o = t('970b'); var r = t('5bc3'); var c = t('ed6d'); var a = t('2d0d'); Object.defineProperty(n, '__esModule', { value: !0 }), n.ApiConnection = void 0; var i = t('dde2'); var s = t('b2c0'); var u = t('b358'); var d = t('c288'); var f = (function (e) { c(t, e); var n = a(t); function t () { return o(this, t), n.apply(this, arguments) } return r(t, [{ key: 'apiInstances', value: function () { if (!this.currentNode || this.currentNode === '') throw 'The url cannot be empty when instantiating api nodes'; this.accountHttp = new i.AccountHttp(this.currentNode), this.blockHttp = new s.BlockHttp(this.currentNode), this.transactionHttp = new u.TransactionHttp(this.currentNode) } }, { key: 'getBlockInfo', value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1; var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ''; if (this.blockHttp) return this.blockHttp.getBlockByHeight(e); if (!n) throw new Error('You must add a node'); var t = new s.BlockHttp(n); return t.getBlockByHeight(e) } }]), t }(d.Connection)); n.ApiConnection = f }, a4b7: function (e, n, t) { 'use strict'; t.d(n, 'b', function () { return s }), t.d(n, 'a', function () { return m }), t.d(n, 'f', function () { return h }), t.d(n, 'e', function () { return k }), t.d(n, 'd', function () { return d }), t.d(n, 'c', function () { return u }); t('99af'), t('4de4'), t('7db0'), t('4160'), t('d81d'), t('b0c0'), t('159b'), t('96cf'); var o = t('b85c'); var r = t('1da1'); var c = t('2b0e'); var a = t('4360'); var i = t('fa85'); function s (e) { var n = { sell: [], buy: [] }; var t = []; var o = []; var r = e.items.itemBuy; var i = e.items.itemSell; t = i ? i.data.map(function (e) { return e.price }) : [], o = r ? r.data.map(function (e) { return e.price }) : [], i && (n.buy = i.data), r && (n.sell = r.data); var s = t.concat(o); var u = l(s, e.info.mosaicInfo[0].mosaicInfo.properties.divisibility); var d = { tableData: { graphic: [], text: e.info.text, type: 'sell', averagePrice: u, info: e.info, priceArray: s, twentyFourChange: { percentChange: 0, act: null } }, allOffers: n }; var f = a['a'].getters['offersStore/offerAll']; f.find(function (n) { return n.tableData.text === e.info.text }) ? a['a'].commit('offersStore/UPDATE_OFFER_ALL', d) : a['a'].commit('offersStore/PUSH_OFFER_ALL', d), a['a'].commit('offersStore/UPDATE_OFFER_BOOLEAN'), a['a'].dispatch('socketDbStore/getOffertTxFromIdHexMosaic', { io: c['a'].prototype.$socket, data: { mosaicIdHex: e.info.mosaicIdHex, minutesFilter: 720 } }) } function u (e) { var n = { mosaicIdHex: null, valueGraphic: [] }; n.mosaicIdHex = e[0].mosaicIdHex, n.valueGraphic = e.map(function (e) { return f(e.cost) / f(e.mosaicAmount) }), a['a'].commit('offersStore/UPDATE_OFFER_GRAPHIC_CHANGE', n) } function d (e) { var n = { mosaicIdHex: null, percentChange: 0, act: null }; if (e.length > 1) { var t = c['a'].prototype.$generalService.sortByKey(e, 'timestamp'); var o = t[0]; var r = t[t.length - 1]; var i = new Date(o.timestamp); var s = new Date(r.timestamp); var u = s.getTime() - i.getTime(); var d = Math.round(u / 6e4); if (d >= 720) { var l = f(o.cost); var m = f(o.mosaicAmount); var h = l / m; var p = f(r.cost); var g = f(r.mosaicAmount); var v = p / g; var b = h - v; var k = b / h; n.mosaicIdHex = o.mosaicIdHex, n.percentChange = Math.abs(100 * k), n.act = k <= 0 ? 'positive' : 'negative' } }a['a'].commit('offersStore/UPDATE_OFFER_TWENTY_FOUR_CHANGE', n) } function f (e) { return c['a'].prototype.$blockchainProvider.getUint64([e['lower'], e['higher']]).compact() } function l (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1; var t = 0; var o = c['a'].prototype.$generalService.addZerosQuantity(n, 1); return e.forEach(function (e) { var n = o * e; t += n }), c['a'].prototype.$generalService.amountFormatter(t / e.length) } function m (e) { if (e) return e.text = e.mosaicIdHex, e.mosaicInfo !== null && void 0 !== e.mosaicInfo && e.mosaicInfo[0] && e.mosaicInfo[0].mosaicNames.names.length > 0 && (e.text = e.mosaicInfo[0].mosaicNames.names[0].name), e } function h (e, n) { return p.apply(this, arguments) } function p () { return p = Object(r['a'])(regeneratorRuntime.mark(function e (n, t) { var o, r, s, u, d, f, l, m, h, p, k; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, e.next = 3, c['a'].prototype.$blockchainProvider.getOutgoingTransactions(n.owner).toPromise(); case 3:o = e.sent, r = g(i['TransactionType'].ADD_EXCHANGE_OFFER, o), s = v(r, n, t), u = a['a'].getters['nodesStoreNew/currentHeight'], d = b(s, n, t), f = s[0].transactionInfo.height.compact(), l = null, m = 0; case 11:if (!(m < d.length)) { e.next = 24; break } if (h = d[m], p = u - f, k = h.duration.compact() - p, !(p >= h.duration.compact())) { e.next = 20; break } return l = { expire: !0, infoExpire: 0 }, e.abrupt('break', 24); case 20:l = { expire: !1, infoExpire: { expireInitial: k, blockHeight: f, duration: h.duration.compact() } }; case 21:m++, e.next = 11; break; case 24:return e.abrupt('return', l); case 27:e.prev = 27, e.t0 = e['catch'](0); case 29:return e.abrupt('return', !0); case 30:case 'end':return e.stop() } }, e, null, [[0, 27]]) })), p.apply(this, arguments) } function g (e) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; var t = n.filter(function (n) { return n.type === e }); return t } function v (e, n, t) { var r; var c = []; var a = Object(o['a'])(e); try { for (a.s(); !(r = a.n()).done;) { var i = r.value; var s = i.offers.filter(function (e) { return e.mosaicId.toHex() === n.mosaicId.toHex() && e.cost.compact() === n.initialCost.compact() && e.mosaicAmount.compact() === n.initialAmount.compact() && e.type === t }); s.length > 0 && c.push(i) } } catch (u) { a.e(u) } finally { a.f() } return c } function b (e, n, t) { var r; var c = []; var a = Object(o['a'])(e); try { for (a.s(); !(r = a.n()).done;) { var i = r.value; var s = i.offers.find(function (e) { return e.mosaicId.toHex() === n.mosaicId.toHex() && e.cost.compact() === n.initialCost.compact() && e.mosaicAmount.compact() === n.initialAmount.compact() && e.type === t }); s && c.push(s) } } catch (u) { a.e(u) } finally { a.f() } return c } function k (e) { a['a'].dispatch('socketDbStore/UPDATE_MOSAICS_INFO', e) } }, a988: function (e, n, t) { 'use strict'; t.d(n, 'a', function () { return f }), t.d(n, 'c', function () { return p }), t.d(n, 'd', function () { return g }), t.d(n, 'e', function () { return v }), t.d(n, 'f', function () { return y }), t.d(n, 'h', function () { return E }), t.d(n, 'g', function () { return T }), t.d(n, 'b', function () { return k }), t.d(n, 'j', function () { return O }), t.d(n, 'i', function () { return N }); t('99af'), t('4de4'), t('7db0'), t('4160'), t('d81d'), t('fb6a'), t('b0c0'), t('a9e3'), t('d3b7'), t('3ca3'), t('159b'), t('ddb0'), t('2b3db'), t('96cf'); var o = t('b85c'); var r = t('1da1'); var c = t('2b0e'); var a = t('4360'); var i = t('439d'); var s = t('5220'); var u = t('3452'); var d = t('99a0'); function f (e) { return l.apply(this, arguments) } function l () { return l = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t; var r; var s; var u; var d; var f = this; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (t = [], void 0 === n || n === null) { e.next = 7; break } if (!(n.mosaics.length > 0)) { e.next = 7; break } return e.next = 5, Object(i['e'])(n.mosaics.map(function (e) { return e.id })); case 5:if (r = e.sent, r.length > 0) { s = Object(o['a'])(r); try { for (d = function () { var e = u.value; var o = { prefix: '', thousands: ',', decimal: '.', precision: '0' }; var r = n.mosaics.find(function (n) { var t = c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).toHex(); return n.id.toHex() === t }); var i = ''; var s = !1; var d = ''; var l = 0; if ('mosaicInfo' in e) { i = c['a'].prototype.$generalService.amountFormatter(r.amount.compact(), e.mosaicInfo.properties.divisibility), l = r.amount.compact(); var m = c['a'].prototype.$blockchainProvider.getUint64([e.mosaicInfo['properties']['duration']['lower'], e.mosaicInfo['properties']['duration']['higher']]); o.precision = e.mosaicInfo['properties']['divisibility']; var h = c['a'].prototype.$blockchainProvider.getUint64([e.mosaicInfo.height.lower, e.mosaicInfo.height.higher]); m.compact() > 0 && f.currentBlock >= m.compact() + h.compact() && (s = !0, d = ' - Expired') } else l = r.amount.compact(), i = c['a'].prototype.$generalService.amountFormatter(r.amount.compact(), 6), d = ' - Expired', s = !0; var p = c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).id.toHex(); var g = p !== a['a'].getters.environment.mosaic.id; if (g) { var v = c['a'].prototype.$blockchainProvider.getMosaicId(e.idMosaic).toHex(); var b = e.mosaicNames.names.length > 0 ? e.mosaicNames.names[0].name : v; t.push({ text: ''.concat(b).concat(d, ' > Balance: ').concat(i), nameMosaic: b, mosaic: e.idMosaic, mosaicIdHex: p, balance: i, balanceValidate: l, expired: !1, selected: !1, disabled: s, config: o }) } }, s.s(); !(u = s.n()).done;)d() } catch (l) { s.e(l) } finally { s.f() } } case 7:a['a'].commit('accountStore/SET_BUILD_CURRENT_ACCOUNT_MOSAIC', t); case 8:case 'end':return e.stop() } }, e) })), l.apply(this, arguments) } function m (e) { return h.apply(this, arguments) } function h () { return h = Object(r['a'])(regeneratorRuntime.mark(function e (n) { var t, o, i, s; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return a['a'].dispatch('showLIW', { show: !0, text: 'Accounts info', type: 'accountInfo' }), t = 0, o = [], i = [], s = new Promise(function () { var e = Object(r['a'])(regeneratorRuntime.mark(function e (a) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:n.forEach(function (e) { var s = c['a'].prototype.$blockchainProvider.createRawAddress(e.simpleWallet.address['address']); c['a'].prototype.$blockchainProvider.getAccountInfo(s).subscribe((function () { var c = Object(r['a'])(regeneratorRuntime.mark(function r (c) { var s; return regeneratorRuntime.wrap(function (r) { while (1) switch (r.prev = r.next) { case 0:c && (c.mosaics.map(function (e) { return e.id }).forEach(function (e) { var n = o.find(function(n){return n.id.toHex()===e.toHex()}); n || o.push(e) }), s = { name: e.name, accountInfo: c, multisigInfo: null }, i.push(s), A([s], !0), t += 1, n.length === t && a({ mosaicsId: o, accountsInfo: i })); case 1:case 'end':return r.stop() } }, r) })); return function (e) { return c.apply(this, arguments) } }()), function () { var r = { name: e.name, accountInfo: null, multisigInfo: null }; i.push(r), A([r], !0), t += 1, n.length === t && a({ mosaicsId: o, accountsInfo: i }) }) }); case 1:case 'end':return e.stop() } }, e) })); return function (n) { return e.apply(this, arguments) } }()), e.abrupt('return', s); case 6:case 'end':return e.stop() } }, e) })), h.apply(this, arguments) } function p (e) { var n = T(e.walletName, e.network); if (void 0 === n || n === null) { var t = null; if (e.privateKey) { var o = c['a'].prototype.$blockchainProvider.getPrefixAndPrivateKey(e.privateKey); t = c['a'].prototype.$blockchainProvider.createSimpleWalletFromPrivateKey(e.walletName, e.password, o.pvk, e.network) } else t = c['a'].prototype.$blockchainProvider.createSimpleWallet(e.walletName, e.password, e.network); var r = g(t, e.password); if (r.privateKey) { var i = c['a'].prototype.$blockchainProvider.getAccountFromPrivateKey(r.privateKey, t.network); var s = { default: e.default, firstAccount: e.firstAccount, name: 'Primary', simpleWallet: t, publicKey: i.publicAccount.publicKey }; var u = { username: e.walletName, accounts: [s] }; var d = E(); d.push(u); var f = a['a'].getters.pseudonymApp; return c['a'].prototype.$browserStorage.set(''.concat(a['a'].getters.environment.keyLocalStore.key, '-wallets-').concat(f), JSON.stringify(d)), a['a'].commit('walletStore/SET_CURRENT_WALLET', u), { status: !0, data: u, pvk: r.privateKey } } return { status: !1, msg: 'Error to decrypt wallet' } } return { status: !1, msg: 'Wallet name already exists, try another name' } } function g (e, n) { var t = { password: n }; var o = { algo: 'pass:bip32', encrypted: e.encryptedPrivateKey.encryptedKey, iv: e.encryptedPrivateKey.iv }; var r = c['a'].prototype.$blockchainProvider.decryptPrivateKey(t, o); return r && r.status ? t : (a['a'].dispatch('showMSG', { snackbar: !0, text: r.msg, color: 'error' }), r.status) } function v () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null; var n = { address: e.simpleWallet.address.address, algo: 'pass:bip32', balance: null, brain: !0, default: !1, encrypted: e.simpleWallet.encryptedPrivateKey.encryptedKey, firstAccount: !1, isMultisign: null, iv: e.simpleWallet.encryptedPrivateKey.iv, mosaics: null, name: e.name, network: e.simpleWallet.network, nis1Account: null, publicAccount: c['a'].prototype.$blockchainProvider.createPublicAccount(e.publicKey, e.simpleWallet.network) }; var t = Object.assign({}, n); var o = []; o.push(t); var r = { name: ''.concat(a['a'].getters['walletStore/nameCurrentWallet'], '_').concat(t.name), accounts: o }; r.accounts[0].name = 'Primary_Account', r.accounts[0].firstAccount = !0, r.accounts[0].default = !0; var i = u['enc'].Utf8.parse(JSON.stringify(r)); var s = u['enc'].Base64.stringify(i); var d = Date.now(); var f = new Date(d); var l = f.getFullYear(); var m = f.getMonth() + 1 < 10 ? '0'.concat(f.getMonth() + 1) : f.getMonth() + 1; var h = f.getDate() < 10 ? '0'.concat(f.getDate()) : f.getDate(); var p = new Blob([s], { type: '' }); var g = window.URL.createObjectURL(p); var v = document.createElement('a'); v.style.display = 'none', v.href = g, v.download = ''.concat(r.name, '_').concat(l, '-').concat(m, '-').concat(h, '.wlt'), document.body.appendChild(v), v.click(), window.URL.revokeObjectURL(g) } function b () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null; if (e) return e.accounts.find(function (e) { return !0 === e.default }); var n = a['a'].getters['walletStore/currentWallet']; return n && n.accounts.length > 0 ? n.accounts.find(function (e) { return !0 === e.default }) : null } function k (e, n) { var t = E(); t.forEach(function (t) { t.username === e && (a['a'].commit('walletStore/SET_NAME_CURRENT_WALLET', n), t.username = n) }), c['a'].prototype.$browserStorage.set(''.concat(a['a'].getters.environment.keyLocalStore.key, '-wallets-').concat(a['a'].getters.pseudonymApp), JSON.stringify(t)) } function T (e) { var n = E(); return n && n.length > 0 ? n.find(function (n) { return n.username === e }) : null } function E () { var e = a['a'].getters.pseudonymApp; if (e !== '') { var n = c['a'].prototype.$browserStorage.get(''.concat(a['a'].getters.environment.keyLocalStore.key, '-wallets-').concat(e)); return n ? JSON.parse(n) : (c['a'].prototype.$browserStorage.set(''.concat(a['a'].getters.environment.keyLocalStore.key, '-wallets-').concat(e), []), []) } return [] } function N (e, n) { var t = 'Dear user, the wallet is missing'; if (e) { var o = Object.assign({}, e.accounts.find(function (e) { return !0 === e.firstAccount })); if (o) if (g(o.simpleWallet, n)) { var r = a['a'].getters.environment.connectionNodes; var i = c['a'].prototype.$blockchainProvider.filterNetworkTypeFromString(r.networkType); if (e.accounts.find(function (e) { return e.simpleWallet.network !== i }))t = 'Account not allowed for this network'; else { var s = b(e); if (s) return a['a'].commit('walletStore/SET_CURRENT_WALLET', e), a['a'].commit('accountStore/SET_CURRENT_ACCOUNT', s), a['a'].commit('mosaicStore/SET_MOSAICS', []), a['a'].commit('socketDbStore/EVENT_UNCHANGED', null), a['a'].commit('socketDbStore/EVENT_INSERTED', null), a['a'].commit('offersStore/SET_OFFER_ALL', []), a['a'].commit('nodesStoreNew/RECONNECT', !1), a['a'].commit('nodesStoreNew/ADD_NODES', r, !1, { root: !0 }), d['a'].connect(), !0 } } else t = 'Invalid password'; else t = 'You can not set anything like the current wallet' } return a['a'].dispatch('showMSG', { snackbar: !0, text: t, color: 'error' }), !1 } function y (e) { Object(s['f'])(e), m(e).then(function (e) { S(), e.mosaicsId && e.mosaicsId.length > 0 && (a['a'].dispatch('mosaicStore/GET_MOSAICS_METADATA', e.mosaicsId), Object(i['h'])(e.mosaicsId)) }).catch(function () {}) } function A (e) { var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; var t = a['a'].getters['accountStore/accountsInfo']; var r = t && t.length > 0 ? t.slice(0) : []; var c = null; if (n) { var i; var s = Object(o['a'])(e); try { var u = function () { var e = i.value; r = r.filter(function (n) { return n.name !== e.name }), r.push(e) }; for (s.s(); !(i = s.n()).done;)u() } catch (d) { s.e(d) } finally { s.f() }c = r } else c = e; a['a'].commit('accountStore/SET_INFO_ACCOUNT', c), a['a'].dispatch('showLIW', { show: !1, text: 'Accounts info', type: null }) } function O (e) { return !(Number(e) > a['a'].getters['accountStore/balanceCurrentAccount']) || (a['a'].commit('SHOW_SNACKBAR', { snackbar: !0, text: 'Insufficient balance', color: 'warning' }), !1) } function S () { var e = a['a'].getters['accountStore/currentAccount']; var n = a['a'].getters['accountStore/accountsInfo']; var t = n.find(function (n) { return n.name === e.name }); var o = 0; if (t && t.accountInfo) { var r = a['a'].getters.environment.mosaic.id; var c = t.accountInfo.mosaics.find(function (e) { return e.id.toHex() === r }); c && (o = c.amount.compact()) }a['a'].commit('accountStore/SET_BALANCE_CURRENT_ACCOUNT', o) } }, c288: function (e, n, t) { 'use strict'; t('99af'), t('4de4'), t('7db0'), t('d3b7'); var o = t('6374'); var r = t('970b'); var c = t('5bc3'); Object.defineProperty(n, '__esModule', { value: !0 }), n.Connection = void 0; var a = t('b2c0'); var i = t('fe8c'); var s = t('3697'); var u = (function () { function e () { r(this, e), this.testing = !1 } return c(e, [{ key: 'assignBlockInfokByHeight', value: function (e) { var n = this; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1; return new Promise(function (o, r) { var c = new a.BlockHttp(e); c.getBlockByHeight(t).subscribe(function (e) { n.height = e.height, n.generationHash = e.generationHash, n.networkType = e.networkType, o(!0) }, function (e) { return r(e) }) }) } }, { key: 'selectBestNode', value: function () { var e = this; return new Promise(function (n, t) { e.nodeList.length === 0 && t('You must add a node'); var r; var c = []; var a = o(e.nodeList); try { var i = function () { var o = r.value; e.getBlockchainHeight(o).then(function (r) { c.push({ node: o, height: r }); try { var a = e.validateRangeNode(c); a && n(a) } catch (i) { t(i) } }).catch(function (r) { c.push({ node: o, height: null }); try { var a = e.validateRangeNode(c); a && n(a) } catch (r) { t(r) } }) }; for (a.s(); !(r = a.n()).done;)i() } catch (s) { a.e(s) } finally { a.f() } }) } }, { key: 'validateRangeNode', value: function (e) { if (this.nodeList.length === e.length) { var n = e.filter(function (e) { return e.height }); if (n.length > 0) { var t = n.sort(function (e, n) { return (n.height && n.height.compact()) - (e.height && e.height.compact()) }); if (t && t.length > 0 && t[0].height && t[0].height.compact() > 0) return t[0]; throw 'The node is synchronizing' } throw 'Please check the node or internet connection' } return null } }, { key: 'addNodeToList', value: function (n) { var t; var r = this; var c = []; var a = o(n); try { for (a.s(); !(t = a.n()).done;) { var i = t.value; try { (function () { var n = s.Utilities.validateURL(i); var t = ''.concat(n.protocol, '://').concat(n.domainIp); if (r.nodeList.find(function (e) { return e === t })) throw 'Node already exists'; e._nodeList.push(t) })() } catch (u) { c.push({ node: i, error: u }) } } } catch (d) { a.e(d) } finally { a.f() } return c } }, { key: 'destroyDataNode', value: function () { this.height = null, this.generationHash = null, this.networkType = null, this.currentNode = '', e._nodeList = [], s.Utilities.logs('Values in connection, has be destroyed!') } }, { key: 'selectNode', value: function (e) { var n = this; if (!this.testing) return this.testing = !0, new Promise(function (t, o) { if (s.Utilities.logs('Testing node....', e), e) { var r = s.Utilities.buildNodeURL(e); r || o(r), n.assignBlockInfokByHeight(r).then(function (e) { n.addNodeToList([r]), n.currentNode = r, n.testing = !1, t(e) }).catch(function (e) { n.testing = !1, o(e) }) } else n.selectBestNode().then(function (e) { n.assignBlockInfokByHeight(e.node).then(function (o) { n.currentNode = e.node, n.height = e.height, n.testing = !1, t(o) }).catch(function (e) { n.testing = !1, o(e) }) }).catch(function (e) { n.testing = !1, o(e) }) }) } }, { key: 'getBlockchainHeight', value: function (e) { return new Promise(function (n, t) { var o = new i.ChainHttp(e); o.getBlockchainHeight().subscribe(function (e) { n(e) }, function (e) { t(e) }) }) } }, { key: 'currentNode', set: function (n) { e._currentNode = n }, get: function () { return e._currentNode } }, { key: 'height', set: function (n) { e._height = n }, get: function () { return e._height } }, { key: 'generationHash', set: function (n) { e._generationHash = n }, get: function () { return e._generationHash } }, { key: 'networkType', set: function (n) { e._networkType = n }, get: function () { return e._networkType } }, { key: 'nodeList', get: function () { return e._nodeList } }]), e }()); n.Connection = u, u._currentNode = '', u._nodeList = [], u._height = null } })
// # sourceMappingURL=app.b41fc036.js.map
