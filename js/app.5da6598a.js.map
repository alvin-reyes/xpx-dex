{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/services/messages.js","webpack:///./src/store/modules/account-store.js","webpack:///./src/store/modules/wallet-store.js","webpack:///./src/store/modules/app-core-store.js","webpack:///./src/store/modules/namespace-store.js","webpack:///./src/store/modules/mosaic-store.js","webpack:///./src/store/modules/socket-db-store.js","webpack:///./src/store/modules/mosaic-exchange.js","webpack:///./src/store/modules/socket-bc-store.js","webpack:///./src/store/modules/offers-store.js","webpack:///./src/core/store/nodes-store.js","webpack:///./src/core/store/transactions-store.js","webpack:///./src/core/store/coingecko-store.js","webpack:///./src/core/store/onLine-store.js","webpack:///./src/core/store/nodes-store-new.js","webpack:///./src/store/index.js","webpack:///./src/services/mosaics-service.js","webpack:///./src/services/namespace-service.js","webpack:///./src/App.vue?6db0","webpack:///./src/mixins/monitor-nodes-txn-mixin.js","webpack:///src/App.vue","webpack:///./src/App.vue?3359","webpack:///./src/App.vue","webpack:///./src/router/index.js","webpack:///./src/plugins/vuetify.js","webpack:///./src/core/utils/browserStorage.js","webpack:///./src/core/utils/connection.js","webpack:///./src/core/utils/blockchainProvider.js","webpack:///./src/core/utils/configForm.js","webpack:///./src/core/utils/websocketProvider.js","webpack:///./src/core/utils/general.js","webpack:///./src/filters/index.js","webpack:///./src/directives/index.js","webpack:///./src/core/appConfig/nodes-config.js","webpack:///./src/main.js","webpack:///./src/services/icon-mosaic-service.js","webpack:///./src/services/blockchain/websocket-service.js","webpack:///./src/services/blockchain/node-service.js","webpack:///./src/services/offert-service.js","webpack:///./src/services/account-wallet-service.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","ws","aggregateBondedAdded","aggregateBondedRemoved","cosignatureAdded","confirmed","unconfirmed","unconfirmedRemoved","login","success","welcomeToProxiEDI","invalidUserOrPassword","accountActivation","accountSent","general","copy","nodes","statusNode","online","offline","connecting","stuck","sync","off","valid","exist","company","activate","deleted","edited","users","update","delete","accountStore","namespaced","state","accountsInfo","currentAccount","balanceCurrentAccount","totalBalance","dataUser","isLogged","mosaicBuild","getters","accountInfoByNameAccount","nameAccount","find","next","accountInfoByAdress","byAddress","found","forEach","element","accountInfo","address","pretty","userData","balanceAccount","idFilter","amountTotal","mosaics","mosaic","id","toHex","amount","compact","simpleWallet","mutations","LOGIN","username","accounts","SET_INFO_ACCOUNT","SET_BALANCE_CURRENT_ACCOUNT","SET_CURRENT_ACCOUNT","SET_TOTAL_BALANCE","UPDATE_DATA_USER","CHANGE_NAME_USER","SET_BUILD_CURRENT_ACCOUNT_MOSAIC","actions","LOGOUT","commit","walletStore","currentWallet","nameCurrentWallet","SET_CURRENT_WALLET","SET_NAME_CURRENT_WALLET","appCoreStore","drawer","color","image","SET_DRAWER","SET_COLOR","namespaceStore","loading","namespaces","idToHex","namespaceInfo","namespaceName","namespacesFromAddress","sort","a","b","filter","owner","LOADING","SET_NAMESPACES","mosaicStore","metadata","iconMosaic","mosaicDescription","SET_MOSAICS","SET_MOSAIC_ICON","PUSH_MOSAIC_ICON","findMosaicIcon","x","mosaicId","iconBase64","PUSH_MOSAICS_DESCRIPTION","description","SET_METADATA","othersMosaics","item","mosaicInfo","GET_MOSAICS_METADATA","dispatch","_vm","$blockchainProvider","getMosaicMetadata","toPromise","GET_MOSAICS_ICON","fliterFields","fields","getTransactionId","tx","typeTransactions","aggregateComplete","base64IconFromAggregateTx","metadataId","GET_MOSAICS_DESCRIPTION","socketDbStore","offersTx","newOffersTx","mosaicsInfOffer","loadingInfo","inserted","unchanged","SOCKET_SET_OFFERS","SOCKET_SET_NEW_OFFERS","SOCKET_SET_MOSAIC_INFO","store","EVENT_SET_MOSAIC_INFO","EVENT_PUSH_MOSAIC_INFO","EVENT_LOADING_MOSAIC_INFO","EVENT_INSERTED","EVENT_UNCHANGED","SOCKET_RETURN_INSERT_OFFERT","SOCKET_RETURN_INSERT_EXECUTE_OFFERS","SOCKET_RETURN_INSERT_MOSAIC_INFO","dataDb","log","index","dataOffer","offers","items","offer","mosaicsInfOfferFromIdHex","iDhex","mosaicIdHex","UPDATE_MOSAICS_INFO","root","GET_MOSAICS_INFO","getMosaicId","searchInfoMosaics","SET_MOSAICS_INFO_FOR_OFFER","mosaicHex","this","idMosaic","JSON","parse","stringify","mosaicsInf","getOffertsTx","params","io","emit","getMoisaicsInfo","insertNewOffers","insertExecuteOffers","insertMoisaicsInfo","setMoisaicUnchanged","pushMosaicInfoOffer","mosaicExchange","exchange","dataAssets","exchangeDelete","expire","SET_EXCHANGE","SET_EXCHANGE_DELETE","SET_DATA_ASSETS","SET_EXPIRE","socketBcStore","statusTx","hash","SET_STATUS_TX","statusTxFormHash","offersStore","offerSelected","offerAll","allOfferGet","updateBoolean","offersForPublicKey","SET_OFFER_SELECTED","UPDATE_OFFER_BOOLEAN","SET_OFFER_ALL","PUSH_OFFER_ALL","UPDATE_OFFER_ALL","tableData","info","allOffers","DELETE_OFFER_ALL","GET_EXCHANGE_OFFER","filterAssets","getExchangeOffersfromId","offerBuy","offerSell","itemBuy","itemSell","getAllOffer","nodeStore","currentNode","currentBlock","nodesList","nodeIsLive","nodeStatus","generationHash","networkType","SET_NODE_IS_LIVE","status","SET_CURRENT_BLOCK","height","SET_STATUS_NODE","SET_CURRENT_NODE","SET_NODES_LIST","initNodes","connectionNodes","uri","$websocketProvider","selectNode","uriSelected","instanceConnectionApi","protocol","getBlockInfo","subscribe","blockInfo","$modulesConfig","connectToWebsocket","webSocketConnection","protocolWs","closeWebsocket","closeConnection","transactionsStore","unconfirmedAdded","monitorHashs","filterHash","transactions","transactionInfo","getMonitorHashs","SET_AGGREGATE_BONDED_ADDED","transaction","unshift","SET_AGGREGATE_BONDED_REMOVED","SET_BLOCK_INFO","SET_COSIGNATURE_ADDED","SET_CONFIRMED","SET_UNCONFIRMED_ADDED","SET_UNCONFIRMED_REMOVED","h","SET_STATUS","SET_MONITOR_HASH","filtered","REMOVE_AGGREGATE_BONDED_ADDED_TX","REMOVE_AGGREGATE_BONDED_REMOVED_TX","REMOVE_COSIGNATURE_ADDED_TX","REMOVE_CONFIRMED_TX","REMOVE_UNCONFIRMED_ADDED_TX","REMOVE_UNCONFIRMED_REMOVED_TX","REMOVE_STATUS_TX","REMOVE_ALL_TXN","REMOVE_MONITOR_HASH","coingeckoStore","xpxInformation","typeCurrency","label","xpxToOtherCurrency","fiatCurrency","market_data","current_price","convertToOtherCurrency","balance","balanceConverted","toOtherCurrency","Number","replace","SET_XPX_INFORMATION","searchInformationXPX","rootGetters","url","environment","coingecko","coinToSearch","$http","onLineStore","connected","navigator","onLine","payload","setConnected","nodesStoreNew","currentHeight","customNodes","TypeStatusNode","NODE_OFF","reconnect","configHttp","rootState","headers","Authorization","blockchainNodes","node","identification_type","ADD_NODES","toServer","nToSave","nodeBuilded","SET_DATA_NODE","SET_CURRENT_HEIGHT","SET_GENERATION_HASH","SET_NETWORK_TYPE","RECONNECT","searchNodes","Vue","use","Vuex","Store","configApp","networkSelected","count","showMenu","overlay","loadingInfoWallet","show","text","snackbar","y","nameApp","infoApp","pseudonymApp","version","ADD_CONFIG_APP","ADD_ENVIRONMENT_APP","SHOW_LOADING","SHOW_MENU","SHOW_LOADING_INFO_WALLET","SHOW_SNACKBAR","showMSG","showLIW","buildModifyMetadataTransactionMosaic","modifications","dataRequired","action","modifyMetadataTransactionMosaic","buildMosaicDefinitionTransaction","ownerPublicKey","randomNonce","duration","divisibility","isSupplyMutable","isTransferable","mosaicDefinitionTransaction","buildMosaicSupplyChangeTransaction","mosaicSupplyType","delta","mosaicSupplyChangeTransaction","buildMosaicAliasTransaction","aliasActionType","namespaceId","mosaicAliasTransaction","filterMosaics","mosaicsId","mosaicsFromStore","dataReturn","toSearch","existMosaic","isNamespace","mosaicsSearched","filterMosaicToReturn","infoMosaics","returned","existByNamespace","existByMosaic","mosaicNonceFromPublicKey","publicKey","mosaicNonce","MosaicNonce","createRandom","mosaicsTosaved","findMosaicsByNamespace","getMosaics","mosaicsFound","searchMosaicFromNamespace","otherMosaics","getMosaicsName","mosaicsName","infoMosaic","existMosaicName","lower","higher","names","mosaicNames","saveMosaicStorage","searchMosaicById","savedLinked","getNamespaceId","getLinkedMosaicId","mosaicIdLinked","proximaxProvider","otherMosaicsFound","map","dataFiltered","mosaicIdFiltered","mosaicsStorage","mosaicIdToSaved","elementStorage","getCalRentalFeeMosaic","rentalFee","aliasType","typeAlias","buildRegisterNamespaceTransaction","rootNamespaceName","subnamespaceName","durationsend","$generalService","calculateDurationforDay","registerNamespaceTransaction","getCalRentalFee","durationByBlock","namespace","nameToAssetExample","nameForm","nameNamespace","searchNamespacesFromAccounts","allNamespaces","account","createRawAddress","getNamespaceFromAccount","saveNamespace","validateNamespaceName","isvalid","formatter","toLowerCase","trim","differString","validateRootAndSubNamespace","parantName","childName","typeNamespace","returnValue","subNamespaceName","defaultV","namespacesStorage","getNamespacesName","namespacesFound","namespaceToSaved","namespacesSaved","existNamespace","getCalRentalFeeSubNamespace","subnamespace","_h","$createElement","_c","_self","attrs","model","callback","$$v","$set","expression","_v","_s","on","$event","staticRenderFns","connectionStablished","computed","mapMutations","mapGetters","watch","newValue","Utilities","splitURL","domainIp","allAccounts","$store","getAccountsInfo","$socket","hashs","methods","dataRequiredDb","dataRequiredMosaic","created","addEventListener","mixins","components","component","VApp","VBtn","VOverlay","VProgressCircular","VSnackbar","VueRouter","routes","path","meta","requiresAuth","requiresNotAuth","hideMenu","redirect","router","base","process","beforeEach","to","from","matched","some","record","Vuetify","theme","dark","options","customProperties","minifyTheme","css","themes","light","primary","secondary","accent","warning","darkness","errorIntense","colors","red","darken1","orange","pin","dim","sky","leve","leveint","leveif","inputStyle","chip1","chip2","chip3","storage","localStorage","clear","getItem","set","setItem","Connections","getBuildUrl","accountHttp","AccountHttp","blockHttp","BlockHttp","mosaicHttp","MosaicHttp","metadataHttp","MetadataHttp","namespaceHttp","NamespaceHttp","transactionHttp","TransactionHttp","exchangeHttp","ExchangeHttp","connection","randomNode","announceTx","signedTransaction","announce","aggregateTransaction","innerTransaction","cosignatures","network","AggregateTransaction","createComplete","Deadline","addExchangeOffer","mosaicAmount","costValue","durationValue","UInt64","fromUint","cost","AddExchangeOfferTransaction","AddExchangeOffer","exchangeOffer","publicAccount","ExchangeOfferTransaction","ExchangeOffer","exchangeOfferDb","createPublicAccount","PublicAccount","createFromPublicKey","Address","createFromRawAddress","createSimpleWallet","password","SimpleWallet","createPassword","createSimpleWalletFromPrivateKey","privateKey","createFromPrivateKey","Password","dateFormatUTC","date","Date","toLocaleString","decryptPrivateKey","common","encrypted","msg","crypto","algo","isHW","isValidPrivateKey","isHexadecimal","str","match","filterNetworkTypeFromString","NetworkType","MAIN_NET","MIJIN_TEST","TEST_NET","PRIVATE","filterNetworkTypeFromNumber","getBlockByHeight","getAccountInfo","Idmosaic","MosaicId","getExchangeOffers","getAccountFromPrivateKey","networkV","Account","getAddressFromPublicKey","getMultisigAccountInfo","getTransactionsFromAccount","queryParams","query","QueryParams","transactionId","getTransaction","getIncomingTransactions","incomingTransactions","getOutgoingTransactions","outgoingTransactions","getMosaicsNames","NamespaceId","getPrefixAndPrivateKey","pref","newPrivateKey","pvk","getNamespacesFromAccount","namespaceIds","getNetworkTypes","getEnvironmentByNetworkType","configInfo","getUint64","createFromNonce","MosaicDefinitionTransaction","MosaicProperties","supplyMutable","transferable","MosaicSupplyChangeTransaction","MosaicAliasTransaction","ModifyMetadataTransaction","createWithMosaicId","registerNamespaceTx","deadline","RegisterNamespaceTransaction","createRootNamespace","createSubNamespace","publicAccountFromPublicKey","removeExchangeOffer","RemoveExchangeOfferTransaction","RemoveExchangeOffer","sign","transfer","TransactionType","TRANSFER","registerNamespace","REGISTER_NAMESPACE","mosaicDefinition","MOSAIC_DEFINITION","mosaicSupplyChange","MOSAIC_SUPPLY_CHANGE","modifyMultisigAccount","MODIFY_MULTISIG_ACCOUNT","AGGREGATE_COMPLETE","aggregateBonded","AGGREGATE_BONDED","lock","LOCK","secretLock","SECRET_LOCK","secretProof","SECRET_PROOF","mosaicAlias","MOSAIC_ALIAS","addressAlias","ADDRESS_ALIAS","modifyAccountPropertyAddress","MODIFY_ACCOUNT_PROPERTY_ADDRESS","modifyAccountPropertyMosaic","MODIFY_ACCOUNT_PROPERTY_MOSAIC","modifyAccountPropertyEntityType","MODIFY_ACCOUNT_PROPERTY_ENTITY_TYPE","linkAccount","LINK_ACCOUNT","modifyAccountMetadata","MODIFY_ACCOUNT_METADATA","modifyMosaicMetadata","MODIFY_MOSAIC_METADATA","modifyNamespaceMetadata","MODIFY_NAMESPACE_METADATA","transferTransaction","recipient","TransferTransaction","generalConfig","img","width","size","typeForm","min","max","supply","maxTex","descriptionAsset","walletAccountName","assemblyConfig","icon","inputType","rules","showIcon","showConfirm","assemblyConfigFile","config","assign","required","v","buildButton","textColor","disabled","getConfigMoney","decimal","thousands","prefix","suffix","precision","masked","isMatch","value1","value2","nameValidation","validatePvk","connector","timeOut","cacheBlock","checking","nodesConfig","messages","buildUrl","Listener","WebSocket","openConnection","showMsgAndChangeStatus","checkIsOpenConnection","isOpen","checkNodeIsLive","clearTimeOutTime","timeOutNewBlocks","timeValidateSynchronization","close","terminate","getBlocks","newBlock","block","getAggregateBondedAdded","arrayAddress","getAggregateBondedRemoved","getCosignatureAdded","getConfirmed","getUnconfirmedAdded","getUnconfirmedRemoved","getStatus","split","join","monitorAllChannels","addressArray","open","changeStatus","nodeSelected","Math","floor","random","amountFormatter","pow","minimumFractionDigits","formValue","cant","parseFloat","toString","toFixed","formValueParse","price","quantityStringToInt","String","addZerosQuantity","buildBoxServices","title","route","children","viewChildren","className","buildTableHeader","sortable","calculateDurationExpire","durationCompact","seconds","days","hrs","mnts","response","typeInvert","typeV","doCopy","itemName","$copyText","sumObject","obj","sum","formatterPrice","priceFormatte","getDataPart","cantPart","part1","part2","buildMonitorHash","typeTransaction","quantity","rQuantity","arrCifraQuantity","arrDecimals","quantityStringToIntMath","quantityValue","priceFormatter","replaceData","includes","validateMatch","validateZero","valueR","verifyTypeOfferName","itemType","ExchangeOfferType","SELL_OFFER","BUY_OFFER","nameType","showMsgStatusNode","rawAddress","toCurrency","Intl","NumberFormat","style","currency","maximumFractionDigits","format","formatQuantity","el","binding","q","coin","cl1","cl2","innerHTML","VueAxios","axios","modulesConfig","keys","appConfig","blockchain","websocketProvider","$browserStorage","browserStorage","$configForm","configForm","filters","directives","directive","productionTip","VueClipboard","VueLodash","money","VueSocketIO","debug","vuex","actionPrefix","mutationPrefix","transports","configIntegration","vuetify","render","AppVue","$mount","arrayToBase64Img","base64Img","lengthSubs","isBase64","arrayString","ceil","cont","extra","substring","base64ImgFromArray","array","arraSort","base64ImgFromArrayCom","filtersInnerTx","innerTransactions","aggregateTx","messagePayload","arrayAggregateTxTransfer","txTransfer","msjPayload","MessageType","PlainMessage","valueJson","aggregateTxFromArray","txsTransfer","msj","base64regex","test","validateDimensionImg","Image","WebsocketService","subscription","unsubscribe","cosignatureSignedTransaction","Msg","destroySubscriptions","subscribeAggregateBondedAdded","subscribeAggregateBondedRemoved","subscribeBlockInfo","subscribeCosignatureAdded","subscribeConfirmed","subscribeUnconfirmedAdded","subscribeUnconfirmedRemoved","subscribeStatus","NodeService","statusNodeSubscription","NODE_CONNECTING","connectionSocket","initObjApiConnection","objApiConnection","addNodeToList","initObjWebsocketConnection","subscribeStatusNode","objWebsocketConnection","connect","apiInstances","subscribeAllChannels","NODE_ACTIVE","catch","closeConnectionWs","destroyDataNode","showMessage","isError","destroySubscription","_objWebsocketConnection","_objApiConnection","ApiConnection","WebsocketConnection","dataNode","post","identificationType","NODE_STUCK","NODE_SYNCHRONIZING","sell","buy","priceBuy","priceSell","priceArray","concat","calAverage","properties","pas","averagePrice","twentyFourChange","pass","total","priceUni","validateExpireOffer","typeOffer","txFilter","filterTxOfferForType","ADD_EXCHANGE_OFFER","pushTx","filterTxOffer","findOffer","blockHeight","dataRet","rest","expireIn","infoExpire","expireInitial","txs","txCompare","offertTx","initialCost","initialAmount","pushOffer","mosaicInfodb","buildCurrentAccountInfo","mosaicsSelect","configInput","currentMosaic","expired","nameExpired","balanceValidate","durationMosaic","createdBlock","nameMosaic","selected","searchAccountsInfo","counter","mosaicsIds","pushea","accountInfoBuilded","multisigInfo","setAccountsInfo","createWallet","existWallet","getWalletByName","walletName","walletCreated","prefixAndPvk","decrypted","decrypt","accountBuilded","default","firstAccount","walletBuilded","wallets","getWallets","toDecrypt","encryptedPrivateKey","encryptedKey","iv","exportAccount","accountValue","brain","isMultisign","nis1Account","acc","wallet","wordArray","CryptoJS","Utf8","file","Base64","now","year","getFullYear","month","getMonth","day","getDate","blob","Blob","URL","createObjectURL","display","download","body","click","revokeObjectURL","filterAccountDefault","changeName","oldName","newName","logIn","elm","defaultAccount","updateBalance","pushed","accountInfoGet","accountsInfoNext","validBalance","ammount","dataBalance"],"mappings":"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","file":"js/app.5da6598a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"Home\":\"Home\",\"AllOffer\":\"AllOffer\",\"CreateNewSignup.vue\":\"CreateNewSignup.vue\",\"SelectTypeSignup\":\"SelectTypeSignup\",\"newAsset\":\"newAsset\",\"newOffer\":\"newOffer\",\"searchOfferts\":\"searchOfferts\",\"deleteOffer\":\"deleteOffer\",\"WalletInfo\":\"WalletInfo\"}[chunkId]||chunkId) + \".\" + {\"Home\":\"703853dc\",\"chunk-5466d8f6\":\"9e118066\",\"AllOffer\":\"53b6ba6f\",\"chunk-23e6e8fa\":\"bfceb2f7\",\"CreateNewSignup.vue\":\"346c8fc7\",\"chunk-d919d12c\":\"c20f302d\",\"chunk-48cc6628\":\"00555be7\",\"SelectTypeSignup\":\"986b23e1\",\"newAsset\":\"f3576f9b\",\"newOffer\":\"ca4e166f\",\"searchOfferts\":\"47587c91\",\"deleteOffer\":\"f3fc0851\",\"WalletInfo\":\"5d676e11\",\"chunk-6dbc4faa\":\"832ab25b\",\"chunk-31e4bc3c\":\"0d417e98\",\"chunk-77e3eb46\":\"a08292cb\",\"chunk-7d0f5269\":\"bf1e2d35\",\"chunk-7d459f9a\":\"a2ae7913\",\"chunk-0d598820\":\"f06ff5e3\",\"chunk-2d0ba196\":\"9cea2fe2\",\"chunk-2d0b19e5\":\"fb3850f2\",\"chunk-2d0b295b\":\"802b2dad\",\"chunk-2d0b5e00\":\"bc59cffd\",\"chunk-2d0c90fc\":\"425be933\",\"chunk-2d2161f1\":\"d185756c\",\"chunk-345f15f5\":\"009a1607\",\"chunk-f64b172c\":\"11146597\",\"chunk-2d0c11c6\":\"d167bc93\",\"chunk-2d0c85b7\":\"5a7069ad\",\"chunk-2d0cffe7\":\"bf4f6011\",\"chunk-2d0db2a7\":\"b849b1fd\",\"chunk-74c3efe8\":\"49550dda\",\"chunk-86c94a9a\":\"c6c3628a\",\"chunk-2d22da07\":\"1a84c24f\",\"chunk-39e1a4e6\":\"4722ebe4\",\"chunk-6e369a53\":\"d01179d5\",\"chunk-2d0e4e52\":\"6ba4f1d2\",\"chunk-1b24b18e\":\"89386446\",\"chunk-2d0b6cca\":\"f2ed9ff1\",\"chunk-2d0c930d\":\"888beb89\",\"chunk-43196873\":\"1b44f82d\",\"chunk-25563914\":\"92048f30\",\"chunk-4136125a\":\"3f7dd7b3\",\"chunk-e2e4563c\":\"16ac3f21\",\"chunk-74f332d4\":\"4c220ac6\",\"chunk-4e0b0b3a\":\"17288945\",\"chunk-2d0dda2e\":\"28842a52\",\"chunk-dbf9c09c\":\"5ef12fef\",\"chunk-17b5ca74\":\"600919e1\",\"chunk-3dd0404e\":\"c726c016\",\"chunk-23527b85\":\"19148d29\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-5466d8f6\":1,\"AllOffer\":1,\"chunk-23e6e8fa\":1,\"CreateNewSignup.vue\":1,\"chunk-d919d12c\":1,\"chunk-48cc6628\":1,\"SelectTypeSignup\":1,\"newAsset\":1,\"newOffer\":1,\"searchOfferts\":1,\"deleteOffer\":1,\"WalletInfo\":1,\"chunk-6dbc4faa\":1,\"chunk-77e3eb46\":1,\"chunk-7d0f5269\":1,\"chunk-7d459f9a\":1,\"chunk-0d598820\":1,\"chunk-86c94a9a\":1,\"chunk-39e1a4e6\":1,\"chunk-6e369a53\":1,\"chunk-1b24b18e\":1,\"chunk-43196873\":1,\"chunk-25563914\":1,\"chunk-74f332d4\":1,\"chunk-4e0b0b3a\":1,\"chunk-dbf9c09c\":1,\"chunk-3dd0404e\":1,\"chunk-23527b85\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"Home\":\"Home\",\"AllOffer\":\"AllOffer\",\"CreateNewSignup.vue\":\"CreateNewSignup.vue\",\"SelectTypeSignup\":\"SelectTypeSignup\",\"newAsset\":\"newAsset\",\"newOffer\":\"newOffer\",\"searchOfferts\":\"searchOfferts\",\"deleteOffer\":\"deleteOffer\",\"WalletInfo\":\"WalletInfo\"}[chunkId]||chunkId) + \".\" + {\"Home\":\"31d6cfe0\",\"chunk-5466d8f6\":\"09af3917\",\"AllOffer\":\"d04cabdc\",\"chunk-23e6e8fa\":\"b73685e4\",\"CreateNewSignup.vue\":\"2a86f822\",\"chunk-d919d12c\":\"73ce23cb\",\"chunk-48cc6628\":\"2e1853c8\",\"SelectTypeSignup\":\"c919def6\",\"newAsset\":\"d850ad7e\",\"newOffer\":\"c6e61766\",\"searchOfferts\":\"865ee7bb\",\"deleteOffer\":\"e3fe85b6\",\"WalletInfo\":\"133d2876\",\"chunk-6dbc4faa\":\"420a4717\",\"chunk-31e4bc3c\":\"31d6cfe0\",\"chunk-77e3eb46\":\"5f56932a\",\"chunk-7d0f5269\":\"8d5b4297\",\"chunk-7d459f9a\":\"5f56932a\",\"chunk-0d598820\":\"f5f2a708\",\"chunk-2d0ba196\":\"31d6cfe0\",\"chunk-2d0b19e5\":\"31d6cfe0\",\"chunk-2d0b295b\":\"31d6cfe0\",\"chunk-2d0b5e00\":\"31d6cfe0\",\"chunk-2d0c90fc\":\"31d6cfe0\",\"chunk-2d2161f1\":\"31d6cfe0\",\"chunk-345f15f5\":\"31d6cfe0\",\"chunk-f64b172c\":\"31d6cfe0\",\"chunk-2d0c11c6\":\"31d6cfe0\",\"chunk-2d0c85b7\":\"31d6cfe0\",\"chunk-2d0cffe7\":\"31d6cfe0\",\"chunk-2d0db2a7\":\"31d6cfe0\",\"chunk-74c3efe8\":\"31d6cfe0\",\"chunk-86c94a9a\":\"4b105d19\",\"chunk-2d22da07\":\"31d6cfe0\",\"chunk-39e1a4e6\":\"5f56932a\",\"chunk-6e369a53\":\"5f56932a\",\"chunk-2d0e4e52\":\"31d6cfe0\",\"chunk-1b24b18e\":\"c7315fda\",\"chunk-2d0b6cca\":\"31d6cfe0\",\"chunk-2d0c930d\":\"31d6cfe0\",\"chunk-43196873\":\"f4f2c1ce\",\"chunk-25563914\":\"e3ddfbe3\",\"chunk-4136125a\":\"31d6cfe0\",\"chunk-e2e4563c\":\"31d6cfe0\",\"chunk-74f332d4\":\"6e205a68\",\"chunk-4e0b0b3a\":\"d24134a6\",\"chunk-2d0dda2e\":\"31d6cfe0\",\"chunk-dbf9c09c\":\"827795a3\",\"chunk-17b5ca74\":\"31d6cfe0\",\"chunk-3dd0404e\":\"fd2c63c1\",\"chunk-23527b85\":\"8d3b0eb1\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\n  ws: {\n    aggregateBondedAdded: 'Transaction Aggregate Bonded Added',\n    aggregateBondedRemoved: 'Transaction Aggregate Bonded Removed',\n    cosignatureAdded: 'Cosignature Added',\n    confirmed: 'Transaction confirmed',\n    unconfirmed: 'Transaction send',\n    unconfirmedRemoved: 'Transaction unconfirmed removed'\n  },\n  login: {\n    success: {\n      welcomeToProxiEDI: 'Bienvenido al sistema ProxiEDI'\n    },\n    error: {\n      invalidUserOrPassword: 'La combinación de correo electrónico y contraseña no es válida'\n    }\n  },\n  accountActivation: {\n    success: {\n      accountSent: 'Solicitud enviada. Cuenta pendiente por activación.'\n    },\n    error: {\n      accountSent: 'Error al activar la cuenta'\n    }\n  },\n  general: {\n    success: {\n      copy: 'Copiado'\n    },\n    error: {\n      copy: 'Error al copiar'\n    }\n  },\n  nodes: {\n    success: {\n      statusNode: {\n        online: 'Online',\n        offline: 'Offline',\n        connecting: 'Connecting...'\n      }\n    },\n    error: {\n      stuck: 'El nodo está estancado',\n      sync: 'El nodo se está sincronizando',\n      off: 'Se ha cerrado la conexión de nodos',\n      valid: 'El nodo no es valido',\n      exist: 'El nodo ya esta en la lista'\n    }\n  },\n  company: {\n    success: {\n      activate: 'Compañia activada con exito...',\n      deleted: 'Compañia eliminada con exito...',\n      edited: 'Compañia editada con exito...'\n    },\n    error: {\n      activate: 'Error al intentar activar la compañia',\n      deleted: 'Error al intentar eliminar la compañia',\n      edited: 'Error al intentar editar la compañia'\n    }\n  },\n  users: {\n    success: {\n      create: 'Usuario creado con exito !!!',\n      update: 'Usuario editado con exito !!!',\n      delete: 'Usuario eliminado con exito !!!'\n    },\n    error: {\n      create: 'Ocurrio un error al intentar crear el usuario',\n      update: 'Ocurrio un error al intentar editar el usuario',\n      delete: 'Ocurrio un error al intentar eliminar el usuario'\n    }\n  }\n}\n","export const accountStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    accountsInfo: null,\n    currentAccount: null,\n    balanceCurrentAccount: null,\n    totalBalance: null,\n    dataUser: null,\n    isLogged: false,\n    mosaicBuild: []\n  },\n  getters: {\n    accountsInfo: state => state.accountsInfo,\n    mosaicBuild: state => state.mosaicBuild,\n    accountInfoByNameAccount: state => nameAccount => {\n      if (state.accountsInfo && state.accountsInfo.length > 0) {\n        return state.accountsInfo.find(next => next.name === nameAccount)\n      } else {\n        return null\n      }\n    },\n    accountInfoByAdress: state => byAddress => {\n      if (state.accountsInfo && state.accountsInfo.length > 0) {\n        if (byAddress) {\n          let found = null\n          state.accountsInfo.forEach(element => {\n            if (element.accountInfo) {\n              if (element.accountInfo.address.pretty() === byAddress) {\n                found = element\n              }\n            }\n          })\n\n          // return this.accountsInfo.find(next => (next.accountInfo) ? next.accountInfo.address.pretty() === account : []);\n          return found\n        }\n      }\n    },\n    userData: state => state.dataUser,\n    isLogged: state => state.isLogged,\n    currentAccount: state => state.currentAccount,\n    balanceCurrentAccount: state => state.balanceCurrentAccount,\n    balanceAccount: state => state.balanceAccount,\n    totalBalance: state => idFilter => {\n      let amountTotal = 0.0\n      if (state.accountsInfo && state.accountsInfo.length > 0) {\n        for (const element of state.accountsInfo) {\n          if (element && element.accountInfo) {\n            if (element.accountInfo.mosaics && element.accountInfo.mosaics.length > 0) {\n              const mosaics = element.accountInfo.mosaics.find(\n                mosaic => mosaic.id.toHex() === idFilter\n              )\n              if (mosaics) {\n                amountTotal = amountTotal + mosaics.amount.compact()\n              }\n            }\n          }\n        }\n      }\n      return amountTotal\n    },\n    address: state => state.dataUser.simpleWallet.address['address']\n  },\n  mutations: {\n    LOGIN (state, data) {\n      if (data && data.username && data.accounts) {\n        state.isLogged = true\n      } else {\n        state.isLogged = false\n      }\n      state.dataUser = data\n    },\n    SET_INFO_ACCOUNT (state, data) {\n      // console.log('SET_INFO_ACCOUNT', data)\n      state.accountsInfo = data\n    },\n    SET_BALANCE_CURRENT_ACCOUNT (state, data) {\n      // console.log('SET_BALANCE_CURRENT_ACCOUNT', data)\n      state.balanceCurrentAccount = data\n    },\n    SET_CURRENT_ACCOUNT (state, data) {\n      state.currentAccount = data\n    },\n    SET_TOTAL_BALANCE (state, data) {\n      // console.log('SET_TOTAL_BALANCE', data)\n      state.totalBalance = data\n    },\n    UPDATE_DATA_USER (state, data) {\n      state.dataUser = data\n    },\n    CHANGE_NAME_USER (state, name) {\n      state.dataUser.name = name\n    },\n    SET_BUILD_CURRENT_ACCOUNT_MOSAIC (state, data) {\n      // console.log('\\n\\n SET_BUILD_CURRENT_ACCOUNT_MOSAIC \\n', data)\n      state.mosaicBuild = data\n    }\n  },\n  actions: {\n    LOGOUT ({ commit }, data) {\n      commit('LOGIN', null)\n    }\n  }\n}\n","export const walletStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    currentWallet: null\n  },\n  getters: {\n    currentWallet: state => state.currentWallet,\n    nameCurrentWallet: state => state.currentWallet.username\n  },\n  mutations: {\n    SET_CURRENT_WALLET (state, data) {\n      state.currentWallet = data\n    },\n    SET_NAME_CURRENT_WALLET (state, data) {\n      state.currentWallet.username = data\n    }\n  }\n}\n","export const appCoreStore = {\n  namespaced: true,\n  state: {\n    drawer: null,\n    color: null,\n    image:\n      'https://demos.creative-tim.com/vue-material-dashboard/img/sidebar-2.32103624.jpg'\n  },\n  getters: {\n    drawer: state => state.drawer,\n    color: state => state.color\n  },\n  mutations: {\n    SET_DRAWER (state, data) {\n      state.drawer = data\n    },\n    SET_COLOR (state, data) {\n      state.color = data\n    }\n  }\n}\n","export const namespaceStore = {\n  namespaced: true,\n  state: {\n    loading: true,\n    namespaces: [\n      {\n        id: null,\n        idToHex: null,\n        namespaceInfo: null,\n        namespaceName: null\n      }\n    ]\n  },\n  getters: {\n    loading: state => state.loading,\n    namespaces: state => state.namespaces,\n    namespacesFromAddress: state => address => {\n      return state.namespaces.sort((a, b) => {\n        if (a.namespaceInfo && b.namespaceInfo) {\n          return (\n            a.namespaceName.name > b.namespaceName.name) ? 1 : ((b.namespaceName.name > a.namespaceName.name) ? -1 : 0\n            )\n        }\n      }\n      ).filter(\n        next => {\n          if (next.namespaceInfo) { return next.namespaceInfo.owner.address['address'] === address }\n        }\n      )\n    }\n  },\n  mutations: {\n    LOADING (state, data) {\n      state.loading = data\n    },\n    SET_NAMESPACES (state, data) {\n      state.namespaces = data\n      state.loading = false\n    }\n  }\n}\n","import { base64IconFromAggregateTx } from '@/services/icon-mosaic-service'\nexport const mosaicStore = {\n  namespaced: true,\n  state: {\n    mosaics: [],\n    metadata: null,\n    iconMosaic: [\n    ],\n    mosaicDescription: [\n    ]\n\n    // mosaics: [\n    //   {\n    //     idMosaic: null,\n    //     isNamespace: null,\n    //     mosaicInfo: null,\n    //     mosaicNames: null\n    //   }\n    // ]\n  },\n  mutations: {\n    SET_MOSAICS (state, data) {\n      // console.log('SET_MOSAICS', data)\n      state.mosaics = data\n    },\n    SET_MOSAIC_ICON (state, data) {\n      // console.log('SET_MOSAICS', data)\n      state.iconMosaic = data\n    },\n    PUSH_MOSAIC_ICON (state, data) {\n      if (state.iconMosaic.length > 0) {\n        const findMosaicIcon = state.iconMosaic.find(x => x.mosaicId.toHex() === data.mosaicId.toHex())\n        if (findMosaicIcon) {\n          for (var i in state.iconMosaic) {\n            if (state.iconMosaic[i].mosaicId.toHex() === data.mosaicId.toHex()) {\n              state.iconMosaic[i].iconBase64 = data.iconBase64\n              break // Stop this loop, we found it!\n            }\n          }\n        } else {\n          state.iconMosaic.push(data)\n        }\n      } else {\n        state.iconMosaic.push(data)\n      }\n    },\n    PUSH_MOSAICS_DESCRIPTION (state, data) {\n      if (state.mosaicDescription.length > 0) {\n        const mosaicDescription = state.mosaicDescription.find(x => x.mosaicId.toHex() === data.mosaicId.toHex())\n        if (mosaicDescription) {\n          for (var i in state.mosaicDescription) {\n            if (state.mosaicDescription[i].mosaicId.toHex() === data.mosaicId.toHex()) {\n              state.mosaicDescription[i].description = data.description\n              break // Stop this loop, we found it!\n            }\n          }\n        } else {\n          state.mosaicDescription.push(data)\n        }\n      } else {\n        state.mosaicDescription.push(data)\n      }\n    },\n    SET_METADATA (state, data) {\n      state.metadata = data\n    }\n\n  },\n  getters: {\n    mosaics: state => {\n      return state.mosaics\n    },\n    iconMosaic: state => {\n      return state.iconMosaic\n    },\n    mosaicDescription: state => {\n      return state.mosaicDescription\n    },\n    othersMosaics: state => idFilter => {\n      let othersMosaics = []\n      if (state.mosaics && state.mosaics.length > 0) {\n        othersMosaics = state.mosaics.filter(item => item.mosaicInfo.mosaicId.toHex() !== idFilter)\n      }\n      return othersMosaics\n    }\n  },\n  actions: {\n    GET_MOSAICS_METADATA ({ commit, dispatch }, data) {\n      (async () => {\n        for (let x of data) {\n          try {\n            const metadata = await this._vm.$blockchainProvider.getMosaicMetadata(x).toPromise()\n            commit('SET_METADATA', metadata)\n            dispatch('GET_MOSAICS_ICON', metadata)\n            dispatch('GET_MOSAICS_DESCRIPTION', metadata)\n          } catch {\n            // console.error('Not metadata mosaic')\n          }\n        }\n      })()\n    },\n    async GET_MOSAICS_ICON ({ commit }, data) {\n      const fliterFields = data.fields.find(x => x.key === 'icon')\n      if (fliterFields) {\n        if (fliterFields.value.length === 64) {\n          const tx = await this._vm.$blockchainProvider.getTransactionId(fliterFields.value).toPromise()\n          if (tx.type === this._vm.$blockchainProvider.typeTransactions().aggregateComplete.id) {\n            commit('PUSH_MOSAIC_ICON', { iconBase64: base64IconFromAggregateTx(tx), mosaicId: data.metadataId })\n          }\n        }\n      }\n    },\n    async GET_MOSAICS_DESCRIPTION ({ commit }, data) {\n      const fliterFields = data.fields.find(x => x.key === 'desc')\n      if (fliterFields) {\n        commit('PUSH_MOSAICS_DESCRIPTION', { description: fliterFields.value, mosaicId: data.metadataId })\n      }\n    }\n\n  }\n}\n","import store from '@/store'\nimport {\n  searchInfoMosaics\n} from '@/services/mosaics-service'\nimport {\n  update\n} from '@/services/offert-service'\nexport const socketDbStore = {\n  namespaced: true,\n  state: {\n    offersTx: [],\n    newOffersTx: null,\n    mosaicsInfOffer: [],\n    loadingInfo: false,\n    inserted: null,\n    unchanged: null\n  },\n  mutations: {\n    SOCKET_SET_OFFERS (state, data) {\n      // console.log('SOCKET_SET_OFFERS', data)\n      state.offersTx = data\n    },\n    SOCKET_SET_NEW_OFFERS (state, data) {\n      // console.log('SET_NEW_OFFERS', data)\n      state.newOffersTx = data\n      state.offersTx.push(data)\n    },\n    SOCKET_SET_MOSAIC_INFO (state, data) {\n      // console.log('SOCKET_SET_MOSAIC_INFO', data)\n      // state.mosaicsInfOffer = data\n      store.dispatch('socketDbStore/GET_MOSAICS_INFO', data)\n    },\n    EVENT_SET_MOSAIC_INFO (state, data) {\n      // console.log('EVENT_SET_MOSAIC_INFO', data)\n      state.mosaicsInfOffer = data\n    },\n    EVENT_PUSH_MOSAIC_INFO (state, data) {\n      // console.log('EVENT_PUSH_MOSAIC_INFO', data)\n      state.mosaicsInfOffer.push(data)\n    },\n    EVENT_LOADING_MOSAIC_INFO (state, data) {\n      // console.log('EVENT_LOADING_MOSAIC_INFO', data)\n      state.loadingInfo = data\n    },\n    EVENT_INSERTED (state, data) {\n      state.inserted = data\n    },\n    EVENT_UNCHANGED (state, data) {\n      state.unchanged = data\n    },\n    SOCKET_RETURN_INSERT_OFFERT (state, data) {\n      // console.log('SOCKET_RETURN_INSERT_OFFERT', data)\n    },\n    SOCKET_RETURN_INSERT_EXECUTE_OFFERS (state, data) {\n      // console.log('RETURN_INSERT_EXECUTE_OFFERS', data)\n    },\n    SOCKET_RETURN_INSERT_MOSAIC_INFO (state, data) {\n      state.unchanged = null\n      state.inserted = null\n      const dataDb = data.dataDb\n      console.log('dataasas', data)\n      console.log('changeschangeschanges', dataDb['changes'])\n      // changes\n      if (dataDb['inserted'] > 0) {\n        for (let index = 0; index < dataDb['inserted']; index++) {\n          const element = dataDb['changes'][index]\n          if (element['new_val']) {\n            console.log('UPDATE inserted', element['new_val'])\n            update(element['new_val'])\n          }\n        }\n      } else if (dataDb['changes'].length > 0) {\n        console.log('changes udapte', data.dataOffer)\n        update(data.dataOffer)\n        // state.unchanged = data.dataOffer\n      }\n    }\n  },\n  getters: {\n    inserted: state => state.inserted,\n    unchanged: state => state.unchanged,\n    offersTx: state => state.offersTx,\n    newOffersTx: state => state.newOffersTx,\n    offers: state => {\n      let offers = []\n      if (state.offersTx) {\n        for (let items of state.offersTx) {\n          offers.push({ offer: items.offers })\n        }\n      }\n      return offers\n    },\n    mosaicsInfOffer: state => state.mosaicsInfOffer,\n    mosaicsInfOfferFromIdHex: state => iDhex => {\n      return state.mosaicsInfOffer.filter(next => next.mosaicIdHex === iDhex)\n    },\n    loadingInfo: state => state.loadingInfo\n  },\n  actions: {\n    UPDATE_MOSAICS_INFO ({ commit, dispatch, state }, data) {\n      (async () => {\n        const mosaicsInfOffer = state.mosaicsInfOffer.find(x => x.mosaicIdHex === data.mosaicIdHex)\n        if (mosaicsInfOffer) {\n          dispatch('offersStore/GET_EXCHANGE_OFFER', mosaicsInfOffer, { root: true })\n        } else {\n          dispatch('GET_MOSAICS_INFO', [data])\n        }\n      })()\n    },\n    GET_MOSAICS_INFO ({ commit, dispatch }, data) {\n      (async () => {\n        if (data.length > 0) {\n          for (let item of data) {\n            commit('EVENT_LOADING_MOSAIC_INFO', true)\n            if (item.mosaicInfo === undefined) {\n              try {\n                const mosaicId = this._vm.$blockchainProvider.getMosaicId(item.mosaicIdHex)\n                const mosaicInfo = await searchInfoMosaics([mosaicId], true)\n                dispatch('SET_MOSAICS_INFO_FOR_OFFER', mosaicInfo)\n              } catch (error) {\n              }\n            }\n          }\n        } else {\n          commit('EVENT_LOADING_MOSAIC_INFO', false)\n        }\n      })()\n    },\n    SET_MOSAICS_INFO_FOR_OFFER ({ commit, dispatch, state }, data) {\n      const mosaicHex = this._vm.$blockchainProvider.getMosaicId(data[0].idMosaic).toHex()\n      const mosaicsInfOffer = state.mosaicsInfOffer.find(x => x.mosaicIdHex === mosaicHex)\n      if (mosaicsInfOffer) {\n        for (var i in state.mosaicsInfOffer) {\n          if (state.mosaicsInfOffer[i].mosaicIdHex === mosaicHex) {\n            state.mosaicsInfOffer[i].mosaicInfo = data\n            dispatch('offersStore/GET_EXCHANGE_OFFER', state.mosaicsInfOffer[i], { root: true })\n            break // Stop this loop, we found it!\n          }\n        }\n        state.loadingInfo = false\n        state.mosaicsInfOffer = JSON.parse(JSON.stringify(state.mosaicsInfOffer))\n      } else {\n        state.loadingInfo = false\n        const mosaicsInf = { mosaicIdHex: mosaicHex, mosaicInfo: data }\n        dispatch('offersStore/GET_EXCHANGE_OFFER', mosaicsInf, { root: true })\n        state.mosaicsInfOffer.push(mosaicsInf)\n      }\n    },\n    getOffertsTx: ({ commit, state }, params) => {\n      params.io.emit('getOffertsTx', params.data)\n    },\n    getMoisaicsInfo: ({ commit, state }, params) => {\n      commit('EVENT_LOADING_MOSAIC_INFO', true)\n      params.io.emit('getMoisaicsInfo', params.data)\n    },\n    insertNewOffers: ({ commit, state }, params) => {\n      params.io.emit('insertNewOffers', params.data)\n    },\n    insertExecuteOffers: ({ commit, state }, params) => {\n      // console.log('insertExecuteOffers params', params)\n      params.io.emit('insertExecuteOffers', params.data)\n    },\n    insertMoisaicsInfo: ({ commit, state }, params) => {\n      params.io.emit('insertMoisaicsInfo', params.data)\n    },\n    // app\n    setMoisaicUnchanged: ({ commit, state }, params) => {\n      commit('EVENT_SET_MOSAIC_INFO', params)\n      // params.io.emit('insertMoisaicsInfo', params.data)\n    },\n    pushMosaicInfoOffer: ({ commit, state }, params) =>\n      commit('EVENT_PUSH_MOSAIC_INFO', params)\n  }\n}\n","export const mosaicExchange = {\n  namespaced: true,\n  state: {\n    exchange: null,\n    dataAssets: null,\n    exchangeDelete: null,\n    expire: 0\n  },\n  getters: {\n    exchange: state => state.exchange,\n    dataAssets: state => state.dataAssets,\n    exchangeDelete: state => state.exchangeDelete,\n    expire: state => state.expire\n  },\n  mutations: {\n    SET_EXCHANGE (state, data) {\n      state.exchange = data\n    },\n    SET_EXCHANGE_DELETE (state, data) {\n      state.exchangeDelete = data\n    },\n    SET_DATA_ASSETS (state, data) {\n      state.dataAssets = data\n    },\n    SET_EXPIRE (state, data) {\n      state.expire = data\n    }\n  }\n}\n","export const socketBcStore = {\n  namespaced: true,\n  state: {\n    statusTx: {\n      type: null,\n      hash: null\n    }\n  },\n  mutations: {\n    SET_STATUS_TX (state, data) {\n      // console.log('newstatusTx', data)\n      state.statusTx = data\n    }\n  },\n  getters: {\n    statusTx: state => state.statusTx,\n    statusTxFormHash: state => hash => {\n      return state.statusTx.filter(next => next.hash === hash)\n    }\n  }\n}\n","// import { twentyFourChange } from '@/services/offert-service'\nimport { filterAssets, getAllOffer } from '@/services/offert-service'\nexport const offersStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    offerSelected: [],\n    offerAll: [],\n    type: ['buy', 'sell'],\n    allOfferGet: [],\n    updateBoolean: false\n  },\n  getters: {\n    offerSelected: state => state.offerSelected,\n    offerAll: state => state.offerAll,\n    offersForPublicKey: state => state.offersForPublicKey,\n    type: state => state.type,\n    updateBoolean: state => state.updateBoolean\n  },\n  mutations: {\n    SET_OFFER_SELECTED (state, data) {\n      state.offerSelected = data\n    },\n    UPDATE_OFFER_BOOLEAN (state) {\n      state.updateBoolean = !state.updateBoolean\n    },\n    SET_OFFER_ALL (state, data) {\n      state.offerAll = data\n    },\n    PUSH_OFFER_ALL (state, data) {\n      // const push = twentyFourChange()\n      state.offerAll.push(data)\n    },\n    UPDATE_OFFER_ALL (state, data) {\n      for (var i = 0; i < state.offerAll.length; i++) {\n        if (state.offerAll[i].tableData.info.mosaicIdHex === data.tableData.info.mosaicIdHex) {\n          state.offerAll[i].allOffers = data.allOffers\n          state.offerAll[i].tableData = data.tableData\n          break\n        }\n      }\n      // console.log('state.offerAll', JSON.stringify(state.offerAll))\n    },\n    DELETE_OFFER_ALL (state, idMosaic) {\n      for (var i = 0; i < state.offerAll.length; i++) {\n        if (state.offerAll[i].tableData.info.mosaicIdHex === idMosaic) {\n          state.offerAll.splice(i, 1)\n          break\n        }\n      }\n    }\n  },\n  actions: {\n    GET_EXCHANGE_OFFER ({ commit, dispatch }, data) {\n      (async () => {\n        const mosaic = filterAssets(data)\n        const offerBuy = await this._vm.$blockchainProvider.getExchangeOffersfromId(mosaic.mosaicIdHex, 0).toPromise()\n        const offerSell = await this._vm.$blockchainProvider.getExchangeOffersfromId(mosaic.mosaicIdHex, 1).toPromise()\n        const itemBuy = {\n          type: 'buy',\n          data: offerBuy\n        }\n        const itemSell = {\n          type: 'sell',\n          data: offerSell\n        }\n        if (itemSell.data.length > 0 || itemBuy.data.length > 0) {\n          getAllOffer({ items: { itemBuy, itemSell }, info: data })\n        } else {\n          commit('DELETE_OFFER_ALL', mosaic.mosaicIdHex)\n        }\n      })()\n    }\n  }\n}\n","export const nodeStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    currentNode: null,\n    currentBlock: null,\n    nodesList: null,\n    nodeIsLive: null,\n    nodeStatus: ''\n  },\n  getters: {\n    currentBlock: state => state.currentBlock,\n    currentNode: state => state.currentNode,\n    generationHash: state => (state.currentNode) ? state.currentNode.generationHash : '',\n    networkType: state => (state.currentNode) ? state.currentNode.networkType : '',\n    nodesList: state => state.nodesList,\n    nodeStatus: state => state.nodeStatus\n  },\n  mutations: {\n    SET_NODE_IS_LIVE (state, status) {\n      state.nodeIsLive = status\n    },\n    SET_CURRENT_BLOCK (state, currentBlock) {\n      state.currentNode.height = currentBlock\n      state.currentBlock = currentBlock\n    },\n    SET_STATUS_NODE (state, status) {\n      // empty is without use, 0 is down, 1 is up, 2 is connecting\n      state.nodeStatus = status\n    },\n    SET_CURRENT_NODE (state, data) {\n      state.currentNode = data\n    },\n    SET_NODES_LIST (state, data) {\n      state.nodesList = data\n    }\n  },\n  actions: {\n    async initNodes ({\n      commit\n    }, connectionNodes) {\n      commit('SET_STATUS_NODE', 2)\n      const uri = this._vm.$websocketProvider.selectNode(connectionNodes.nodes, connectionNodes.uriSelected)\n      this._vm.$blockchainProvider.instanceConnectionApi(uri, connectionNodes.protocol)\n      this._vm.$blockchainProvider.getBlockInfo().subscribe(blockInfo => {\n        const currentNode = {\n          uri,\n          height: null,\n          generationHash: blockInfo.generationHash,\n          networkType: blockInfo.networkType\n        }\n        console.log('generationHash', currentNode)\n        commit('SET_CURRENT_NODE', currentNode)\n        commit('SET_NODES_LIST', connectionNodes.nodes)\n        // add websocket id\n        if (this._vm.$modulesConfig.nodes.connectToWebsocket) this._vm.$websocketProvider.webSocketConnection(uri, connectionNodes.protocolWs)\n        else commit('SET_STATUS_NODE', 1)\n      }, () => {\n        commit('SET_STATUS_NODE', 0)\n      })\n    },\n    closeWebsocket ({\n      commit\n    }, status) {\n      this._vm.$websocketProvider.closeConnection()\n      commit('SET_CURRENT_BLOCK', 0)\n      commit('SET_CURRENT_NODE', null)\n      commit('SET_NODES_LIST', null)\n      commit('SET_STATUS_NODE', status)\n    }\n  }\n}\n","export const transactionsStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    aggregateBondedAdded: [],\n    aggregateBondedRemoved: [],\n    blockInfo: [],\n    cosignatureAdded: [],\n    confirmed: [],\n    unconfirmedAdded: [],\n    unconfirmedRemoved: [],\n    status: [],\n    monitorHashs: []\n  },\n  getters: {\n    aggregateBondedAdded: state => state.aggregateBondedAdded,\n    aggregateBondedRemoved: state => state.aggregateBondedRemoved,\n    blockInfo: (state) => (height) => {\n      return state.blockInfo.find(b => b.height.compact() === height)\n    },\n    cosignatureAdded: state => state.cosignatureAdded,\n    confirmed: state => state.confirmed,\n    unconfirmedAdded: state => state.unconfirmedAdded,\n    unconfirmedRemoved: state => state.unconfirmedRemoved,\n    status: state => state.status,\n    filterHash: (state) => (transactions) => {\n      return transactions.filter(t => state.monitorHashs.filter(m => m.hash === t.transactionInfo.hash))\n    },\n    getMonitorHashs: state => state.monitorHashs\n  },\n  mutations: {\n    SET_AGGREGATE_BONDED_ADDED (state, transaction) {\n      if (!state.aggregateBondedAdded.find(t => transaction.transactionInfo.hash === t.transactionInfo.hash)) {\n        const d = state.aggregateBondedAdded\n        d.unshift(transaction)\n        state.aggregateBondedAdded = d\n      }\n    },\n    SET_AGGREGATE_BONDED_REMOVED (state, transaction) {\n      if (!state.aggregateBondedRemoved.find(t => transaction.transactionInfo.hash === t.transactionInfo.hash)) {\n        const d = state.aggregateBondedRemoved\n        d.unshift(transaction)\n        state.aggregateBondedRemoved = d\n      }\n    },\n    SET_BLOCK_INFO (state, blockInfo) {\n      if (!state.blockInfo.find(t => blockInfo.hash === t.hash)) {\n        const d = state.blockInfo\n        d.unshift(blockInfo)\n        state.blockInfo = d\n      }\n    },\n    SET_COSIGNATURE_ADDED (state, transaction) {\n      if (!state.cosignatureAdded.find(t => transaction.transactionInfo.hash === t.transactionInfo.hash)) {\n        const d = state.cosignatureAdded\n        d.unshift(transaction)\n        state.cosignatureAdded = d\n      }\n    },\n    SET_CONFIRMED (state, transaction) {\n      // console.log('transaction', transaction)\n      if (!state.confirmed.find(t => transaction.transactionInfo.hash === t.transactionInfo.hash)) {\n        const d = state.confirmed\n        d.unshift(transaction)\n        state.confirmed = d\n      }\n    },\n    SET_UNCONFIRMED_ADDED (state, transaction) {\n      if (!state.unconfirmedAdded.find(t => transaction.transactionInfo.hash === t.transactionInfo.hash)) {\n        const d = state.unconfirmedAdded\n        d.unshift(transaction)\n        state.unconfirmedAdded = d\n      }\n    },\n    SET_UNCONFIRMED_REMOVED (state, hash) {\n      if (!state.unconfirmedRemoved.find(h => hash === h)) {\n        const d = state.unconfirmedRemoved\n        d.unshift(hash)\n        state.unconfirmedRemoved = d\n      }\n    },\n    SET_STATUS (state, hash) {\n      if (!state.status.find(t => hash === t)) {\n        const d = state.status\n        d.unshift(hash)\n        state.status = d\n      }\n    },\n    SET_MONITOR_HASH (state, data) {\n      const filtered = state.monitorHashs.filter(x => x.hash !== data.hash)\n      filtered.push(data)\n      state.monitorHashs = filtered\n    },\n    REMOVE_AGGREGATE_BONDED_ADDED_TX (state, hash) {\n      state.aggregateBondedAdded = state.aggregateBondedAdded.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_AGGREGATE_BONDED_REMOVED_TX (state, hash) {\n      state.aggregateBondedRemoved = state.aggregateBondedRemoved.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_COSIGNATURE_ADDED_TX (state, hash) {\n      state.cosignatureAdded = state.cosignatureAdded.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_CONFIRMED_TX (state, hash) {\n      state.confirmed = state.confirmed.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_UNCONFIRMED_ADDED_TX (state, hash) {\n      state.unconfirmedAdded = state.unconfirmedAdded.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_UNCONFIRMED_REMOVED_TX (state, hash) {\n      state.unconfirmedRemoved = state.unconfirmedRemoved.filter(t => hash !== t.transactionInfo.hash)\n    },\n    REMOVE_STATUS_TX (state, hash) {\n      state.status = state.status.filter(t => hash !== t)\n    },\n    REMOVE_ALL_TXN (state) {\n      state.aggregateBondedAdded = []\n      state.aggregateBondedRemoved = []\n      state.blockInfo = []\n      state.cosignatureAdded = []\n      state.confirmed = []\n      state.unconfirmedAdded = []\n      state.unconfirmedRemoved = []\n      state.status = []\n    },\n    REMOVE_MONITOR_HASH (state, hash) {\n      // console.log('REMOVE', hash)\n      const filtered = state.monitorHashs.filter(x => x.hash !== hash)\n      state.monitorHashs = filtered\n    }\n  },\n  actions: {}\n}\n","export const coingeckoStore = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    xpxInformation: null,\n    typeCurrency: [{\n      label: 'USD',\n      value: 'usd'\n    },\n    {\n      label: 'BTC',\n      value: 'btc'\n    },\n    {\n      label: 'ETH',\n      value: 'eth'\n    }\n    ]\n  },\n  getters: {\n    typeCurrency: state => state.typeCurrency,\n    xpxInformation: state => state.xpxInformation,\n    xpxToOtherCurrency: state => fiatCurrency => {\n      return (state.xpxInformation) ? state.xpxInformation.market_data.current_price[fiatCurrency] : '0.00'\n    },\n    convertToOtherCurrency: (state, getters) => (balance, fiatCurrency) => {\n      let balanceConverted = ''\n      const toOtherCurrency = getters.xpxToOtherCurrency(fiatCurrency)\n      if (toOtherCurrency) balanceConverted = Number(balance.replace(/,/g, '')) * toOtherCurrency\n      return balanceConverted\n    }\n  },\n  mutations: {\n    SET_XPX_INFORMATION (state, xpxInformation) {\n      state.xpxInformation = xpxInformation\n    }\n  },\n  actions: {\n    searchInformationXPX ({\n      commit,\n      rootGetters\n    }) {\n      const url = rootGetters.environment.coingecko.url\n      const coinToSearch = 'proximax'\n      this._vm.$http.get(`${url}${coinToSearch}`).then(x => {\n        commit('SET_XPX_INFORMATION', x.data)\n      }, () => {\n      })\n    }\n  }\n}\n","export const onLineStore = {\n  namespaced: true,\n  state: {\n    connected: window.navigator.onLine\n  },\n  getters: {\n    connected: state => state.connected\n  },\n  mutations: {\n    'SET_CONNECTED' (state, payload) {\n      state.connected = payload\n    }\n  },\n  actions: {\n    setConnected ({ commit }, payload) {\n      commit('SET_CONNECTED', payload)\n    }\n  }\n}\n","// import Vue from 'vue'\nimport { TypeStatusNode } from 'tsjs-sirius-suite-wallet-library/dist/model/nodes/blockchain/Websocket'\n// import { Utilities } from 'tsjs-sirius-suite-wallet-library/dist/utils/Utilities'\n// import { NodeService } from '@/services/blockchain/node.service'\n\nexport const nodesStoreNew = {\n  // This makes your getters, mutations, and actions accessed by, eg: 'myModule/myModularizedNumber'\n  // instead of mounting getters, mutations, and actions to the root namespace.\n  namespaced: true,\n  state: {\n    currentHeight: 0,\n    currentNode: '',\n    generationHash: null,\n    networkType: null,\n    nodesList: [],\n    customNodes: [],\n    nodeStatus: TypeStatusNode.NODE_OFF,\n    reconnect: false\n  },\n  getters: {\n    configHttp: (state, getters, rootState, rootGetters) => {\n      return {\n        headers: {\n          Authorization: `Bearer ${rootGetters['accountStore/token']}`\n        }\n      }\n    },\n    currentHeight: state => state.currentHeight,\n    currentNode: state => state.currentNode,\n    generationHash: state => state.generationHash,\n    networkType: state => state.networkType,\n    nodesList: state => state.nodesList,\n    nodeStatus: state => state.nodeStatus,\n    customNodes: state => state.customNodes,\n    blockchainNodes: (state, getters) => {\n      return getters.nodesList.filter(n => n.node && n.identification_type === 1)\n    },\n    reconnect: state => state.reconnect\n  },\n  mutations: {\n    ADD_NODES (state, data, toServer) {\n      // console.log('data', data)\n      const n = state.nodesList.slice()\n      const nToSave = []\n      if (data.nodes.length > 0) {\n        data.nodes.forEach(element => {\n          const nodeBuilded = `${data.protocol}://${element}`\n          const exist = n.find(x => x === nodeBuilded)\n          if (exist === undefined || exist === null) {\n            nToSave.push(nodeBuilded)\n            n.push(nodeBuilded)\n          }\n        })\n      }\n      // console.log('Lista de nodos', n)\n      if (!data.toServer) {\n        state.nodesList = n\n        // return\n      }\n\n      // NodeService.saveNodes(nToSave[0])\n      //   .then(() => (state.nodesList = n))\n      //   .catch(e => console.log('Error --->', e))\n    },\n    SET_DATA_NODE (state, data) {\n      // console.log('data', data)\n      state.currentNode = data.uri\n      state.currentHeight = data.height\n      state.generationHash = data.generationHash\n      state.networkType = Number(data.networkType)\n    },\n    SET_CURRENT_HEIGHT (state, currentHeight) {\n      state.currentHeight = currentHeight\n    },\n    SET_CURRENT_NODE (state, node) {\n      state.currentNode = node\n    },\n    SET_GENERATION_HASH (state, generationHash) {\n      state.generationHash = generationHash\n    },\n    SET_NETWORK_TYPE (state, networkType) {\n      state.networkType = networkType\n    },\n    SET_NODES_LIST (state, data) {\n      state.nodesList = data\n    },\n    SET_STATUS_NODE (state, status) {\n      // console.log('SET_STATUS_NODE', status)\n      state.nodeStatus = status\n    },\n    RECONNECT (state, status) {\n      state.reconnect = status\n    }\n  },\n  actions: {\n    searchNodes () {\n      // NodeService.searchCustomNodes()\n    },\n    closeWebsocket ({ commit }, status = null) {\n      commit('SET_CURRENT_HEIGHT', 0)\n      commit('SET_CURRENT_NODE', '')\n      commit('SET_GENERATION_HASH', 0)\n      commit('SET_NETWORK_TYPE', null)\n      commit('SET_STATUS_NODE', status || TypeStatusNode.NODE_OFF)\n    }\n  }\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {\n  accountStore\n} from './modules/account-store'\nimport {\n  walletStore\n} from './modules/wallet-store'\nimport {\n  appCoreStore\n} from './modules/app-core-store'\nimport {\n  namespaceStore\n} from './modules/namespace-store'\n// import { nodeStore } from './modules/node-store'\nimport {\n  mosaicStore\n} from './modules/mosaic-store'\nimport {\n  socketDbStore\n} from './modules/socket-db-store'\nimport {\n  mosaicExchange\n} from './modules/mosaic-exchange'\nimport {\n  socketBcStore\n} from './modules/socket-bc-store'\nimport {\n  offersStore\n} from './modules/offers-store'\nimport {\n  nodeStore,\n  transactionsStore,\n  coingeckoStore,\n  onLineStore,\n  nodesStoreNew\n} from '@/core/store/'\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    environment: null,\n    configApp: null,\n    networkSelected: '',\n    count: null,\n    showMenu: true,\n    overlay: false,\n    loadingInfoWallet: {\n      show: false,\n      text: '',\n      type: null\n    },\n    snackbar: {\n      color: '',\n      mode: '',\n      snackbar: false,\n      text: '',\n      timeout: 5000,\n      x: 'center',\n      y: 'top'\n    }\n  },\n  getters: {\n    nameApp: state => {\n      if (state.configApp) return state.configApp.infoApp.nameApp\n      else return ''\n    },\n    pseudonymApp: state => {\n      if (state.configApp) return state.configApp.infoApp.pseudonymApp\n      else return ''\n    },\n    version: state => {\n      if (state.configApp) return state.configApp.infoApp.version\n      else return ''\n    },\n    environment: state => state.environment\n  },\n  mutations: {\n    ADD_CONFIG_APP (state, data) {\n      state.configApp = data\n      state.networkSelected = data.networkSelected\n    },\n    ADD_ENVIRONMENT_APP (state, networkType) {\n      if (state.configApp) state.environment = state.configApp.environment[networkType]\n    },\n    SHOW_LOADING (state, value) {\n      state.overlay = value\n    },\n    SHOW_MENU (state, value) {\n      state.showMenu = value\n    },\n    SHOW_LOADING_INFO_WALLET (state, data) {\n      state.loadingInfoWallet.show = data.show\n      state.loadingInfoWallet.text = data.text\n      state.loadingInfoWallet.type = data.type\n    },\n    SHOW_SNACKBAR (state, data) {\n      state.snackbar.snackbar = data.snackbar\n      state.snackbar.text = data.text\n      state.snackbar.color = data.color\n    }\n  },\n  actions: {\n    showMSG ({\n      commit\n    }, data) {\n      commit('SHOW_SNACKBAR', data)\n    },\n    showLIW ({\n      commit\n    }, data) {\n      commit('SHOW_LOADING_INFO_WALLET', data)\n    }\n  },\n  modules: {\n    accountStore,\n    walletStore,\n    appCoreStore,\n    nodeStore,\n    transactionsStore,\n    coingeckoStore,\n    namespaceStore,\n    mosaicStore,\n    socketDbStore,\n    mosaicExchange,\n    socketBcStore,\n    offersStore,\n    onLineStore,\n    nodesStoreNew\n  }\n})\n","import Vue from 'vue'\nimport store from '@/store'\nimport { MosaicNonce } from 'tsjs-xpx-chain-sdk/dist/src/model/mosaic/MosaicNonce'\n\nfunction buildModifyMetadataTransactionMosaic (mosaicId, modifications) {\n  let dataRequired = []\n  const action = 'metadataMosaicTx'\n  const transaction = Vue.prototype.$blockchainProvider.modifyMetadataTransactionMosaic(mosaicId, modifications)\n  return {\n    transaction,\n    dataRequired,\n    action\n  }\n}\n\n/**\n *\n * @param {*} ownerPublicKey\n * @param {*} duration\n * @param {*} divisibility\n * @param {*} isSupplyMutable\n * @param {*} isTransferable\n */\nfunction buildMosaicDefinitionTransaction (ownerPublicKey, randomNonce, duration, divisibility, isSupplyMutable, isTransferable) {\n  let dataRequired = []\n  const action = 'mosaicDefinitionTx'\n  const transaction = Vue.prototype.$blockchainProvider.mosaicDefinitionTransaction(ownerPublicKey, randomNonce, duration, divisibility, isSupplyMutable, isTransferable)\n  return {\n    transaction,\n    dataRequired,\n    action\n  }\n}\n/**\n *\n * @param {*} mosaicId\n * @param {*} mosaicSupplyType\n * @param {*} delta\n */\nfunction buildMosaicSupplyChangeTransaction (mosaicId, mosaicSupplyType, delta) {\n  let dataRequired = []\n  const action = 'mosaicSupplyChangeTx'\n  const transaction = Vue.prototype.$blockchainProvider.mosaicSupplyChangeTransaction(mosaicId, mosaicSupplyType, delta)\n  return {\n    transaction,\n    dataRequired,\n    action\n  }\n}\n/**\n *\n * @param {*} aliasActionType\n * @param {*} namespaceId\n * @param {*} mosaicId\n */\nfunction buildMosaicAliasTransaction (aliasActionType, namespaceId, mosaicId) {\n  let dataRequired = []\n  const action = 'mosaicAliasTx'\n  const transaction = Vue.prototype.$blockchainProvider.mosaicAliasTransaction(aliasActionType, namespaceId, mosaicId)\n  return {\n    transaction,\n    dataRequired,\n    action\n  }\n}\n\n/**\n *\n *\n * @param {*} [mosaicsId=null]\n * @param {string} [byAccount='']\n * @returns\n */\nasync function filterMosaics (mosaicsId = null) {\n  if (mosaicsId) {\n    let mosaicsFromStore = store.getters['mosaicStore/mosaics']\n    if (mosaicsFromStore.length > 0) {\n      const dataReturn = []\n      const toSearch = []\n      for (let element of mosaicsId) {\n        const existMosaic = mosaicsFromStore.find(\n          x => Vue.prototype.$blockchainProvider.getMosaicId(x.idMosaic).toHex() === element.toHex()\n        )\n\n        if (existMosaic) {\n          dataReturn.push(existMosaic)\n        } else {\n          const existMosaic = mosaicsFromStore.find(x =>\n            x.isNamespace\n              ? Vue.prototype.$blockchainProvider.getMosaicId(x.isNamespace).toHex() === element.toHex()\n              : undefined\n          )\n          if (existMosaic) {\n            dataReturn.push(existMosaic)\n          } else {\n            toSearch.push(element)\n          }\n        }\n      }\n      if (toSearch.length > 0) {\n        const mosaicsSearched = await searchInfoMosaics(toSearch)\n        if (mosaicsSearched && mosaicsSearched.length > 0) {\n          mosaicsSearched.forEach(element => {\n            dataReturn.push(element)\n          })\n        }\n      }\n      return filterMosaicToReturn(dataReturn)\n    } else {\n      const infoMosaics = await searchInfoMosaics(mosaicsId)\n      return filterMosaicToReturn(infoMosaics)\n    }\n  }\n}\n\n/**\n *\n *\n * @param {*} infoMosaics\n * @returns\n */\nfunction filterMosaicToReturn (infoMosaics) {\n  const returned = []\n  if (infoMosaics && infoMosaics.length > 0) {\n    infoMosaics.forEach(element => {\n      if (returned.length > 0) {\n        const existByNamespace = returned.find(x =>\n          x.isNamespace && element.isNamespace ? Vue.prototype.$blockchainProvider.getMosaicId(x.isNamespace).toHex() ===\n            Vue.prototype.$blockchainProvider.getMosaicId(element.isNamespace).toHex() : undefined\n        )\n\n        // search by mosaic\n        if (!existByNamespace) {\n          const existByMosaic = returned.find(x =>\n            Vue.prototype.$blockchainProvider.getMosaicId(x.idMosaic).toHex() ===\n            Vue.prototype.$blockchainProvider.getMosaicId(element.idMosaic).toHex()\n          )\n\n          if (!existByMosaic) {\n            returned.push(element)\n          }\n        }\n      } else {\n        returned.push(element)\n      }\n    })\n  }\n  return returned\n}\n/**\n *\n * @param {*} publicKey\n */\nfunction mosaicNonceFromPublicKey (publicKey) {\n  let mosaicNonce = {\n    randomNonce: null,\n    mosaicId: null\n  }\n  mosaicNonce.randomNonce = MosaicNonce.createRandom()\n  mosaicNonce.mosaicId = Vue.prototype.$blockchainProvider.mosaicNonceFromPublicKey(publicKey,\n    mosaicNonce.randomNonce\n  )\n  return mosaicNonce\n}\n\n/**\n *\n *\n * @param {*} mosaicsId\n * @param {boolean} [mosaicsInfOffer=false]\n * @returns\n */\nasync function searchInfoMosaics (mosaicsId, mosaicsInfOffer = false) {\n  const type = !mosaicsInfOffer ? 'mosaicsInfo' : 'mosaicsInfOffer'\n  store.dispatch('showLIW', {\n    show: true,\n    text: `Mosaics info`,\n    type: type\n  })\n  try {\n    const mosaicsTosaved = []\n    if (mosaicsId.length > 0) {\n      const findMosaicsByNamespace = []\n      // le paso todos los mosaicsIds a la consulta\n      const mosaicsFound = await Vue.prototype.$blockchainProvider.getMosaics(mosaicsId).toPromise()\n      // Recorro los mosaics Ids\n      mosaicsId.forEach(element => {\n        // Filtra si el mosaico id fue encontrado\n        const existMosaic = mosaicsFound.find(x => x.mosaicId.id.toHex() === element.id.toHex())\n        if (!existMosaic) {\n          // Si no fue encontrado, busca mosaicos por namespace\n          findMosaicsByNamespace.push(element)\n        }\n      })\n      if (findMosaicsByNamespace.length > 0) {\n        // busca los namespaceId de los mosaicos que no fueron encontrados\n        const otherMosaics = await searchMosaicFromNamespace(findMosaicsByNamespace)\n        otherMosaics.forEach(element => {\n          mosaicsTosaved.push(element)\n        })\n      }\n      if (mosaicsFound.length > 0) {\n        const mosaicsName = await Vue.prototype.$blockchainProvider.getMosaicsName(mosaicsId).toPromise()\n        mosaicsFound.forEach(infoMosaic => {\n          try {\n            const existMosaicName = mosaicsName\n              ? mosaicsName.find(x => x.mosaicId.toHex() === infoMosaic.mosaicId.toHex())\n              : null\n            mosaicsTosaved.push({\n              idMosaic: [infoMosaic.mosaicId.id.lower, infoMosaic.mosaicId.id.higher],\n              isNamespace: existMosaicName && existMosaicName.names && existMosaicName.names.length > 0 ? [\n                existMosaicName.names[0].namespaceId.id.lower,\n                existMosaicName.names[0].namespaceId.id.higher\n              ] : null,\n              mosaicNames: existMosaicName,\n              mosaicInfo: infoMosaic\n            })\n          } catch (error) {\n            // console.log('Has ocurred a error with search mosaics', error);\n          }\n        })\n      }\n      if (!mosaicsInfOffer) saveMosaicStorage(mosaicsTosaved)\n      return mosaicsTosaved\n    }\n  } catch {\n    return null\n  }\n}\n/**\n *\n *\n * @param {*} findMosaicsByNamespace\n * @returns\n */\nasync function searchMosaicFromNamespace (findMosaicsByNamespace) {\n  const mosaicsTosaved = []\n  if (findMosaicsByNamespace.length > 0) {\n    const searchMosaicById = []\n    const savedLinked = []\n    // recorro todos los mosaics id o namespaces id\n    for (const id of findMosaicsByNamespace) {\n      // convierto ese mosaico id a nemespace id\n      const namespaceId = Vue.prototype.$blockchainProvider.getNamespaceId([id.id.lower, id.id.higher])\n      // consulta si ese namespaceId esta linkeado a un mosaicId y retorna el mosaico Id\n      const mosaicIdLinked = await Vue.prototype.$blockchainProvider.getLinkedMosaicId(namespaceId).toPromise()\n      // si esta linkeado...\n      if (mosaicIdLinked) {\n        // almacena que ese mosaic id esta linkeado a un namespace\n        savedLinked.push({\n          mosaicId: mosaicIdLinked,\n          namespaceId\n        })\n        // Busca los mosaics ids encontrados (linkeados)\n        searchMosaicById.push(mosaicIdLinked)\n      }\n    }\n\n    if (searchMosaicById.length > 0) {\n      const otherMosaicsFound = await this.proximaxProvider.getMosaics(searchMosaicById).toPromise()\n      const mosaicsName = await Vue.prototype.$blockchainProvider.getMosaicsName(savedLinked.map(x => x.mosaicId))\n      // console.log('---mosaicsName---', mosaicsName);\n      otherMosaicsFound.forEach(infoMosaic => {\n        const dataFiltered = savedLinked.find(\n          x => x.mosaicId.toHex() === infoMosaic.mosaicId.toHex()\n        )\n        const mosaicIdFiltered = dataFiltered ? [dataFiltered.namespaceId.id.lower, dataFiltered.namespaceId.id.higher]\n          : null\n        if (mosaicIdFiltered) {\n          mosaicsTosaved.push({\n            idMosaic: [infoMosaic.mosaicId.id.lower, infoMosaic.mosaicId.id.higher],\n            isNamespace: mosaicIdFiltered,\n            mosaicNames: mosaicsName ? mosaicsName.find(x => x.mosaicId.toHex() === dataFiltered.mosaicId.toHex()) : null,\n            mosaicInfo: infoMosaic\n          })\n        }\n      })\n    }\n  }\n\n  return mosaicsTosaved\n}\n/**\n *\n *\n * @param {*} mosaicsTosaved\n */\nasync function saveMosaicStorage (mosaicsTosaved) {\n  if (mosaicsTosaved) {\n    // let mosaicsStorage this.getMosaicsFromStorage();\n    let mosaicsStorage = store.getters['mosaicStore/mosaics']\n    for (const element of mosaicsTosaved) {\n      if (mosaicsStorage.length > 0) {\n        const mosaicIdToSaved = Vue.prototype.$blockchainProvider.getMosaicId(element.idMosaic).toHex()\n        const elementStorage = mosaicsStorage.find(x => Vue.prototype.$blockchainProvider.getMosaicId(x.idMosaic).toHex() === mosaicIdToSaved)\n        if (elementStorage) {\n          // Verifica si en cache tiene namespaceId y si en el nuevo no trajo namespaceId\n          if (elementStorage.isNamespace && !element.isNamespace) {\n            // Si en cache tiene namespace, verifica si todavía está linkeado a ese namespace\n            try {\n              const namespaceId = Vue.prototype.$blockchainProvider.getNamespaceId(elementStorage.isNamespace)\n              const mosaicIdLinked = await Vue.prototype.$blockchainProvider.getLinkedMosaicId(namespaceId).toPromise()\n              if (mosaicIdLinked && mosaicIdLinked.toHex() === mosaicIdToSaved) {\n                element.isNamespace = elementStorage.isNamespace\n              }\n            } catch (error) { }\n          }\n        }\n        // reemplazo la información del mosaico\n        mosaicsStorage = mosaicsStorage.filter(x => Vue.prototype.$blockchainProvider.getMosaicId(x.idMosaic).toHex() !== mosaicIdToSaved)\n      }\n      mosaicsStorage.push(element)\n    }\n    store.dispatch('showLIW', {\n      show: false,\n      text: `Mosaics info`,\n      type: null\n    })\n    store.commit('mosaicStore/SET_MOSAICS', mosaicsStorage)\n  }\n}\n/**\n * Done\n * @param {*} duration\n */\nfunction getCalRentalFeeMosaic (duration = 365) {\n  // return store.getters.environment.rentalFee.mosaic * Vue.prototype.$generalService.calculateDurationforDay(duration)\n  return store.getters.environment.rentalFee.mosaic\n}\n\nexport {\n  buildMosaicDefinitionTransaction,\n  buildMosaicSupplyChangeTransaction,\n  buildMosaicAliasTransaction,\n  buildModifyMetadataTransactionMosaic,\n  mosaicNonceFromPublicKey,\n  filterMosaics,\n  searchInfoMosaics,\n  getCalRentalFeeMosaic\n}\n","import Vue from 'vue'\nimport store from '@/store'\n/**\n* The alias type\n*\n* - 0 : No alias\n* - 1 : Mosaic id alias\n* - 2 : Address alias\n*/\nfunction aliasType (type) {\n  let typeAlias = null\n  if (type === 0) { typeAlias = 'none' }\n  if (type === 1) { typeAlias = 'mosaic' }\n  if (type === 2) { typeAlias = 'address' }\n  return typeAlias\n}\n/**\n *\n * @param {*} rootNamespaceName\n * @param {*} subnamespaceName\n * @param {*} duration\n * @param {*} type\n */\nfunction buildRegisterNamespaceTransaction (rootNamespaceName, subnamespaceName, duration, type) {\n  const durationsend = Vue.prototype.$generalService.calculateDurationforDay(Number(duration))\n  let dataRequired = []\n  const action = 'registerNamespaceTx'\n  const transaction = Vue.prototype.$blockchainProvider.registerNamespaceTransaction(rootNamespaceName, subnamespaceName, durationsend, type)\n\n  return {\n    transaction,\n    dataRequired,\n    action\n  }\n}\n/**\n *\n * @param {*} duration\n */\nfunction getCalRentalFee (duration) {\n  const durationByBlock = Vue.prototype.$generalService.calculateDurationforDay(duration)\n  return store.getters.environment.rentalFee.namespace * durationByBlock\n}\n\nfunction nameToAssetExample (nameForm = null, nameNamespace = null) {\n  let name = null\n  if (nameForm && nameNamespace) {\n    name = `${nameNamespace}.${nameForm}`\n  } else if (nameForm) {\n    name = nameForm\n  } else {\n    name = nameNamespace\n  }\n  return name\n}\n\n/**\n *\n * @param {*} accounts\n */\nasync function searchNamespacesFromAccounts (accounts) {\n  store.commit('namespaceStore/LOADING', true)\n  const allNamespaces = []\n  for (const account of accounts) {\n    const address = Vue.prototype.$blockchainProvider.createRawAddress(account.simpleWallet.address['address'])\n    try {\n      // Gets array of NamespaceInfo for an account\n      const namespaceInfo = await Vue.prototype.$blockchainProvider.getNamespaceFromAccount(address).toPromise()\n      if (namespaceInfo && namespaceInfo.length > 0) {\n        namespaceInfo.forEach(element => {\n          allNamespaces.push(element)\n        })\n      }\n    } catch {\n      return\n    }\n    saveNamespace(allNamespaces)\n  }\n}\n/**\n * validate name namespace\n * @param {*} value\n */\nfunction validateNamespaceName (value) {\n  let isvalid = null\n  if (value) {\n    const formatter = value\n      .toLowerCase()\n      .replace(/[^a-z0-9]/gi, '')\n      .trim()\n    if (formatter !== value) {\n      isvalid = `Format not allowed, characters (${Vue.prototype.$generalService.differString(\n        formatter,\n        value\n      )}) not valid`\n    } else {\n      isvalid = true\n    }\n  }\n  return isvalid\n}\n/**\n *\n * @param {*} parantName\n * @param {*} childName\n */\nfunction validateRootAndSubNamespace (parantName, childName, typeNamespace = 'rootNamespaceName') {\n  let returnValue = {\n    rootNamespaceName: null,\n    subNamespaceName: null\n\n  }\n  const defaultV = 'd'\n  if (typeNamespace === 'rootNamespaceName') {\n    returnValue.rootNamespaceName = parantName || defaultV\n    returnValue.subNamespaceName = parantName || defaultV\n  } else {\n    returnValue.rootNamespaceName = childName || defaultV\n    returnValue.subNamespaceName = parantName || defaultV\n  }\n  return returnValue\n}\n/**\n *\n *\n * @param {*} namespaceInfo\n */\nasync function saveNamespace (namespaceInfo) {\n  // const namespacesStorage = this.getNamespacesStorage()\n  const namespacesStorage = []\n  const names = await Vue.prototype.$blockchainProvider.getNamespacesName(namespaceInfo.map(x => x.id)).toPromise()\n  const namespacesFound = []\n  for (const info of namespaceInfo) {\n    namespacesFound.push({\n      id: [info.id.id.lower, info.id.id.higher],\n      idToHex: info.id.toHex(),\n      namespaceName: names.find(name => name.namespaceId.toHex() === info.id.toHex()),\n      namespaceInfo: info\n    })\n  }\n  const namespaceToSaved = namespacesFound.slice(0)\n  if (namespacesStorage.length > 0 && namespaceToSaved.length > 0) {\n    for (const namespacesSaved of namespacesStorage) {\n      const existNamespace = namespaceToSaved.find(b => b.idToHex === namespacesSaved.idToHex)\n      if (!existNamespace) {\n        namespaceToSaved.push(namespacesSaved)\n      }\n    }\n  }\n  store.commit('namespaceStore/SET_NAMESPACES', namespaceToSaved)\n}\n/**\n *\n * @param {*} duration\n */\nfunction getCalRentalFeeSubNamespace () {\n  return store.getters.environment.rentalFee.subnamespace\n}\n\nexport {\n  aliasType,\n  buildRegisterNamespaceTransaction,\n  getCalRentalFee,\n  nameToAssetExample,\n  searchNamespacesFromAccounts,\n  validateNamespaceName,\n  validateRootAndSubNamespace,\n  getCalRentalFeeSubNamespace\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('v-overlay',{attrs:{\"value\":_vm.overlay}},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"size\":\"64\"}})],1),_c('v-snackbar',{attrs:{\"bottom\":_vm.snackbar.y === 'bottom',\"top\":_vm.snackbar.y === 'top',\"right\":_vm.snackbar.x === 'right',\"left\":_vm.snackbar.x === 'left',\"vertical\":_vm.snackbar.mode === 'vertical',\"color\":_vm.snackbar.color,\"multi-line\":_vm.snackbar.mode === 'multi-line',\"timeout\":_vm.snackbar.timeout},model:{value:(_vm.snackbar.snackbar),callback:function ($$v) {_vm.$set(_vm.snackbar, \"snackbar\", $$v)},expression:\"snackbar.snackbar\"}},[_vm._v(\" \"+_vm._s(_vm.snackbar.text)+\" \"),_c('v-btn',{attrs:{\"dark\":\"\",\"text\":\"\"},on:{\"click\":function($event){_vm.snackbar.snackbar = false}}},[_vm._v(\"Close\")])],1),_c('menu-item')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {\n  getAccountsInfo\n} from '@/services/account-wallet-service'\nimport {\n  mapGetters, mapMutations\n} from 'vuex'\nimport { Utilities } from 'tsjs-sirius-suite-wallet-library/dist/utils/Utilities'\nexport default {\n  data () {\n    return {\n      connectionStablished: false\n    }\n  },\n  computed: {\n    // ...mapGetters('nodeStore', ['nodeStatus', 'networkType']),\n    ...mapMutations('nodesStoreNew', ['RECONNECT']),\n    ...mapGetters('nodesStoreNew', ['nodeStatus', 'currentNode', 'reconnect']),\n    ...mapGetters('transactionsStore', ['confirmed', 'status', 'unconfirmedAdded'])\n  },\n  watch: {\n    nodeStatus (newValue) {\n      // console.log('\\n------------ STATUS NODE HAS CHANGED  ------------\\n')\n      // Init app\n      if (newValue === 2) {\n        const uri = Utilities.splitURL(this.currentNode)\n        this.$blockchainProvider.instanceConnectionApi(uri.domainIp, uri.protocol)\n        this.connectionStablished = true\n        const allAccounts = this.$store.getters['walletStore/currentWallet'].accounts\n        getAccountsInfo(allAccounts)\n        if (!this.reconnect) {\n          this.$store.dispatch('socketDbStore/getMoisaicsInfo', {\n            io: this.$socket,\n            data: null\n          })\n        }\n      }\n    },\n    confirmed (transactions) {\n      const allAccounts = this.$store.getters['walletStore/currentWallet'].accounts\n      getAccountsInfo(allAccounts)\n      // console.log('----- WATCH CONFIRMED ------', transactions)\n      const hashs = transactions.map(t => t.transactionInfo.hash)\n      const monitorHashs = this.$store.getters['transactionsStore/getMonitorHashs']\n      monitorHashs.forEach(element => {\n        if (hashs.find(x => x === element.hash)) {\n          // console.log('MONITOR HASH FOUND --->', element)\n          this.REMOVE_MONITOR_HASH(element.hash)\n          this.actions(element)\n        }\n      })\n    },\n    status (hashs) {\n      // console.log('----- WATCH STATUS ------', hashs)\n      const monitorHashs = this.$store.getters['transactionsStore/getMonitorHashs']\n      monitorHashs.forEach(element => {\n        if (hashs.find(x => x === element.hash)) {\n          this.REMOVE_MONITOR_HASH(element.hash)\n          this.REMOVE_STATUS_TX(element.hash)\n        }\n      })\n    }\n    // unconfirmedAdded (transactions) {\n    //   const hashs = transactions.map(t => t.transactionInfo.hash)\n    //   const monitorHashs = this.$store.getters['transactionsStore/getMonitorHashs']\n    //   monitorHashs.forEach(element => {\n    //     if (hashs.find(x => x === element.hash)) {\n    //       this.REMOVE_MONITOR_HASH(element.hash)\n    //       this.actions(element)\n    //     }\n    //   })\n    // },\n\n  },\n  methods: {\n    ...mapMutations('transactionsStore', ['REMOVE_STATUS_TX', 'REMOVE_MONITOR_HASH']),\n    actions (data) {\n      switch (data.action) {\n        case 'insertMoisaicsInfo':\n          // console.log('I N S E R T    MOSAIC INFO ', JSON.stringify(data.dataRequired.moisaicsInfo))\n          this.$store.dispatch('socketDbStore/insertMoisaicsInfo', {\n            io: this.$socket,\n            data: data.dataRequired\n          })\n          break\n        case 'insertExecuteOffers':\n          // console.log('I N S E R T    EXECUE ', JSON.stringify(data.dataRequired.dataRequiredDb))\n          this.$store.dispatch('socketDbStore/insertExecuteOffers', {\n            io: this.$socket,\n            data: data.dataRequired.dataRequiredDb\n          })\n          this.$store.dispatch('socketDbStore/insertMoisaicsInfo', {\n            io: this.$socket,\n            data: data.dataRequired.dataRequiredMosaic\n          })\n          break\n        case 'removeExchangeOffer':\n          // this.$store.dispatch('socketDbStore/removeExchangeOffer', {\n          //   io: this.$socket,\n          //   data: data.dataRequired.dataRequiredDb\n          // })\n          this.$store.dispatch('socketDbStore/insertMoisaicsInfo', {\n            io: this.$socket,\n            data: data.dataRequired.dataRequiredMosaic\n          })\n          break\n      }\n    }\n  },\n  created () {\n    window.addEventListener('offline', () => {\n      this.$store.dispatch('onLineStore/setConnected', false)\n    })\n    window.addEventListener('online', () => {\n      this.$store.dispatch('onLineStore/setConnected', true)\n    })\n  }\n}\n","<template>\n  <v-app>\n    <!-- Menu -->\n    <!-- <menu-item v-if=\"showMenu\"></menu-item> -->\n\n    <!-- Overlay -->\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n    </v-overlay>\n    <!-- Message -->\n    <v-snackbar\n      v-model=\"snackbar.snackbar\"\n      :bottom=\"snackbar.y === 'bottom'\"\n      :top=\"snackbar.y === 'top'\"\n      :right=\"snackbar.x === 'right'\"\n      :left=\"snackbar.x === 'left'\"\n      :vertical=\"snackbar.mode === 'vertical'\"\n      :color=\"snackbar.color\"\n      :multi-line=\"snackbar.mode === 'multi-line'\"\n      :timeout=\"snackbar.timeout\"\n    >\n      {{ snackbar.text }}\n      <v-btn dark text @click=\"snackbar.snackbar = false\">Close</v-btn>\n    </v-snackbar>\n    <menu-item></menu-item>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n// import getInfoAssetsMixin from '@/mixins/get-info-assets-mixin'\n// import getOffertMixin from '@/mixins/get-offert-mixin'\nimport monitorNodesTxn from '@/mixins/monitor-nodes-txn-mixin'\nexport default {\n  // mixins: [getInfoAssetsMixin, monitorNodesTxn, getOffertMixin],\n  mixins: [monitorNodesTxn],\n  name: 'App',\n  data: () => ({}),\n  components: {\n    'menu-item': () => import('@/components/Menu')\n  },\n  computed: {\n    ...mapState(['overlay', 'snackbar']),\n    ...mapState(['showMenu'])\n  }\n}\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4bfbdce6&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\ninstallComponents(component, {VApp,VBtn,VOverlay,VProgressCircular,VSnackbar})\n","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Log In',\n    component: () => import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/login/LogIn.vue'),\n    meta: {}\n  },\n  {\n    path: '/searchOfferts',\n    name: 'Search Offerts ',\n    component: () =>\n      import(/* webpackChunkName: \"searchOfferts\" */ '../views/searchOffers/TypeSearchOffers.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/nodes',\n    name: 'nodes',\n    component: () =>\n      import(/* webpackChunkName: \"searchOfferts\" */ '../views/nodes/NodesBlockchain.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/newAsset',\n    name: 'new Asset',\n    component: () =>\n      import(/* webpackChunkName: \"newAsset\" */ '../views/newAsset/createNewAsset.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/newOffer',\n    name: 'new Offer',\n    component: () =>\n      import(/* webpackChunkName: \"newOffer\" */ '../views/newOffer/createNewOffer.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/home',\n    name: 'home',\n    component: () => import(/* webpackChunkName: \"Home\" */ '../views/Home.vue'),\n    meta: {\n      requiresNotAuth: true\n    }\n  },\n  {\n    path: '/create-new-signup',\n    name: 'New Signup',\n    component: () =>\n      import(/* webpackChunkName: \"CreateNewSignup.vue\" */ '../views/signup/CreateNewSignup.vue'),\n    meta: {\n      requiresNotAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/select-signup-type',\n    name: 'Signup Type',\n    component: () =>\n      import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/signup/SelectTypeSignup.vue'),\n    meta: {\n      requiresNotAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/take-offers',\n    name: 'take offers',\n    component: () =>\n      import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/takeOffers/TakeOffers.vue'),\n    meta: {\n      requiresAuth: true,\n      // requiresNotAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/offer-board',\n    name: 'Offer Board',\n    component: () =>\n      import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/offerBoard/OfferBoard.vue'),\n    meta: {\n      requiresNotAuth: true,\n      requiresAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/create-from-privateKey',\n    name: 'Create from private key',\n    component: () =>\n      import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/signup/CreateFromPrivateKey.vue'),\n    meta: {\n      requiresNotAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/login',\n    name: 'Log In',\n    component: () => import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/login/LogIn.vue'),\n    meta: {\n      requiresNotAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: () =>\n      import(/* webpackChunkName: \"SelectTypeSignup\" */ '../views/dashboard/dashboard.vue'),\n    meta: {\n      requiresAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/allOffer',\n    name: 'All offer',\n    component: () =>\n      import(/* webpackChunkName: \"AllOffer\" */ '../views/allOffer/AllOffer.vue'),\n    meta: {\n      requiresAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/myWallet',\n    name: 'Info walleet',\n    component: () =>\n      import(/* webpackChunkName: \"WalletInfo\" */ '../views/myWalletInfo/WalletInfo.vue'),\n    meta: {\n      requiresAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '/deleteOffer',\n    name: 'Delete Offer',\n    component: () =>\n      import(/* webpackChunkName: \"deleteOffer\" */ '../views/deleteOffer/DeleteOffer.vue'),\n    meta: {\n      requiresAuth: true,\n      hideMenu: false\n    }\n  },\n  {\n    path: '*',\n    redirect: '/'\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\nrouter.beforeEach(async (to, from, next) => {\n  const hideMenu = to.matched.some(record => record.meta.hideMenu)\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const requiresNotAuth = to.matched.some(record => record.meta.requiresNotAuth)\n  if (hideMenu) {\n    store.commit('SHOW_MENU', false)\n  } else {\n    store.commit('SHOW_MENU', true)\n  }\n  if (requiresAuth && requiresNotAuth) {\n    next()\n    return\n  }\n  if (requiresAuth && !store.getters['accountStore/isLogged']) {\n    next('/')\n  } else if (requiresNotAuth && store.getters['accountStore/isLogged']) {\n    next('/home')\n  } else {\n    next()\n  }\n})\nexport default router\n","import Vue from 'vue'\nimport Vuetify from 'vuetify/lib'\nimport colors from 'vuetify/lib/util/colors'\n\nVue.use(Vuetify)\n\nexport default new Vuetify({\n  theme: {\n    dark: false,\n    options: {\n      customProperties: true,\n      minifyTheme: function (css) {\n        return process.env.NODE_ENV === 'production' ? css.replace(/[\\r\\n|\\r|\\n]/g, '') : css\n      }\n    },\n    themes: {\n      light: {\n        primary: '#1C82A9',\n        secondary: '#00bcd4',\n        accent: '#03a9f4',\n        error: '#f44336',\n        warning: '#ffc107',\n        info: '#2196f3',\n        success: '#4caf50',\n        darkness: '#222222', // CUMSTON\n        errorIntense: colors.red.darken1,\n        orange: colors.orange,\n        pin: '604CC0', //\n        dim: '#00B938',\n        sky: '062B39',\n        leve: '#F4F4F4', // antes  F4F4F4  #00B938\n        leveint: 'FFF',\n        leveif: 'EEEEEE',\n        inputStyle: '1C82A9'\n      },\n      dark: {\n        primary: '#0CFF5D',\n        secondary: '#FFB80C',\n        light: '#49B3FF',\n        leve: '#FFFFFF',\n        dim: '#333333',\n        darkness: '#222222',\n        chip1: '#194b2e',\n        chip2: '#4a3c19',\n        chip3: '#102638',\n        errorIntense: colors.red.darken1\n      }\n    }\n  }\n})\n","const storage = localStorage\n\n/**\n *\n *\n */\nfunction clear () {\n  storage.clear()\n}\n/**\n *\n *\n * @param {*} key\n * @returns\n */\nfunction get (key) {\n  return storage.getItem(key)\n}\n/**\n *\n *\n * @param {*} key\n * @param {*} value\n */\nfunction set (key, value) {\n  storage.setItem(key, value)\n}\n\nexport {\n  clear,\n  get,\n  set\n}\n","// import {\n//   AccountHttp,\n//   BlockHttp,\n//   DiagnosticHttp,\n//   ChainHttp,\n//   MetadataHttp,\n//   MosaicHttp,\n//   NamespaceHttp,\n//   TransactionHttp\n// } from 'tsjs-xpx-chain-sdk'\n\nimport {\n  AccountHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/AccountHttp'\n\nimport {\n  BlockHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/BlockHttp'\nimport {\n  ExchangeHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/ExchangeHttp'\nimport {\n  MosaicHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/MosaicHttp'\nimport {\n  MetadataHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/MetadataHttp'\n\nimport {\n  NamespaceHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/NamespaceHttp'\n\nimport {\n  TransactionHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/TransactionHttp'\n\nclass Connections {\n  constructor (node, protocol) {\n    this.url = this.getBuildUrl(node, protocol)\n    this.accountHttp = new AccountHttp(this.url)\n    this.blockHttp = new BlockHttp(this.url)\n    this.mosaicHttp = new MosaicHttp(this.url)\n    this.metadataHttp = new MetadataHttp(this.url)\n    this.namespaceHttp = new NamespaceHttp(this.url)\n    this.transactionHttp = new TransactionHttp(this.url)\n    this.exchangeHttp = new ExchangeHttp(this.url)\n  }\n\n  getBuildUrl (node, protocol) {\n    switch (protocol) {\n      case 'http':\n        return `${protocol}://${node}:3000`\n      case 'https':\n        return `${protocol}://${node}:443`\n    }\n  }\n}\n\nexport { Connections }\n","import store from '@/store'\nimport * as crypto from 'js-xpx-chain-library/dist/crypto/crypto'\nimport {\n  Account\n} from 'tsjs-xpx-chain-sdk/dist/src/model/account/Account'\nimport {\n  AddExchangeOffer\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/AddExchangeOffer'\nimport {\n  ExchangeOffer\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/ExchangeOffer'\nimport {\n  AddExchangeOfferTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/AddExchangeOfferTransaction'\nimport {\n  ExchangeOfferTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/ExchangeOfferTransaction'\nimport {\n  AggregateTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/AggregateTransaction'\nimport {\n  Deadline\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/Deadline'\nimport {\n  PublicAccount\n} from 'tsjs-xpx-chain-sdk/dist/src/model/account/PublicAccount'\nimport {\n  RemoveExchangeOfferTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/RemoveExchangeOfferTransaction'\nimport {\n  RemoveExchangeOffer\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/RemoveExchangeOffer'\nimport {\n  BlockHttp\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/BlockHttp'\nimport {\n  QueryParams\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/QueryParams'\nimport {\n  Address\n} from 'tsjs-xpx-chain-sdk/dist/src/model/account/Address'\nimport {\n  NetworkType\n} from 'tsjs-xpx-chain-sdk/dist/src/model/blockchain/NetworkType'\nimport {\n  MosaicId\n} from 'tsjs-xpx-chain-sdk/dist/src/model/mosaic/MosaicId'\nimport {\n  MosaicProperties\n} from 'tsjs-xpx-chain-sdk/dist/src/model/mosaic/MosaicProperties'\nimport {\n  MosaicDefinitionTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/MosaicDefinitionTransaction'\nimport {\n  MosaicSupplyChangeTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/MosaicSupplyChangeTransaction'\nimport {\n  MosaicAliasTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/MosaicAliasTransaction'\nimport {\n  ModifyMetadataTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/ModifyMetadataTransaction'\nimport {\n  NamespaceId\n} from 'tsjs-xpx-chain-sdk/dist/src/model/namespace/NamespaceId'\nimport {\n  RegisterNamespaceTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/RegisterNamespaceTransaction'\nimport {\n  TransactionType\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/TransactionType'\nimport {\n  TransferTransaction\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/TransferTransaction'\nimport {\n  SimpleWallet\n} from 'tsjs-xpx-chain-sdk/dist/src/model/wallet/SimpleWallet'\nimport {\n  Password\n} from 'tsjs-xpx-chain-sdk/dist/src/model/wallet/Password'\nimport {\n  UInt64\n} from 'tsjs-xpx-chain-sdk/dist/src/model/UInt64'\nimport {\n  Connections\n} from '@/core/utils/connection'\n\nlet connection = []\n/**\n *\n *\n * @param {*} connectionNodes\n */\nfunction instanceConnectionApi (randomNode, protocol) {\n  connection = new Connections(randomNode, protocol)\n}\n\n/**\n *\n *\n * @param {*} signedTransaction\n * @returns\n */\nfunction announceTx (signedTransaction) {\n  return connection.transactionHttp.announce(signedTransaction)\n}\n/**\n *\n * @param {*} innerTransaction\n * @param {*} cosignatures\n */\nfunction aggregateTransaction (innerTransaction = [], cosignatures = []) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return AggregateTransaction.createComplete(\n    Deadline.create(10),\n    innerTransaction,\n    network,\n    cosignatures\n  )\n}\n/**\n *\n *\n * @param {*} mosaicId\n * @param {*} mosaicAmount\n * @param {*} costValue\n * @param {*} type\n * @param {*} durationValue\n * @returns\n */\nfunction addExchangeOffer (mosaicId, mosaicAmount, costValue, type, durationValue) {\n  const amount = UInt64.fromUint(mosaicAmount)\n  const cost = UInt64.fromUint(costValue)\n  const duration = UInt64.fromUint(durationValue)\n  const network = store.getters['nodesStoreNew/networkType']\n  return AddExchangeOfferTransaction.create(\n    Deadline.create(10),\n    [new AddExchangeOffer(mosaicId, amount, cost, type, duration)],\n    network\n  )\n}\n/**\n * @param {MosaicId} mosaicId MosaicId\n * @param {Number} mosaicAmount\n * @param {Number} cost\n * @param {Int} type\n * @param {PublicAccount} publicAccount\n * @returns\n * @memberof ProximaxProvider\n */\nfunction exchangeOffer (mosaicId, mosaicAmount, costValue, type, publicAccount) {\n  const amount = UInt64.fromUint(mosaicAmount)\n  const cost = UInt64.fromUint(costValue)\n  const network = store.getters['nodesStoreNew/networkType']\n  return ExchangeOfferTransaction.create(\n    Deadline.create(10),\n    [new ExchangeOffer(mosaicId, amount, cost, type, publicAccount)],\n    network\n  )\n}\n/**\n * @param {MosaicId} mosaicId MosaicId\n * @param {Number} mosaicAmount\n * @param {Number} cost\n * @param {Int} type\n * @param {PublicAccount} publicAccount\n * @returns\n * @memberof ProximaxProvider\n */\nfunction exchangeOfferDb (mosaicId, mosaicAmount, costValue, type, publicAccount) {\n  const amount = UInt64.fromUint(mosaicAmount)\n  const cost = UInt64.fromUint(costValue)\n  return new ExchangeOffer(mosaicId, amount, cost, type, publicAccount)\n}\n\n/**\n  *\n  *\n  * @param {*} publicKey\n  * @param {*} network\n  * @returns\n  * @memberof BlockchainProvider\n  */\nfunction createPublicAccount (publicKey, network) {\n  return PublicAccount.createFromPublicKey(publicKey, network)\n}\n/**\n *\n *\n * @param {*} address\n * @returns\n */\nfunction createRawAddress (address) {\n  return Address.createFromRawAddress(address)\n}\n\n/**\n *\n *\n * @param {*} name\n * @param {*} password\n * @param {*} [network=this.typeNetwork]\n * @returns\n */\nfunction createSimpleWallet (name, password, network) {\n  return SimpleWallet.create(name, createPassword(password), network)\n}\n\n/**\n *\n *\n * @param {*} name\n * @param {*} password\n * @param {*} privateKey\n * @param {*} [network=this.typeNetwork]\n * @returns\n */\nfunction createSimpleWalletFromPrivateKey (name, password, privateKey, network) {\n  return SimpleWallet.createFromPrivateKey(name, createPassword(password), privateKey, network)\n}\n\n/**\n *\n *\n * @param {*} password\n * @returns\n */\nfunction createPassword (password) {\n  return new Password(password)\n}\n\n/**\n *\n *\n * @param {*} date\n * @returns\n */\nfunction dateFormatUTC (date) {\n  return new Date(date.compact() + 1459468800 * 1000).toLocaleString()\n}\n\n/**\n *\n *\n * @param {*} password\n * @param {*} encryptedPrivateKey\n * @returns\n */\nfunction decryptPrivateKey (common, account) {\n  try {\n    if (account && account.encrypted !== '' && common) {\n      if (!crypto.passwordToPrivatekey(common, account, account.algo)) {\n        return {\n          status: false,\n          msg: 'Invalid password'\n        }\n      }\n\n      if (common.isHW) {\n        return {\n          status: false,\n          msg: 'Invalid password'\n        }\n      }\n\n      if (!isValidPrivateKey(common.privateKey)) {\n        return {\n          status: false,\n          msg: 'Invalid Private Key'\n        }\n      }\n      if (common.privateKey !== '') {\n        return {\n          status: true,\n          msg: ''\n        }\n      } else {\n\n      }\n    } else {\n      return {\n        status: false,\n        msg: 'You do not have a valid account selected'\n      }\n    }\n  } catch (error) {\n    return {\n      status: false,\n      msg: 'Has ocurred a error to decrypt your account.'\n    }\n  }\n}\n\n/**\n *\n * @param {*} isValidPrivateKey\n */\nfunction isValidPrivateKey (value) {\n  if (value && value !== '' && (value.length === 64 || value.length === 66) && isHexadecimal(value)) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n *\n *\n * @param {*} str\n * @returns\n */\nfunction isHexadecimal (str) {\n  return (str) ? str.match('^(0x|0X)?[a-fA-F0-9]+$') !== null : false\n}\n\n/**\n *\n *\n * @param {*} network\n * @param {boolean} [byString=true]\n * @returns\n */\nfunction filterNetworkTypeFromString (network) {\n  switch (network) {\n    case 'MAIN_NET':\n      return NetworkType.MAIN_NET\n    case 'MIJIN_TEST':\n      return NetworkType.MIJIN_TEST\n    case 'TEST_NET':\n      return NetworkType.TEST_NET\n    case 'PRIVATE':\n      return NetworkType.PRIVATE\n  }\n}\n\n/**\n *\n *\n * @param {*} network\n * @returns\n */\nfunction filterNetworkTypeFromNumber (network) {\n  switch (network) {\n    case NetworkType.MAIN_NET:\n      return 'MAIN_NET'\n    case NetworkType.MIJIN_TEST:\n      return 'MIJIN_TEST'\n    case NetworkType.TEST_NET:\n      return 'TEST_NET'\n    case NetworkType.PRIVATE:\n      return 'PRIVATE'\n  }\n}\n\n/**\n *\n *\n * @param {number} [height=1]\n * @param {string} [url='']\n * @returns\n */\nfunction getBlockInfo (height = 1, url = '') {\n  if (connection) return connection.blockHttp.getBlockByHeight(height)\n  const c = new BlockHttp(url)\n  return c.blockHttp.getBlockByHeight(height)\n}\n\n/**\n *\n *\n * @param {*} address\n * @returns\n */\nfunction getAccountInfo (address) {\n  return connection.accountHttp.getAccountInfo(address)\n}\n\n/**\n *\n *\n * @param {*} mosaicId\n * @returns\n */\nfunction getMosaicMetadata (mosaicId) {\n  return connection.metadataHttp.getMosaicMetadata(mosaicId)\n}\n/**\n *\n *\n * @param {*} Idmosaic\n * @param {*} type\n * @returns\n * @memberof BlockchainProvider\n */\nfunction getExchangeOffersfromId (Idmosaic, type) {\n  const id = new MosaicId(Idmosaic)\n  return connection.exchangeHttp.getExchangeOffers(type, id)\n}\n\n/**\n *\n *\n * @param {*} privateKey\n * @param {*} network\n * @returns\n */\nfunction getAccountFromPrivateKey (privateKey, network) {\n  const networkV = network || store.getters['nodesStoreNew/networkType']\n  return Account.createFromPrivateKey(privateKey, networkV)\n}\n\n/**\n *\n * @param {*} publicKey\n */\n\nfunction getAddressFromPublicKey (publicKey) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return Address.createFromPublicKey(publicKey, network)\n}\n/**\n *\n *\n * @param {*} address\n * @returns\n */\nfunction getMultisigAccountInfo (address) {\n  return connection.accountHttp.getMultisigAccountInfo(address)\n}\n/**\n *\n *\n * @param {*} publicAccount\n * @param {number} [queryParams=100]\n * @param {*} [id=null]\n * @param {*} [orderBy=null]\n * @returns\n */\nfunction getTransactionsFromAccount (publicAccount, queryParams = 100, id = undefined) {\n  const query = (id) ? new QueryParams(queryParams, id) : new QueryParams(queryParams)\n  return connection.accountHttp.transactions(publicAccount, query)\n}\n/**\n * Gets a transaction for a transactionId\n * @param transactionId - Transaction id or hash.\n * @returns Observable<Transaction>\n */\nfunction getTransactionId (transactionId) {\n  return connection.transactionHttp.getTransaction(transactionId)\n}\n/**\n * Gets an array of transactions for which an account is the recipient of a transaction.\n * A transaction is said to be incoming with respect to an account if the account is the recipient of a transaction.\n * @param accountId - User public account or address (you can use address if public account is not known to the network just yet)\n * @param queryParams - (Optional) Query params\n * @returns Observable<Transaction[]>\n */\nfunction getIncomingTransactions (publicAccount, queryParams = 100) {\n  return connection.accountHttp.incomingTransactions(publicAccount, new QueryParams(queryParams))\n}\n\n/**\n * Gets an array of transactions for which an account is the sender a transaction.\n * A transaction is said to be outgoing with respect to an account if the account is the sender of a transaction.\n * @param publicAccount - User public account\n * @param queryParams - (Optional) Query params\n * @returns Observable<Transaction[]>\n */\nfunction getOutgoingTransactions (publicAccount, id = null, queryParams = 100) {\n  const query = (id) ? new QueryParams(queryParams, id) : new QueryParams(queryParams)\n  return connection.accountHttp.outgoingTransactions(publicAccount, query)\n}\n\n/**\n *\n *\n * @param {*} mosaicsId\n */\nfunction getMosaics (mosaicsId) {\n  return connection.mosaicHttp.getMosaics(mosaicsId)\n}\n\n/**\n *\n *\n * @param {*} mosaicsId\n * @returns\n */\nfunction getMosaicsName (mosaicsId) {\n  return connection.mosaicHttp.getMosaicsNames(mosaicsId)\n}\n\n/**\n *\n *\n * @param {*} id\n * @returns\n */\nfunction getMosaicId (id) {\n  return new MosaicId(id)\n}\n\n/**\n *\n *\n * @param {*} id\n * @returns\n */\nfunction getNamespaceId (id) {\n  return new NamespaceId(id)\n}\n\n/**\n *\n *\n * @param {*} privateKey\n * @returns\n */\nfunction getPrefixAndPrivateKey (privateKey) {\n  let pref = null\n  let newPrivateKey = privateKey\n  if (newPrivateKey && newPrivateKey.length > 64) {\n    pref = newPrivateKey.slice(0, -64)\n    newPrivateKey = newPrivateKey.slice(2)\n  }\n\n  return {\n    pref: pref,\n    pvk: newPrivateKey\n  }\n}\n\n/**\n *\n *\n * @param {*} address\n * @returns\n */\nfunction getNamespaceFromAccount (address) {\n  return connection.namespaceHttp.getNamespacesFromAccount(address)\n}\n\n/**\n *\n *\n * @param {*} namespaceIds\n * @returns\n */\nfunction getNamespacesName (namespaceIds) {\n  return connection.namespaceHttp.getNamespacesName(namespaceIds)\n}\n\n/**\n *\n *\n * @param {*} namespace\n * @returns\n */\nfunction getLinkedMosaicId (namespace) {\n  return connection.namespaceHttp.getLinkedMosaicId(namespace)\n}\n\n/**\n *\n *\n * @returns\n */\nfunction getNetworkTypes () {\n  return [{\n    text: 'Public Test',\n    value: NetworkType.TEST_NET\n  }, {\n    text: 'Main Net',\n    value: NetworkType.MAIN_NET\n  }, {\n    text: 'Private',\n    value: NetworkType.PRIVATE\n  }]\n}\n\n/**\n *\n *\n * @param {*} configInfo\n * @returns\n */\nfunction getEnvironmentByNetworkType (configInfo) {\n  let environment = null\n  switch (configInfo.infoApp.version) {\n    case 'TEST_NET':\n      environment = configInfo.environment.TEST_NET\n      break\n    case 'MAIN_NET':\n      environment = configInfo.environment.MAIN_NET\n      break\n    case 'MIJIN_TEST':\n      environment = configInfo.environment.MIJIN_TEST\n      break\n  }\n  return environment\n}\n\n/**\n *\n *\n * @param {*} value\n * @returns\n */\nfunction getUint64 (value) {\n  return new UInt64(value)\n}\n\nfunction mosaicNonceFromPublicKey (ownerPublicKey, randomNonce) {\n  // MosaicNonce.createRandom()\n  const network = store.getters['nodesStoreNew/networkType']\n  return MosaicId.createFromNonce(randomNonce, PublicAccount.createFromPublicKey(ownerPublicKey, network))\n}\n/**\n *\n * @param {*} deadline\n * @param {*} ownerAddress\n * @param {*} isSupplyMutable\n * @param {*} isTransferable\n * @param {*} isRestrictable\n */\nfunction mosaicDefinitionTransaction (ownerPublicKey, randomNonce, duration, divisibility, isSupplyMutable, isTransferable) {\n  const network = store.getters['nodesStoreNew/networkType']\n  // const publicAccount = PublicAccount.createFromPublicKey(ownerPublicKey, network)\n  const mosaicId = mosaicNonceFromPublicKey(ownerPublicKey, randomNonce)\n  return MosaicDefinitionTransaction.create(\n    Deadline.create(10),\n    randomNonce,\n    mosaicId,\n    MosaicProperties.create({\n      supplyMutable: isSupplyMutable,\n      transferable: isTransferable,\n      divisibility: divisibility,\n      duration: (duration) ? UInt64.fromUint(duration) : undefined\n    }),\n    network\n  )\n}\n\n/**\n *\n * @param {*} mosaicId\n * @param {*} mosaicSupplyType\n * @param {*} delta\n */\nfunction mosaicSupplyChangeTransaction (mosaicId, mosaicSupplyType, delta) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return MosaicSupplyChangeTransaction.create(\n    Deadline.create(10),\n    mosaicId,\n    mosaicSupplyType,\n    UInt64.fromUint(delta),\n    network\n  )\n}\n\n/**\n *\n * @param {*} aliasActionType\n * @param {*} namespaceId\n * @param {*} mosaicId\n */\n\nfunction mosaicAliasTransaction (aliasActionType, namespaceId, mosaicId) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return MosaicAliasTransaction.create(\n    Deadline.create(10),\n    aliasActionType,\n    namespaceId,\n    mosaicId,\n    network\n  )\n}\n\nfunction modifyMetadataTransactionMosaic (mosaicId, modifications) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return ModifyMetadataTransaction.createWithMosaicId(\n    network,\n    Deadline.create(10),\n    mosaicId,\n    modifications\n  )\n}\n\nfunction registerNamespaceTransaction (rootNamespaceName, subnamespaceName = null, durationValue, type = 'rootNamespaceName') {\n  const network = store.getters['nodesStoreNew/networkType']\n  let registerNamespaceTx = []\n  const duration = UInt64.fromUint(durationValue)\n  const deadline = Deadline.create(10)\n  if (type === 'rootNamespaceName') {\n    registerNamespaceTx = RegisterNamespaceTransaction.createRootNamespace(\n      deadline,\n      rootNamespaceName,\n      duration,\n      network)\n  }\n  if (type === 'subNamespaceName') {\n    registerNamespaceTx = RegisterNamespaceTransaction.createSubNamespace(deadline,\n      subnamespaceName,\n      rootNamespaceName,\n      network)\n  }\n  return registerNamespaceTx\n}\n/**\n *\n *\n * @param {*} publicKey\n * @param {*} network\n * @returns\n */\nfunction publicAccountFromPublicKey (publicKey, network) {\n  const networkV = network || store.getters['nodesStoreNew/networkType']\n  return PublicAccount.createFromPublicKey(publicKey, networkV)\n}\n\n/**\n *\n * @param {*} mosaicId\n * @param {*} type\n */\nfunction removeExchangeOffer (mosaicId, type) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return RemoveExchangeOfferTransaction.create(\n    Deadline.create(10),\n    [new RemoveExchangeOffer(mosaicId, type)],\n    network\n  )\n}\n\n/**\n *\n *\n * @param {*} privateKey\n * @param {*} transaction\n * @param {*} network\n * @returns\n */\nfunction signedTransaction (privateKey, transaction, network) {\n  const networkV = network || store.getters['nodesStoreNew/networkType']\n  const generationHash = store.getters['nodesStoreNew/generationHash']\n  const account = getAccountFromPrivateKey(privateKey, networkV)\n  return account.sign(transaction, generationHash)\n}\n\n/**\n *\n *\n * @returns\n */\nfunction typeTransactions () {\n  return {\n    transfer: {\n      id: TransactionType.TRANSFER,\n      name: 'Transfer Transaction'\n    },\n    registerNamespace: {\n      id: TransactionType.REGISTER_NAMESPACE,\n      name: 'Register Namespace Transaction'\n    },\n    mosaicDefinition: {\n      id: TransactionType.MOSAIC_DEFINITION,\n      name: 'Mosaic definition'\n    },\n    mosaicSupplyChange: {\n      id: TransactionType.MOSAIC_SUPPLY_CHANGE,\n      name: 'Mosaic supply change'\n    },\n    modifyMultisigAccount: {\n      id: TransactionType.MODIFY_MULTISIG_ACCOUNT,\n      name: 'Modify multisig account'\n    },\n    aggregateComplete: {\n      id: TransactionType.AGGREGATE_COMPLETE,\n      name: 'Aggregate complete'\n    },\n    aggregateBonded: {\n      id: TransactionType.AGGREGATE_BONDED,\n      name: 'Aggregate bonded'\n    },\n    lock: {\n      id: TransactionType.LOCK,\n      name: 'Lock'\n    },\n    secretLock: {\n      id: TransactionType.SECRET_LOCK,\n      name: 'Secret lock'\n    },\n    secretProof: {\n      id: TransactionType.SECRET_PROOF,\n      name: 'Secret proof'\n    },\n    mosaicAlias: {\n      id: TransactionType.MOSAIC_ALIAS,\n      name: 'Mosaic Alias'\n    },\n    addressAlias: {\n      id: TransactionType.ADDRESS_ALIAS,\n      name: 'Address Alias'\n    },\n    modifyAccountPropertyAddress: {\n      id: TransactionType.MODIFY_ACCOUNT_PROPERTY_ADDRESS,\n      name: 'Modify Account Property Address'\n    },\n    modifyAccountPropertyMosaic: {\n      id: TransactionType.MODIFY_ACCOUNT_PROPERTY_MOSAIC,\n      name: 'Modify Account Property Mosaic'\n    },\n    modifyAccountPropertyEntityType: {\n      id: TransactionType.MODIFY_ACCOUNT_PROPERTY_ENTITY_TYPE,\n      name: 'Modify Account Entity Type'\n    },\n    linkAccount: {\n      id: TransactionType.LINK_ACCOUNT,\n      name: 'Link Account'\n    },\n    modifyAccountMetadata: {\n      id: TransactionType.MODIFY_ACCOUNT_METADATA,\n      name: 'Modify Account Metadata'\n    },\n    modifyMosaicMetadata: {\n      id: TransactionType.MODIFY_MOSAIC_METADATA,\n      name: 'Modify Mosaic Metadata'\n    },\n    modifyNamespaceMetadata: {\n      id: TransactionType.MODIFY_NAMESPACE_METADATA,\n      name: 'Modify Namespace Metadata'\n    }\n  }\n}\n\nfunction transferTransaction (recipient, mosaics = [], message) {\n  const network = store.getters['nodesStoreNew/networkType']\n  return TransferTransaction.create(\n    Deadline.create(10),\n    recipient,\n    mosaics,\n    message,\n    network\n  )\n}\n\nexport {\n  instanceConnectionApi,\n  addExchangeOffer,\n  announceTx,\n  aggregateTransaction,\n  createPublicAccount,\n  createRawAddress,\n  createSimpleWallet,\n  createSimpleWalletFromPrivateKey,\n  decryptPrivateKey,\n  exchangeOffer,\n  exchangeOfferDb,\n  isValidPrivateKey,\n  isHexadecimal,\n  filterNetworkTypeFromString,\n  filterNetworkTypeFromNumber,\n  getAddressFromPublicKey,\n  getAccountFromPrivateKey,\n  getAccountInfo,\n  getMosaicMetadata,\n  getMosaics,\n  getMosaicId,\n  getMosaicsName,\n  getMultisigAccountInfo,\n  getNamespaceId,\n  getLinkedMosaicId,\n  getNetworkTypes,\n  getIncomingTransactions,\n  getEnvironmentByNetworkType,\n  getExchangeOffersfromId,\n  getUint64,\n  getOutgoingTransactions,\n  mosaicNonceFromPublicKey,\n  mosaicDefinitionTransaction,\n  mosaicSupplyChangeTransaction,\n  mosaicAliasTransaction,\n  modifyMetadataTransactionMosaic,\n  registerNamespaceTransaction,\n  publicAccountFromPublicKey,\n  removeExchangeOffer,\n  getTransactionsFromAccount,\n  getNamespaceFromAccount,\n  getNamespacesName,\n  getPrefixAndPrivateKey,\n  getBlockInfo,\n  getTransactionId,\n  typeTransactions,\n  transferTransaction,\n  dateFormatUTC,\n  signedTransaction\n\n}\n","import {\n  isValidPrivateKey\n} from '@/core/utils/blockchainProvider'\n\nconst generalConfig = {\n  img: {\n    width: 35,\n    height: 35,\n    size: 4000,\n    typeForm: 'image/png'\n  },\n  amount: {\n    min: 1,\n    max: 30\n  },\n  divisibility: {\n    min: 0,\n    max: 6\n  },\n  duration: {\n    min: 1,\n    max: 365\n  },\n  supply: {\n    min: 1,\n    max: 9000000000000000,\n    maxTex: 9\n  },\n  namespace: {\n    min: 1,\n    max: 30\n  },\n  namespaceName: {\n    min: 2,\n    max: 16\n  },\n  descriptionAsset: {\n    min: 4,\n    max: 30\n  },\n  password: {\n    min: 8,\n    max: 30\n  },\n  privateKey: {\n    min: 64,\n    max: 66\n  },\n  publicKey: {\n    min: 64,\n    max: 66\n  },\n  walletAccountName: {\n    min: 3,\n    max: 30\n  }\n}\n\n/**\n *\n *\n * @param {*} label\n * @param {*} icon\n * @param {*} inputType\n * @param {*} min\n * @param {*} max\n * @param {*} rules\n * @param {boolean} [showIcon=false]\n * @param {boolean} [show=false]\n * @param {boolean} [showConfirm=false]\n * @returns\n */\nfunction assemblyConfig (label, icon, inputType, min, max, rules, showIcon = false, show = false, showConfirm = false) {\n  return {\n    label,\n    icon,\n    type: inputType,\n    min,\n    max,\n    rules,\n    showIcon,\n    show,\n    showConfirm\n  }\n}\n/**\n *\n * @param {*} width\n * @param {*} height\n * @param {*} size\n * @param {*} type\n */\nfunction assemblyConfigFile (width, height, size, typeForm, assemblyConfig) {\n  const config = { width, height, size, typeForm }\n\n  return Object.assign(config, assemblyConfig)\n}\n\n/**\n *\n *\n * @param {*} name\n * @returns\n */\nfunction amount (name = 'Amount') {\n  const min = generalConfig.amount.min\n  const max = generalConfig.amount.max\n  const rules = {\n    required: v => !!v || `${name} is required`,\n    min: v => (v && v.length >= min) || `${name} must be at least ${min} characters.`,\n    max: v => (v && v.length <= max) || `${name} must be a maximum of ${max} characters.`\n  }\n  return assemblyConfig(name, '', 'number', min, max, rules)\n}\n\n/**\n *\n *\n * @param {*} key\n * @param {*} action\n * @param {*} disabled\n * @param {*} color\n * @param {*} textColor\n * @param {*} loading\n * @param {*} text\n * @returns\n */\nfunction buildButton (text, key, action, color, textColor, disabled = false, loading = false) {\n  return {\n    text,\n    key,\n    action,\n    color,\n    textColor,\n    disabled,\n    loading\n  }\n}\n\n/**\n *\n *\n * @param {*} [value=null]\n * @returns\n */\nfunction getConfigMoney (decimal = '.', thousands = ',', prefix = '', suffix = '', precision = 6, masked = false) {\n  return {\n    decimal,\n    thousands,\n    prefix,\n    suffix,\n    precision,\n    masked\n  }\n}\n\n/**\n *\n *\n * @param {*} value1\n * @param {*} value2\n * @param {string} [nameValidation='']\n * @returns\n */\nfunction isMatch (value1, value2, nameValidation = '') {\n  return value1 === value2 || `${nameValidation} must match.`\n}\n\n/**\n *\n *\n * @param {string} [label='Namespace']\n * @returns\n */\nfunction namespaceName (label = 'namespaceName') {\n  const min = generalConfig.namespaceName.min\n  const max = generalConfig.namespaceName.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} min length ${min} alphanumerico characters.`,\n    max: v => (v && v.length <= max) || `${label} max length ${max} alphanumerico characters.`\n  }\n  return assemblyConfig(label, '', '', min, max, rules)\n}\n/**\n *\n *\n * @param {string} [label='Namespace']\n * @returns\n */\nfunction descriptionAsset (label = 'Description asset') {\n  const min = generalConfig.descriptionAsset.min\n  const max = generalConfig.descriptionAsset.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} min length ${min} alphanumerico characters.`,\n    max: v => (v && v.length <= max) || `${label} max length ${max} alphanumerico characters.`\n  }\n  return assemblyConfig(label, '', '', min, max, rules)\n}\n\n/**\n *\n *\n * @param {string} [label='Namespace']\n * @returns\n */\nfunction namespace (label = 'Namespace') {\n  const min = generalConfig.namespace.min\n  const max = generalConfig.namespace.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} must be at least ${min} characters.`,\n    max: v => (v && v.length <= max) || `${label} must be a maximum of ${max} characters.`\n  }\n  return assemblyConfig(label, '', '', min, max, rules)\n}\n\n/**\n *\n * @param {*} label\n */\nfunction duration (label = 'Duration') {\n  const min = generalConfig.duration.min\n  const max = generalConfig.duration.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && Number(v) >= min) || `${label} must be at least ${min}.`,\n    // max: v => (v && Number(v) <= max) || `${label} must be a maximum of ${max}`\n    max: v => (v && Number(v) <= max) || `Maximum is ${max}.`\n  }\n  return assemblyConfig(label, '', 'number', min, max, rules)\n}\n/**\n *\n * @param {*} label\n */\nfunction divisibility (label = 'Divisibility') {\n  const min = generalConfig.divisibility.min\n  const max = generalConfig.divisibility.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && Number(v) >= min) || `${label} must be at least ${min}.`,\n    max: v => (v && Number(v) <= max) || `Maximum is ${max}.`\n  }\n  return assemblyConfig(label, '', 'number', min, max, rules)\n}\n/**\n *\n * @param {*} label\n */\nfunction iconMosaic (label = `Select image icon`) {\n  const size = generalConfig.img.size\n  const typeForm = generalConfig.img.typeForm\n  const width = generalConfig.img.width\n  const height = generalConfig.img.height\n  const rules = {\n    required: v => !!v || `${label} is required.`,\n    size: v => !v || v.size < size || 'Icon size must be at least 4 kB!',\n    typeForm: v => !v || v.type === typeForm || `Allowed format (${typeForm}).`\n  }\n  return assemblyConfigFile(width, height, size, typeForm, assemblyConfig(label, '', 'file', null, null, rules))\n}\n/**\n *\n * @param {*} label\n */\nfunction supply (label = 'Supply') {\n  const min = generalConfig.supply.min\n  const max = generalConfig.supply.max\n  const maxTex = generalConfig.supply.maxTex\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && Number(v) >= min) || `${label} must be at least ${min}.`,\n    max: v => (v && Number(v) <= max) || `Maximum is ${maxTex} billion.`\n  }\n  return assemblyConfig(label, '', 'number', min, max, rules)\n}\n/**\n *\n *\n * @returns\n */\nfunction password (label = 'Password') {\n  const min = generalConfig.password.min\n  const max = generalConfig.password.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} must be at least ${min} characters.`,\n    max: v => (v && v.length <= max) || `${label} must be a maximum of ${max} characters.`\n  }\n  return assemblyConfig(label, '', 'password', min, max, rules)\n}\n\n/**\n *\n *\n */\nfunction privateKey (label = 'Private key') {\n  const min = generalConfig.privateKey.min\n  const max = generalConfig.privateKey.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} must be at least ${min} characters.`,\n    max: v => (v && v.length <= max) || `${label} must be a maximum of ${max} characters.`,\n    validatePvk: v => (isValidPrivateKey(v) || 'Private key must be Hexadecimal.')\n  }\n  return assemblyConfig(label, '', 'password', min, max, rules)\n}\n/**\n *\n *\n * @returns\n */\nfunction walletAccountName (label = 'Wallet') {\n  const min = generalConfig.walletAccountName.min\n  const max = generalConfig.walletAccountName.max\n  const rules = {\n    required: value => !!value || `${label} is required.`,\n    min: v => (v && v.length >= min) || `${label} must be at least ${min} characters.`,\n    max: v => (v && v.length <= max) || `${label} must be a maximum of ${max} characters.`\n  }\n  return assemblyConfig(label, '', '', min, max, rules)\n}\n\nexport {\n  amount,\n  buildButton,\n  duration,\n  getConfigMoney,\n  isMatch,\n  iconMosaic,\n  divisibility,\n  supply,\n  namespaceName,\n  descriptionAsset,\n  namespace,\n  password,\n  privateKey,\n  walletAccountName\n}\n","import store from '@/store'\nimport Vue from 'vue'\n\nimport {\n  Listener\n} from 'tsjs-xpx-chain-sdk/dist/src/infrastructure/Listener'\n\nvar connector\nvar timeOut\nvar cacheBlock = 1\nvar checking = false\nvar nodesConfig = null\nvar messages = {\n  'aggregateBondedAdded': 'Transaction Aggregate Bonded Added',\n  'aggregateBondedRemoved': 'Transaction Aggregate Bonded Removed',\n  'cosignatureAdded': 'Cosignature Added',\n  'confirmed': 'Transaction confirmed',\n  'unconfirmed': 'Transaction send',\n  'unconfirmedRemoved': 'Transaction unconfirmed removed'\n}\n\n/**\n *\n *\n * @param {*} node\n * @param {*} protocol\n * @param {*} addressArray\n */\nfunction webSocketConnection (node, protocol) {\n  try {\n    nodesConfig = Vue.prototype.$modulesConfig.nodes\n    reconnect(false)\n    store.commit('nodeStore/SET_STATUS_NODE', 2)\n    setTimeout(() => {\n      const url = buildUrl(node, protocol)\n      connector = new Listener(url, WebSocket)\n      openConnection()\n    }, 10)\n  } catch (error) {\n    showMsgAndChangeStatus('Error connecting to the node', 'errorIntense', 0)\n  }\n}\n\n/**\n *\n *\n * @param {*} node\n * @param {*} protocol\n * @returns\n * @memberof WebsocketConnection\n */\nfunction buildUrl (node, protocol) {\n  switch (protocol) {\n    case 'ws':\n      return `${protocol}://${node}:3000`\n    case 'wss':\n      return `${protocol}://${node}:443`\n  }\n}\n\n/**\n *\n *\n */\nfunction checkIsOpenConnection () {\n  return connector && connector.isOpen\n}\n\n/**\n *\n *\n */\nfunction checkNodeIsLive (height) {\n  clearTimeOutTime()\n  timeOut = setTimeout(function () {\n    closeConnection()\n    showMsgAndChangeStatus('The connection node is stuck', 'errorIntense', 0)\n  }, Number(nodesConfig.timeOutNewBlocks) * 1000)\n\n  if (connector && !checking) {\n    checking = true\n    setTimeout(() => {\n      checking = false\n      if (cacheBlock > 1 && height > cacheBlock + 4) {\n        clearTimeOutTime()\n        closeConnection()\n        showMsgAndChangeStatus('The node is synchronizing', 'errorIntense', 0)\n      } else {\n        cacheBlock = height\n      }\n    }, nodesConfig.timeValidateSynchronization)\n  }\n}\n\n/**\n *\n *\n * @memberof WebsocketConnection\n */\nfunction closeConnection () {\n  if (connector) {\n    connector.close()\n    connector.terminate()\n    clearTimeOutTime()\n    // console.log('connection closed!')\n  }\n}\n\n/**\n *\n * @memberof WebsocketConnection\n */\nfunction clearTimeOutTime () {\n  if (timeOut) {\n    clearTimeout(timeOut)\n    timeOut = null\n  }\n}\n\n/**\n *\n *\n * @memberof WebsocketConnection\n */\nfunction getBlocks () {\n  connector.newBlock().subscribe(block => {\n    // console.log('----NEW BLOCK -----', block.height.compact())\n    checkNodeIsLive(block.height.compact())\n    store.commit('nodeStore/SET_CURRENT_BLOCK', block.height.compact())\n  }, () => {\n    showMsgAndChangeStatus('Error connecting to the node', 'errorIntense', 0)\n  })\n}\n\n/**\n *\n *\n * @param {*} address\n */\nfunction getAggregateBondedAdded (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      connector.aggregateBondedAdded(address).subscribe(transaction => {\n        showMsgAndChangeStatus(messages.aggregateBondedAdded, 'success')\n        // console.log('--------------------AGGREGATE_BONDED_ADDED------------------------')\n        // console.log(transaction.transactionInfo.hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        store.commit('transactionsStore/SET_AGGREGATE_BONDED_ADDED', transaction)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} arrayAddress\n */\nfunction getAggregateBondedRemoved (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      connector.aggregateBondedRemoved(address).subscribe(transaction => {\n        showMsgAndChangeStatus(messages.aggregateBondedRemoved, 'success')\n        // console.log('-----------------------AGGREGATE_BONDED_REMOVED--------------------------')\n        // console.log(transaction.transactionInfo.hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        store.commit('transactionsStore/SET_AGGREGATE_BONDED_REMOVED', transaction)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} arrayAddress\n */\nfunction getCosignatureAdded (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      connector.cosignatureAdded(address).subscribe(transaction => {\n        showMsgAndChangeStatus(messages.cosignatureAdded, 'success')\n        // console.log('-----------------------COSIGNATURE_ADDED--------------------------')\n        // console.log(transaction.transactionInfo.hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        store.commit('transactionsStore/SET_COSIGNATURE_ADDED', transaction)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} address\n */\nfunction getConfirmed (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      connector.confirmed(address).subscribe(transaction => {\n        showMsgAndChangeStatus(messages.confirmed, 'success')\n        // console.log(' -----------------------CONFIRMED---------------------------------')\n        // console.log(transaction)\n        // console.log('------------------------------------------------------------------ \\n\\n')\n        store.commit('transactionsStore/SET_CONFIRMED', transaction)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} arrayAddress\n */\nfunction getUnconfirmedAdded (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    arrayAddress.forEach(address => {\n      connector.unconfirmedAdded(address).subscribe(transaction => {\n        showMsgAndChangeStatus(messages.unconfirmed, 'success')\n        // console.log('-----------------------UNCONFIRMED_ADDED--------------------------')\n        // console.log(transaction.transactionInfo.hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        // store.commit('transactionsStore/SET_UNCONFIRMED_ADDED', transaction)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} arrayAddress\n */\nfunction getUnconfirmedRemoved (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      connector.unconfirmedRemoved(address).subscribe(hash => {\n        // showMsgAndChangeStatus(messages.unconfirmedRemoved, 'success')\n        // console.log('-----------------------UNCONFIRMED_REMOVED--------------------------')\n        // console.log(hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        store.commit('transactionsStore/REMOVE_UNCONFIRMED_ADDED_TX', hash)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} arrayAddress\n */\nfunction getStatus (arrayAddress) {\n  if (checkIsOpenConnection()) {\n    // console.log('MONITOR ACCOUNTS --->', arrayAddress)\n    arrayAddress.forEach(address => {\n      // console.log('MONITOR STATUS', address)\n      connector.status(address).subscribe(transaction => {\n        showMsgAndChangeStatus(transaction.status.split('_').join(' '), 'errorIntense')\n        // console.log('-----------------------STATUS--------------------------')\n        // console.log(transaction.hash)\n        // console.log('------------------------------------------------------------------\\n\\n')\n        store.commit('transactionsStore/SET_STATUS', transaction.hash)\n      })\n    })\n  }\n}\n\n/**\n *\n *\n * @param {*} addressArray\n */\nfunction monitorAllChannels (addressArray) {\n  // console.log('addressArray', addressArray)\n  if (checkIsOpenConnection()) {\n    getAggregateBondedAdded(addressArray)\n    getAggregateBondedRemoved(addressArray)\n    getCosignatureAdded(addressArray)\n    getConfirmed(addressArray)\n    getUnconfirmedAdded(addressArray)\n    getUnconfirmedRemoved(addressArray)\n    getStatus(addressArray)\n  }\n}\n\n/**\n *\n *\n * @param {*} addressArray\n * @memberof WebsocketConnection\n */\nfunction openConnection () {\n  cacheBlock = 1\n  checking = false\n  if (connector) {\n    connector.open().then(() => {\n      checkNodeIsLive(1)\n      showMsgAndChangeStatus('Node Connection Established', 'success', 1)\n      getBlocks()\n    }, () => {\n      showMsgAndChangeStatus('Error connecting to the node', 'errorIntense', 0)\n    })\n  }\n}\n\n/**\n *\n *\n */\nfunction reconnect (changeStatus = true) {\n  if (connector) {\n    if (changeStatus) store.commit('nodeStore/SET_STATUS_NODE', 2)\n    closeConnection()\n  }\n}\n\n/**\n *\n *\n * @param {*} nodesList\n * @param {*} [nodeSelected=null]\n * @returns\n */\nfunction selectNode (nodesList, nodeSelected = null) {\n  if (!nodeSelected || nodeSelected === '') return nodesList[Math.floor(Math.random() * nodesList.length)]\n  return nodeSelected\n}\n\n/**\n *\n *\n * @param {*} msg\n * @param {*} status\n * @param {*} color\n */\nfunction showMsgAndChangeStatus (msg, color, status = null) {\n  if (status !== null) store.commit('nodeStore/SET_STATUS_NODE', status)\n  store.commit('SHOW_SNACKBAR', {\n    snackbar: true,\n    text: msg,\n    color: color\n  })\n}\n\nexport {\n  reconnect,\n  closeConnection,\n  selectNode,\n  monitorAllChannels,\n  getAggregateBondedAdded,\n  getAggregateBondedRemoved,\n  getCosignatureAdded,\n  getConfirmed,\n  getUnconfirmedAdded,\n  getUnconfirmedRemoved,\n  getStatus,\n  webSocketConnection\n}\n","import store from '@/store'\nimport Vue from 'vue'\nimport { ExchangeOfferType } from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/ExchangeOfferType'\n\n/**\n *\n *\n * @param {*} amount\n * @param {number} [d=6]\n * @returns\n */\nfunction amountFormatter (amount, divisibility = 6) {\n  return Number(amount / Math.pow(10, divisibility)).toLocaleString('en-us', {\n    minimumFractionDigits: divisibility\n  })\n}\n\nfunction formValue (cant, divisibility = 6) {\n  return parseFloat(cant.toString().replace(/,/g, '')).toFixed(divisibility)\n}\n\nfunction formValueParse (cant, price, divisibility = 6) {\n  return quantityStringToInt(String(formValue(cant * price, divisibility)))\n}\n\n/**\n *\n *\n * @param {*} cant\n * @param {string} [amount='0']\n * @returns\n */\nfunction addZerosQuantity (cant, amount = '0') {\n  const data = '0'\n  if (amount === '0') {\n    for (let index = 0; index < cant - 1; index++) {\n      amount += data\n    }\n  } else {\n    for (let index = 0; index < cant; index++) {\n      amount += data\n    }\n  }\n  return amount\n}\n\n/**\n *\n *\n * @param {*} title\n * @param {*} show\n * @param {*} description\n * @param {*} image\n * @param {*} route\n * @param {*} children\n * @param {*} viewChildren\n * @param {*} className\n * @returns\n */\nfunction buildBoxServices (title, show, description, image, route, children, viewChildren, className) {\n  return {\n    title: title,\n    show: show,\n    description: description,\n    image: image,\n    route: route,\n    children: children,\n    viewChildren: viewChildren,\n    className: className\n  }\n}\n\n/**\n *\n *\n * @param {*} action\n * @param {*} disabled\n * @param {*} color\n * @param {*} loading\n * @param {*} text\n * @returns\n */\nfunction buildButton (action, disabled, color, loading, text) {\n  return {\n    action,\n    disabled,\n    color,\n    loading,\n    text\n  }\n}\n\n/**\n *\n *\n * @param {*} text\n * @param {*} value\n * @param {boolean} [sortable=false]\n * @returns\n */\nfunction buildTableHeader (text, value, sortable = false) {\n  return {\n    text,\n    value,\n    sortable\n  }\n}\n/**\n   * Calculate duration based in days\n   *\n   * @param {number} duration\n   * @returns\n   * @memberof GeneralService\n   */\nfunction calculateDurationforDay (duration) {\n  return duration * 5760\n}\n/**\n *  Calculate Expire tx\n * @param {*} durationCompact\n */\nfunction calculateDurationExpire (durationCompact) {\n  let seconds = durationCompact * 15\n  let days = Math.floor(seconds / (3600 * 24))\n  seconds -= days * 3600 * 24\n  let hrs = Math.floor(seconds / 3600)\n  seconds -= hrs * 3600\n  let mnts = Math.floor(seconds / 60)\n  seconds -= mnts * 60\n  const response = days + ' days, ' + hrs + ' Hrs, ' + mnts + ' Minutes, ' + seconds + ' Seconds'\n  return response\n}\n/**\n *  Invert type offert\n * @param {*} durationCompact\n */\nfunction typeInvert (type = null) {\n  let typeV = null\n  if (type === 'buy') {\n    typeV = 'sell'\n  }\n  if (type === 'sell') {\n    typeV = 'buy'\n  }\n  return typeV\n}\n/**\n *\n *\n * @param {*} itemName\n * @param {*} text\n */\nfunction doCopy (itemName, text) {\n  Vue.prototype.$copyText(text).then(\n    e => {\n      store.dispatch('showMSG', {\n        snackbar: true,\n        text: `${itemName} copied`,\n        color: 'success'\n      })\n    },\n    e => {\n      store.dispatch('showMSG', {\n        snackbar: true,\n        text: `Can not copy`,\n        color: 'error'\n      })\n    }\n  )\n}\n/**\n *\n * @param {*} stringOne\n * @param {*} stringTwo\n */\nfunction differString (a, b) {\n  let i = 0\n  let j = 0\n  let result = ''\n\n  while (j < b.length) {\n    if (a[i] !== b[j] || i === a.length) { result += b[j] } else { i++ }\n    j++\n  }\n  return result\n}\n/**\n *  obj type number\n * @param {*} obj\n */\nfunction sumObject (obj) {\n  let sum = 0\n  if (obj) {\n    for (const p in obj) {\n      sum = sum + obj[p]\n    }\n  }\n  return sum\n}\n\n/**\n *\n * @param {*} price\n */\nfunction formatterPrice (price) {\n  const priceFormatte = price.toString().split(',').join('').split('.').join('')\n\n  return Number(priceFormatte)\n}\n\n/**\n *\n *\n * @param {*} data\n * @param {*} cantPart\n * @returns\n */\nfunction getDataPart (data, cantPart) {\n  return {\n    part1: data.slice(0, data.length - cantPart),\n    part2: data.slice(-cantPart)\n  }\n}\n\n/**\n *\n *\n * @param {*} action\n * @param {*} hash\n * @param {*} typeTransaction\n * @param {*} dataRequired\n * @returns\n */\nfunction buildMonitorHash (action, hash, typeTransaction, dataRequired = []) {\n  return {\n    action,\n    hash,\n    typeTransaction,\n    dataRequired\n  }\n}\n\n/**\n *\n *\n * @param {*} quantity\n * @param {number} [divisibility=6]\n * @returns\n */\nfunction quantityStringToInt (quantity, divisibility = 6) {\n  let rQuantity = null\n  if (quantity !== '' && quantity !== null && Number(quantity) !== 0) {\n    const arrCifraQuantity = quantity.toString().replace(/,/g, '').split('.')\n    let decimal = null\n    if (arrCifraQuantity.length < 2) {\n      decimal = addZerosQuantity(divisibility)\n    } else {\n      const arrDecimals = arrCifraQuantity[1].split('')\n      decimal = addZerosQuantity(divisibility - arrDecimals.length, arrCifraQuantity[1])\n    }\n    rQuantity = `${arrCifraQuantity[0]}${decimal}`\n  }\n  return Number(rQuantity)\n}\n\n/**\n *\n *\n * @param {*} quantity\n * @param {number} [divisibility=6]\n * @returns\n */\nfunction quantityStringToIntMath (quantityValue, divisibility = 6) {\n  const quantity = quantityValue\n  let rQuantity = null\n  if (quantity !== '' && quantity !== null && Number(quantity) !== 0) {\n    const arrCifraQuantity = quantity.toString().replace(/,/g, '').split('.')\n    let decimal = null\n    if (arrCifraQuantity.length < 2) {\n      decimal = addZerosQuantity(divisibility)\n    } else {\n      const arrDecimals = arrCifraQuantity[1].split('')\n      decimal = addZerosQuantity(divisibility - arrDecimals.length, arrCifraQuantity[1])\n    }\n    rQuantity = `${arrCifraQuantity[0]}${decimal}`\n  }\n  return Number(rQuantity)\n}\n\nfunction priceFormatter (quantity) {\n  const value = String(quantity)\n\n  return Number(value.split('.').join(''))\n}\n\n/**\n *\n *\n * @param {*} d\n * @param {*} e\n * @param {*} r\n * @returns\n */\nfunction replaceData (d, e, r) {\n  return (d.includes(e) === true) ? d.split(e).join(r) : d\n}\n\n/**\n *\n *\n * @param {*} value1\n * @param {*} value2\n * @param {string} [text='']\n * @returns\n */\nfunction validateMatch (value1, value2, text = '') {\n  return value1 === value2 || `${text} must match`\n}\n\n/**\n *\n *\n * @param {*} [value=[]]\n * @returns\n */\nfunction validateZero (value = []) {\n  let valueR = true\n  for (let index = 0; index < value.length; index++) {\n    const item = value[index]\n    let amount = null\n    try {\n      amount = parseFloat(item.split(',').join(''))\n    } catch (error) {\n      amount = Number(item)\n    }\n    if (amount === 0) {\n      valueR = false\n      break\n    }\n  }\n  return valueR\n}\n\n/**\n * Verify type offer for name\n *\n * @param {number} itemType\n * @returns\n * @memberof GeneralService\n */\nfunction verifyTypeOfferName (itemType) {\n  const type = [\n    {\n      type: ExchangeOfferType.SELL_OFFER,\n      name: 'SELL'\n    },\n    {\n      type: ExchangeOfferType.BUY_OFFER,\n      name: 'BUY'\n    }\n  ]\n  const nameType = type.find(x => x.type === itemType).name\n  return nameType\n}\nfunction showMsgStatusNode () {\n  if (store.getters['nodesStoreNew/nodeStatus'] === 0) {\n    store.commit('SHOW_SNACKBAR', {\n      snackbar: true,\n      text: 'The connection node is down',\n      color: 'errorIntense'\n    })\n    return false\n  } else if (store.getters['nodesStoreNew/nodeStatus'] === 1) {\n    store.commit('SHOW_SNACKBAR', {\n      snackbar: true,\n      text: 'Reconnect node',\n      color: 'orange'\n    })\n    return false\n  } else {\n    return true\n  }\n}\nexport {\n  addZerosQuantity,\n  amountFormatter,\n  priceFormatter,\n  buildBoxServices,\n  buildButton,\n  buildTableHeader,\n  buildMonitorHash,\n  calculateDurationforDay,\n  calculateDurationExpire,\n  differString,\n  sumObject,\n  doCopy,\n  formatterPrice,\n  getDataPart,\n  quantityStringToInt,\n  quantityStringToIntMath,\n  replaceData,\n  validateMatch,\n  validateZero,\n  verifyTypeOfferName,\n  showMsgStatusNode,\n  formValue,\n  formValueParse,\n  typeInvert\n}\n","import {\n  createRawAddress\n} from '@/core/utils/blockchainProvider'\n\nexport function rawAddress (address) {\n  return (address) ? createRawAddress(address).pretty() : ''\n}\n\nexport function toCurrency (value) {\n  if (typeof value !== 'number') {\n    return value\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'decimal',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 6\n  })\n  return formatter.format(value)\n}\n","export function formatQuantity (el, binding) {\n  var s = JSON.stringify\n  const quantity = s(binding.value.q).replace(/[\"]+/g, ' ').split('.')\n  const coin = s(binding.value.c).replace(/[\"]+/g, ' ')\n  const cl1 = binding.value.cl1 ? s(binding.value.cl1).replace(/[\"]+/g, ' ') : ''\n  const cl2 = binding.value.cl1 ? s(binding.value.cl2).replace(/[\"]+/g, ' ') : ''\n  if (quantity.length > 1) {\n    el.innerHTML = `<span class=\"fs-085rem font-weight-medium ${cl1}\">${quantity[0]}.</span><span class=\"fs-07rem ${cl2}\">${quantity[1]}</span>\n                    <span class=\"fs-085rem font-weight-medium ${cl1}\">${coin}</span>`\n  } else {\n    el.innerHTML = `<span class=\"fs-085rem font-weight-medium ${cl1}\"> ${quantity[0]}</span>\n                    <span class=\"fs-085rem font-weight-medium ${cl1}\">${coin}</span>`\n  }\n}\n\nexport function quantity (el, binding) {\n  var s = JSON.stringify\n  const quantity = s(binding.value.q).replace(/[\"]+/g, ' ').split('.')\n  const coin = s(binding.value.c).replace(/[\"]+/g, ' ')\n  if (quantity.length > 1) {\n    el.innerHTML = `<span class=\"fs-085rem font-weight-medium\">${quantity[0]}.</span><span class=\"fs-07rem\">${quantity[1]}</span>\n                      <span class=\"fs-085rem font-weight-medium\">${coin}</span>`\n  } else {\n    el.innerHTML = `<span class=\"fs-085rem font-weight-medium\"> ${quantity[0]}</span>\n                      <span class=\"fs-085rem font-weight-medium\">${coin}</span>`\n  }\n}\n","const nodes = {\n  'timeOutConnection': '',\n  'connectToWebsocket': true,\n  'timeOutNewBlocks': 180,\n  'timeValidateSynchronization': 6000\n}\n\nexport {\n  nodes\n}\n","import Vue from 'vue'\nimport AppVue from '@/App.vue'\nimport '@/assets/css/style.css'\nimport router from '@/router'\nimport store from '@/store'\nimport vuetify from '@/plugins/vuetify'\n/*\nimport {\n  GeneralService\n} from './services/general'\nimport {\n  BlockchainProvider\n} from './services/blockchain-provider'\nimport {\n  StorageService\n} from './services/storage' */\n// import { DataBaseProvider } from './services/dataBase-provider'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport VueClipboard from 'vue-clipboard2'\nimport VueLodash from 'vue-lodash'\nimport VueSocketIO from 'vue-socket.io'\nimport money from 'v-money'\n\n// ---------------------- REFACTOR --------------------------------\nimport * as browserStorage from '@/core/utils/browserStorage'\nimport * as configForm from '@/core/utils/configForm'\nimport * as blockchain from '@/core/utils/blockchainProvider'\nimport * as websocketProvider from '@/core/utils/websocketProvider'\nimport * as general from '@/core/utils/general'\nimport * as filters from '@/filters'\nimport * as directives from '@/directives'\nimport * as appConfig from '@/core/appConfig'\n\nVue.use(VueAxios, axios)\n// General Config Modules\nconst modulesConfig = {}\nObject.keys(appConfig).forEach(element => {\n  modulesConfig[element] = appConfig[element]\n})\n\n// Define Prototype\nVue.prototype.$modulesConfig = modulesConfig\nVue.prototype.$blockchainProvider = blockchain\nVue.prototype.$websocketProvider = websocketProvider\nVue.prototype.$generalService = general\nVue.prototype.$browserStorage = browserStorage\nVue.prototype.$configForm = configForm\n\n// register global utility filters.\nObject.keys(filters).forEach(key => {\n  Vue.filter(key, filters[key])\n})\n\n// register global utility directives.\nObject.keys(directives).forEach(key => {\n  Vue.directive(key, {\n    bind: directives[key],\n    update: directives[key]\n  })\n})\n\naxios.get('../config/config.json').then(response => {\n  store.commit('ADD_CONFIG_APP', response.data)\n  store.commit('ADD_ENVIRONMENT_APP', response.data.networkSelected)\n})\n// ---------------------- FIN REFACTOR ----------------------\n\nVue.config.productionTip = false\n// Vue.use(axios)\nconst options = {\n  name: 'lodash'\n} // customize the way you want to call it\nVue.use(VueClipboard)\nVue.use(VueLodash, options)\nVue.use(money)\nVue.use(\n  new VueSocketIO({\n    debug: false,\n    connection: 'http://ec2-18-230-77-77.sa-east-1.compute.amazonaws.com:900',\n    // connection: 'http://localhost:900',\n    vuex: {\n      store,\n      actionPrefix: 'SOCKET_',\n      mutationPrefix: 'SOCKET_'\n    },\n    options: {\n      path: '',\n      transports: ['websocket']\n    },\n    transports: ['websocket']\n  })\n)\n/*\nVue.filter('toCurrency', function (value) {\n  if (typeof value !== 'number') {\n    return value\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'decimal',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 6\n  })\n  return formatter.format(value)\n}) */\n\n// Define prototype\n// Vue.prototype.$generalService = new GeneralService()\n// Vue.prototype.$storage = new StorageService(localStorage)\nconst configIntegration = async function () {\n  try {\n    /* const configInfo = await axios.get('../config/config.json')\n    store.commit('ADD_CONFIG_INFO', configInfo.data)\n    const environment = getEnvironment(configInfo.data)\n    Vue.prototype.$configInfo = configInfo\n    Vue.prototype.$environment = environment\n    Vue.prototype.$blockchainProvider = new BlockchainProvider(\n      environment.connectionNodes.nodes[0],\n      environment.connectionNodes.protocol,\n      environment.connectionNodes.networkType,\n      environment.coingecko\n    ) */\n    // Vue.prototype.$dataBaseProvider = new DataBaseProvider(\n    //   environment.dataBase.host,\n    //   environment.dataBase.port\n    // )\n    new Vue({\n      router,\n      store,\n      vuetify,\n      render: h => h(AppVue)\n    }).$mount('#app')\n  } catch {\n  }\n}\n/*\nconst getEnvironment = function (configInfo) {\n  let environment = null\n  switch (configInfo.version) {\n    case 'TEST_NET':\n      environment = configInfo.environment.TESTNET\n      break\n    case 'MAIN_NET':\n      environment = configInfo.environment.MAINNET\n      break\n    case 'PRIVATE':\n      environment = configInfo.environment.PRIVATE\n      break\n  }\n  return environment\n} */\n\nconfigIntegration()\n","import Vue from 'vue'\n// import { Convert } from 'tsjs-xpx-chain-sdk/dist/src/core/format/Convert'\nimport { PlainMessage } from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/PlainMessage'\nimport { MessageType } from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/MessageType'\nconst config = {\n  format: 'data:image/png;base64,'\n}\n\n/**\n * get an array from a base64 image\n * @param {*} base64Img\n * @param {*} lengthSubs\n */\nfunction arrayToBase64Img (base64Img, lengthSubs = 1000) {\n  const str = base64Img.split(',')[1]\n  if (!isBase64(str)) {\n    throw new Error('not Base64')\n  }\n  const type = base64Img.split(';')[0].split('/')[1]\n  let arrayString = []\n  const l = Math.ceil(str.length / lengthSubs)\n  let cont = 0\n  for (let t = 0; t < l; t++) {\n    let extra = str.substring(cont, cont + lengthSubs)\n    cont = cont + lengthSubs\n    arrayString.push({ s: extra, i: t, t: 0 })\n  }\n  return { arrayString: arrayString, type: type }\n}\n\n/**\n *\n * @param {*} array\n */\nfunction base64ImgFromArray (array) {\n  let base64Img = ''\n  const arraSort = array.sort((a, b) => { return a.i - b.i })\n  // console.log('arraSort', arraSort)\n  for (let t = 0; t < arraSort.length; t++) {\n    if (arraSort[t].s) { base64Img += arraSort[t].s }\n  }\n  if (!isBase64(base64Img)) {\n    throw new Error('not Base64')\n  }\n  return `${config.format}${base64Img}`\n}\nfunction base64ImgFromArrayCom (array) {\n  let base64Img = ''\n  const arraSort = array.sort((a, b) => { return a.i - b.i })\n  for (let t = 0; t < arraSort.length; t++) {\n    if (arraSort[t].s) { base64Img += arraSort[t].s }\n  }\n  if (!isBase64(base64Img)) {\n    throw new Error('not Base64')\n  }\n  return `${config.format}${base64Img}`\n}\n\n/**\n *\n * @param {*} innerTransactions\n * @param {*} type\n */\nfunction filtersInnerTx (innerTransactions = [], type = Vue.prototype.$blockchainProvider.typeTransactions().transfer.id) {\n  return innerTransactions.filter(l => l.type === type)\n}\n\n/**\n *\n * @param {*} aggregateTx\n */\nfunction base64IconFromAggregateTx (aggregateTx) {\n  let messagePayload = []\n  if (aggregateTx) {\n    for (let i of filtersInnerTx(aggregateTx.innerTransactions)) {\n      messagePayload.push(arrayAggregateTxTransfer(i))\n    }\n  }\n  return base64ImgFromArray(messagePayload)\n}\n/**\n *\n * @param {*} txTransfer\n */\nfunction arrayAggregateTxTransfer (txTransfer) {\n  let msjPayload = null\n  if (MessageType.PlainMessage === txTransfer.message.type) {\n    const valueJson = JSON.parse(txTransfer.message.payload)\n    if (('t' in valueJson)) {\n      msjPayload = valueJson\n    } else {\n      throw new Error('Type is not present in the Json (key = t )')\n    }\n  }\n  return msjPayload\n}\n/**\n *\n * @param {*} array\n * @param {*} publicKey\n */\nfunction aggregateTxFromArray (array, publicKey) {\n  let txsTransfer = []\n  const address = Vue.prototype.$blockchainProvider.getAddressFromPublicKey(publicKey)\n  if (array) {\n    for (let x of array.arrayString) {\n      const msj = JSON.stringify(x)\n      if (msj.length > 1024) throw new Error('length message')\n      const tx = Vue.prototype.$blockchainProvider.transferTransaction(address, [], PlainMessage.create(msj))\n      txsTransfer.push(tx)\n    }\n  }\n\n  // if()\n  return txsTransfer\n}\n/**\n * validate base64\n * @param {*} str\n */\nfunction isBase64 (str) {\n  var base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/\n  return base64regex.test(str)\n}\n/**\n * validate image width and height\n * @param {*} base64Img\n */\nfunction validateDimensionImg (base64Img) {\n  return new Promise(resolve => {\n    let valid = {\n      msj: null,\n      status: true\n    }\n    let image = new Image()\n    image.src = base64Img\n    image.addEventListener('load', () => {\n      const configForm = Vue.prototype.$configForm.iconMosaic()\n      if (image.width === configForm.width && image.height === configForm.height) {\n        valid = {\n          msj: 'success',\n          status: true\n        }\n      } else {\n        valid = {\n          msj: `image must be (${configForm.width}x${configForm.height})`,\n          status: false\n        }\n      }\n      resolve(valid)\n    })\n  })\n}\n\nexport { config, validateDimensionImg, arrayToBase64Img, base64ImgFromArrayCom, aggregateTxFromArray, base64IconFromAggregateTx }\n","\nimport store from '@/store'\nimport Msg from '@/services/messages'\nexport class WebsocketService {\n  static subscription = []\n  /**\n   *\n   *\n   * @static\n   * @memberof TransactionService\n   */\n  static destroySubscriptions () {\n    if (this.subscription && this.subscription.length > 0) this.subscription.forEach(x => x.unsubscribe())\n    this.subscription = []\n  }\n\n  /**\n  *\n  *\n  * @static\n  * @param {WebsocketConnection} obj\n  * @memberof TransactionService\n  */\n  static subscribeAggregateBondedAdded (obj) {\n    this.subscription.push(obj.aggregateBondedAdded.subscribe(aggregateTransaction => {\n      // if (aggregateTransaction) store.commit('transactionsStore/AGREGATE_BONDED_ADDED', [aggregateTransaction])\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeAggregateBondedRemoved (obj) {\n    this.subscription.push(obj.aggregateBondedRemoved.subscribe(hash => {\n      // if (hash) store.commit('transactionsStore/AGREGATE_BONDED_ADDED', [hash])\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeBlockInfo (obj) {\n    this.subscription.push(obj.newBlock.subscribe(blockInfo => {\n      if (blockInfo) store.commit('nodesStoreNew/SET_CURRENT_HEIGHT', blockInfo.height.compact())\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeCosignatureAdded (obj) {\n    this.subscription.push(obj.cosignatureAdded.subscribe(cosignatureSignedTransaction => {\n      // if (cosignatureSignedTransaction) store.commit('transactionsStore/COSIGNATURE_ADDED', cosignatureSignedTransaction)\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeConfirmed (obj) {\n    this.subscription.push(obj.confirmed.subscribe(transaction => {\n      if (transaction) {\n        WebsocketService.showMsgAndChangeStatus(Msg.ws.confirmed, 'success')\n        store.commit('transactionsStore/SET_CONFIRMED', transaction)\n      }\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeUnconfirmedAdded (obj) {\n    // console.log(Msg.ws)\n    this.subscription.push(obj.unconfirmedAdded.subscribe(transaction => {\n      if (transaction) {\n        WebsocketService.showMsgAndChangeStatus(Msg.ws.unconfirmed, 'success')\n        store.commit('transactionsStore/SET_UNCONFIRMED_ADDED', transaction)\n      }\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeUnconfirmedRemoved (obj) {\n    this.subscription.push(obj.unconfirmedRemoved.subscribe(hash => {\n      // if (hash) store.commit('transactionsStore/UNCONFIRMED_REMOVED', hash)\n    }))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeStatus (obj) {\n    this.subscription.push(obj.status.subscribe(transaction => {\n      // console.log('transaction', transaction)\n      if (transaction) {\n        WebsocketService.showMsgAndChangeStatus(transaction.status.split('_').join(' '), 'errorIntense')\n        store.commit('transactionsStore/SET_STATUS', transaction.hash)\n      }\n    }))\n  }\n  /**\n *\n *\n * @param {*} msg\n * @param {*} status\n * @param {*} color\n */\n  static showMsgAndChangeStatus (msg, color, status = null) {\n    // if (status !== null) store.commit('nodeStore/SET_STATUS_NODE', status)\n    store.commit('SHOW_SNACKBAR', {\n      snackbar: true,\n      text: msg,\n      color: color\n    })\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {WebsocketConnection} obj\n   * @memberof TransactionService\n   */\n  static subscribeAllChannels (obj) {\n    this.destroySubscriptions()\n    this.subscribeAggregateBondedAdded(obj)\n    this.subscribeAggregateBondedRemoved(obj)\n    this.subscribeBlockInfo(obj)\n    this.subscribeCosignatureAdded(obj)\n    this.subscribeConfirmed(obj)\n    this.subscribeUnconfirmedAdded(obj)\n    this.subscribeUnconfirmedRemoved(obj)\n    this.subscribeStatus(obj)\n  }\n}\n","import store from '@/store'\nimport Vue from 'vue'\n// import { Subscription } from 'rxjs'\nimport { ApiConnection } from 'tsjs-sirius-suite-wallet-library/dist/model/nodes/blockchain/ApiConnection'\nimport { WebsocketConnection, TypeStatusNode } from 'tsjs-sirius-suite-wallet-library/dist/model/nodes/blockchain/Websocket'\nimport { Address } from 'tsjs-xpx-chain-sdk/dist/src/model/account/Address'\nimport { WebsocketService } from '@/services/blockchain/websocket-service'\nimport Msg from '@/services/messages'\n\nexport class NodeService {\n  static _objApiConnection = null\n  static _objWebsocketConnection = null\n  static statusNodeSubscription = null\n  static connecto = null\n\n  /**\n   * Destroy subscription observable\n   *\n   * @private\n   * @static\n   * @memberof NodeService\n   */\n  static destroySubscription () {\n    if (this.statusNodeSubscription) this.statusNodeSubscription.unsubscribe()\n  }\n\n  /**\n   * Init connection to api and websocket\n   *\n   * @static\n   * @param {string} [node=null]\n   * @memberof NodeService\n   */\n  static connect (node = null) {\n    if (!store.getters['walletStore/currentWallet'].accounts) this.closeConnection()\n    if (store.getters['nodesStoreNew/nodeStatus'] !== TypeStatusNode.NODE_CONNECTING) {\n      this.closeConnection(TypeStatusNode.NODE_CONNECTING)\n      store.commit('nodesStoreNew/SET_CURRENT_NODE', node)\n      this.connectionSocket()\n    }\n  }\n\n  static connectionSocket () {\n    if (!store.getters['walletStore/currentWallet'].accounts) {\n      console.error('Usted no posee una llave pública')\n      return\n    }\n    this.initObjApiConnection()\n    // Instance connection\n    const blockchainNodes = store.getters['nodesStoreNew/nodesList']\n    this.objApiConnection.addNodeToList(blockchainNodes)\n    const node = store.getters['nodesStoreNew/currentNode']\n    this.objApiConnection\n      .selectNode(node)\n      .then(() => {\n        store.commit('nodesStoreNew/SET_DATA_NODE', {\n          uri: this.objApiConnection?.currentNode || '',\n          height: this.objApiConnection.height ? this.objApiConnection.height?.compact() : null,\n          generationHash: this.objApiConnection.generationHash,\n          networkType: this.objApiConnection.networkType\n        })\n\n        this.initObjWebsocketConnection()\n        this.subscribeStatusNode()\n        this.objWebsocketConnection\n          .connect(true)\n          .then(() => {\n            this.objApiConnection.apiInstances()\n            const address = store.getters['walletStore/currentWallet'].accounts.map(x => new Address(x.simpleWallet.address.address, x.simpleWallet.address.networkType))\n            this.objWebsocketConnection.monitorAllChannels(address)\n            WebsocketService.subscribeAllChannels(this.objWebsocketConnection)\n            store.commit('nodesStoreNew/SET_STATUS_NODE', TypeStatusNode.NODE_ACTIVE)\n          })\n          .catch(e => {\n            console.error('Error to connect', e)\n            this.objWebsocketConnection.closeConnectionWs()\n            this.objApiConnection.destroyDataNode()\n          })\n      })\n      .catch(error => console.error('Ha ocurrido un error:', error))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {number} [statusNode=TypeStatusNode.NODE_OFF]\n   * @param  [showMessage=false]\n   * @param {string} [message=null]\n   * @param  [isError=true]\n   * @memberof NodeService\n   */\n  static closeConnection (statusNode = TypeStatusNode.NODE_OFF, showMessage = false, message = null, isError = true) {\n    store.dispatch('nodesStoreNew/closeWebsocket', statusNode)\n    this.destroySubscription()\n    // WebsocketService.destroySubscriptions()\n    // Close websocket connection and destroy data node\n    if (this.objWebsocketConnection !== null && this.objWebsocketConnection !== undefined) {\n      this.objWebsocketConnection.closeConnectionWs()\n      this.objWebsocketConnection.destroyDataNode()\n      this._objWebsocketConnection = null\n    }\n    // Destroy api connection\n    if (this.objApiConnection !== null && this.objApiConnection !== undefined) {\n      this._objApiConnection = null\n    }\n    // showMessage snackbar\n    if (showMessage) {\n      store.commit('SHOW_SNACKBAR', {\n        snackbar: true,\n        text: message,\n        color: isError ? 'errorIntense' : ''\n      })\n    }\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @param {string} node\n   * @memberof NodeService\n   */\n  static deleteNodes (node) {\n    // const filtered = store.getters['nodesStoreNew/nodesList'].filter(x => x.node !== node)\n    // Vue.axios\n    //   .delete(`/api/nodes/delete/${node}`, store.getters['nodesStoreNew/configHttp'])\n    //   .then(() => store.commit('nodesStoreNew/SET_NODES_LIST', filtered))\n    //   .catch(e => console.log('error:', e))\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @returns\n   * @memberof NodeService\n   */\n  static initObjApiConnection () {\n    this._objApiConnection = new ApiConnection()\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @memberof NodeService\n   */\n  static initObjWebsocketConnection () {\n    this._objWebsocketConnection = new WebsocketConnection()\n    // WebsocketConnection.nodesConfig.timeOutNewBlocks = 300\n    // WebsocketConnection.nodesConfig.timeValidateSynchronization = 300\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @returns\n   * @memberof NodeService\n   */\n  static saveNodes (dataNode) {\n    return Vue.axios.post(\n      '/api/nodes/create',\n      {\n        description: dataNode.description,\n        node: dataNode.node,\n        identification_type: dataNode.identificationType\n      },\n      store.getters['nodesStoreNew/configHttp']\n    )\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @memberof NodeService\n   */\n  static subscribeStatusNode () {\n    this.destroySubscription()\n    if (this.objWebsocketConnection) {\n      this.statusNodeSubscription = this.objWebsocketConnection.statusNode.subscribe(status => {\n        store.commit('nodesStoreNew/SET_STATUS_NODE', status)\n        const stuck = status === TypeStatusNode.NODE_STUCK\n        const sync = status === TypeStatusNode.NODE_SYNCHRONIZING\n        const off = status === TypeStatusNode.NODE_OFF\n        if (stuck || sync || off) {\n          this.destroySubscription()\n          if (this.objWebsocketConnection && this.objWebsocketConnection.checkIsOpenConnection()) {\n            if (stuck || sync) {\n              store.commit('SHOW_SNACKBAR', {\n                snackbar: true,\n                text: stuck ? Msg.nodes.error.stuck : Msg.nodes.error.sync,\n                color: 'errorIntense'\n              })\n            }\n\n            this.closeConnection()\n          }\n        }\n      })\n    }\n  }\n\n  /**\n   *\n   *\n   * @static\n   * @returns\n   * @memberof NodeService\n   */\n  static searchCustomNodes () {\n    return Vue.axios.get('/api/nodes/get-all', store.getters['nodesStoreNew/configHttp'])\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @static\n   * @memberof NodeService\n   */\n  static get objApiConnection () {\n    return this._objApiConnection\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @static\n   * @memberof NodeService\n   */\n  static get objWebsocketConnection () {\n    return this._objWebsocketConnection\n  }\n}\n","import Vue from 'vue'\nimport store from '@/store'\nimport {\n  TransactionType\n} from 'tsjs-xpx-chain-sdk/dist/src/model/transaction/TransactionType'\n\nfunction getAllOffer (data, mosaicUpdate = null) {\n  let allOffers = {\n    sell: [],\n    buy: []\n  }\n  let priceBuy = []\n  let priceSell = []\n  const sell = data.items.itemBuy\n  const buy = data.items.itemSell\n  priceBuy = (buy) ? buy.data.map(x => x.price) : []\n  priceSell = (sell) ? sell.data.map(x => x.price) : []\n  if (buy) {\n    allOffers.buy = buy.data\n  }\n  if (sell) {\n    allOffers.sell = sell.data\n  }\n  const priceArray = priceBuy.concat(priceSell)\n  const price = calAverage(priceArray, data.info.mosaicInfo[0].mosaicInfo.properties.divisibility)\n  const pas = {\n    tableData: {\n      text: data.info.text,\n      type: 'sell',\n      averagePrice: price,\n      info: data.info,\n      priceArray: priceArray,\n      twentyFourChange: `${(\n        (Math.floor(Math.random() * 20) + Math.floor(Math.random() * 1000)) /\n        100\n      ).toFixed(2)}`\n    },\n    allOffers: allOffers\n  }\n  const pass = store.getters['offersStore/offerAll']\n  if (!pass.find(x => x.tableData.text === data.info.text)) {\n    // console.debug('PUSH')\n    store.commit('offersStore/PUSH_OFFER_ALL', pas)\n  } else {\n    // console.debug('UPDATE')\n    store.commit('offersStore/UPDATE_OFFER_ALL', pas)\n  }\n  store.commit('offersStore/UPDATE_OFFER_BOOLEAN')\n}\nfunction calAverage (data, divisibility = 1) {\n  let total = 0\n  const amount = Vue.prototype.$generalService.addZerosQuantity(divisibility, 1)\n  data.forEach(element => {\n    const priceUni = amount * element\n    total = total + priceUni\n  })\n  return Vue.prototype.$generalService.amountFormatter(total / data.length)\n}\n// function removeOffer (offer, mosaicFilterUpEvent) {\n//   const dataValue = validateDeleteOffer(offer)\n//   dataValue.forEach(x => {\n//     if (x.deleteV) {\n//       store.commit('offersStore/DELETE_OFFER_ALL', x.mosaicIdHex)\n//     }\n//   })\n// }\n// function validateDeleteOffer (oferts) {\n//   let newArray = []\n//   let arrayTemporal = []\n//   for (var i = 0; i < oferts.length; i++) {\n//     arrayTemporal = newArray.filter(resp => resp['mosaicIdHex'] === oferts[i]['info']['mosaicIdHex'])\n//     if (arrayTemporal.length > 0) {\n//       newArray[newArray.indexOf(arrayTemporal[0])]['validateDelete'].push(oferts[i]['type'])\n//     } else {\n//       newArray.push({\n//         'mosaicIdHex': oferts[i]['info']['mosaicIdHex'],\n//         'validateDelete': [oferts[i]['type']]\n//       })\n//     }\n//   }\n//   return newArray.map(x => {\n//     return {\n//       mosaicIdHex: x.mosaicIdHex,\n//       deleteV: Boolean(x.validateDelete.length === 2)\n//     }\n//   })\n// }\n\n/**\n *\n * @param {*} data\n */\n// function sumAllAmount (data) {\n//   let total = 0\n//   data.forEach(element => {\n//     total = total + element\n//   })\n\n//   return total\n// }\n/**\n *\n * @param {*} data\n */\nfunction filtersAssetsFunc (data) {\n  let valor = []\n  if (JSON.parse(JSON.stringify(data)).length > 0) {\n    valor = data.map(item => {\n      item.text = item.mosaicIdHex\n      if (\n        item.mosaicInfo !== null &&\n        item.mosaicInfo !== undefined &&\n        item.mosaicInfo[0] &&\n        item.mosaicInfo[0].mosaicNames.names.length > 0\n      ) {\n        item.text = item.mosaicInfo[0].mosaicNames.names[0].name\n      }\n      return item\n    })\n  }\n  return valor\n}\nfunction filterAssets (data) {\n  if (data) {\n    data.text = data.mosaicIdHex\n    if (\n      data.mosaicInfo !== null &&\n      data.mosaicInfo !== undefined &&\n      data.mosaicInfo[0] &&\n      data.mosaicInfo[0].mosaicNames.names.length > 0\n    ) {\n      data.text = data.mosaicInfo[0].mosaicNames.names[0].name\n    }\n    return data\n  }\n}\n/**\n *\n * @param {*} data\n */\nasync function validateExpireOffer (data, typeOffer) {\n  try {\n    const tx = await Vue.prototype.$blockchainProvider.getOutgoingTransactions(data.owner).toPromise()\n    const txFilter = filterTxOfferForType(TransactionType.ADD_EXCHANGE_OFFER, tx)\n    const pushTx = filterTxOffer(txFilter, data, typeOffer)\n    const block = store.getters['nodesStoreNew/currentHeight']\n    const offer = findOffer(pushTx, data, typeOffer)\n    const blockHeight = pushTx[0].transactionInfo.height.compact()\n    let dataRet = null\n    for (let index = 0; index < offer.length; index++) {\n      const element = offer[index]\n      const rest = block - blockHeight\n      const expireIn = element.duration.compact() - rest\n      if (rest >= element.duration.compact()) {\n        dataRet = { expire: true, infoExpire: 0 }\n        break\n      } else {\n        dataRet = { expire: false, infoExpire: { expireInitial: expireIn, blockHeight: blockHeight, duration: element.duration.compact() } }\n      }\n    }\n    return dataRet\n  } catch {\n  }\n  return true\n}\n/**\n *\n * @param {*} type\n */\nfunction filterTxOfferForType (type, tx = []) {\n  const txs = tx.filter(x => x.type === type)\n  return txs\n}\n/**\n *\n * @param {*} tx\n * @param {*} txCompare\n */\nfunction filterTxOffer (tx, txCompare, typeOffer) {\n  let pushTx = []\n  for (let x of tx) {\n    let offertTx = x.offers.filter(l =>\n      l.mosaicId.toHex() === txCompare.mosaicId.toHex() &&\n      l.cost.compact() === txCompare.initialCost.compact() &&\n      l.mosaicAmount.compact() === txCompare.initialAmount.compact() &&\n      l.type === typeOffer)\n    if (offertTx.length > 0) {\n      pushTx.push(x)\n    }\n  }\n  return pushTx\n}\n/**\n * TODO\n * @param {*} tx\n * @param {*} txCompare\n */\nfunction findOffer (tx, txCompare, typeOffer) {\n  let pushOffer = []\n  // reduce((a, b) => Math.max(a, b))\n  for (let x of tx) {\n    let offertTx = x.offers.find(l =>\n      l.mosaicId.toHex() === txCompare.mosaicId.toHex() &&\n      l.cost.compact() === txCompare.initialCost.compact() &&\n      l.mosaicAmount.compact() === txCompare.initialAmount.compact() &&\n      l.type === typeOffer)\n    if (offertTx) {\n      pushOffer.push(offertTx)\n    }\n  }\n  return pushOffer\n}\nfunction update (mosaicInfodb) {\n  store.dispatch('socketDbStore/UPDATE_MOSAICS_INFO', mosaicInfodb)\n}\nexport {\n  getAllOffer,\n  filtersAssetsFunc,\n  filterAssets,\n  validateExpireOffer,\n  update\n\n}\n","import Vue from 'vue'\nimport store from '@/store'\nimport {\n  filterMosaics,\n  searchInfoMosaics\n} from '@/services/mosaics-service'\nimport {\n  searchNamespacesFromAccounts\n} from '@/services/namespace-service'\nimport * as CryptoJS from 'crypto-js'\nimport { NodeService } from '@/services/blockchain/node-service'\n/**\n *\n *\n * @param {*} accountInfo\n */\nasync function buildCurrentAccountInfo (accountInfo) {\n  const mosaicsSelect = []\n  if (accountInfo !== undefined && accountInfo !== null) {\n    if (accountInfo.mosaics.length > 0) {\n      const mosaics = await filterMosaics(accountInfo.mosaics.map(n => n.id))\n      if (mosaics.length > 0) {\n        for (const mosaic of mosaics) {\n          const configInput = {\n            prefix: '',\n            thousands: ',',\n            decimal: '.',\n            precision: '0'\n          }\n\n          const currentMosaic = accountInfo.mosaics.find(element => {\n            const mosaicId = Vue.prototype.$blockchainProvider.getMosaicId(mosaic.idMosaic).toHex()\n            return element.id.toHex() === mosaicId\n          })\n\n          let amount = ''\n          let expired = false\n          let nameExpired = ''\n          let balanceValidate = 0\n          if ('mosaicInfo' in mosaic) {\n            amount = Vue.prototype.$generalService.amountFormatter(\n              currentMosaic.amount.compact(),\n              mosaic.mosaicInfo.properties.divisibility\n            )\n            balanceValidate = currentMosaic.amount.compact()\n            const durationMosaic = Vue.prototype.$blockchainProvider.getUint64([\n              mosaic.mosaicInfo['properties']['duration']['lower'],\n              mosaic.mosaicInfo['properties']['duration']['higher']\n            ])\n\n            configInput.precision = mosaic.mosaicInfo['properties']['divisibility']\n            const createdBlock = Vue.prototype.$blockchainProvider.getUint64([\n              mosaic.mosaicInfo.height.lower,\n              mosaic.mosaicInfo.height.higher\n            ])\n            if (durationMosaic.compact() > 0) {\n              if (this.currentBlock >= durationMosaic.compact() + createdBlock.compact()) {\n                expired = true\n                nameExpired = ' - Expired'\n              }\n            }\n          } else {\n            balanceValidate = currentMosaic.amount.compact()\n            amount = Vue.prototype.$generalService.amountFormatter(currentMosaic.amount.compact(), 6)\n            nameExpired = ' - Expired'\n            expired = true\n          }\n          const idMosaic = Vue.prototype.$blockchainProvider.getMosaicId(mosaic.idMosaic).id.toHex()\n          const x = idMosaic !== store.getters.environment.mosaic.id\n          if (x) {\n            const mosaicId = Vue.prototype.$blockchainProvider.getMosaicId(mosaic.idMosaic).toHex()\n            const nameMosaic = mosaic.mosaicNames.names.length > 0 ? mosaic.mosaicNames.names[0].name : mosaicId\n            mosaicsSelect.push({\n              text: `${nameMosaic}${nameExpired} > Balance: ${amount}`,\n              nameMosaic: nameMosaic,\n              mosaic: mosaic.idMosaic,\n              mosaicIdHex: idMosaic,\n              balance: amount,\n              balanceValidate: balanceValidate,\n              expired: false,\n              selected: false,\n              disabled: expired,\n              config: configInput\n            })\n          }\n        }\n      }\n    }\n  }\n\n  store.commit('accountStore/SET_BUILD_CURRENT_ACCOUNT_MOSAIC', mosaicsSelect)\n}\n\n/**\n *\n *\n * @param {*} accounts\n * @returns\n */\nasync function searchAccountsInfo (accounts) {\n  store.dispatch('showLIW', {\n    show: true,\n    text: `Accounts info`,\n    type: 'accountInfo'\n  })\n\n  let counter = 0\n  const mosaicsIds = []\n  const accountsInfo = []\n  const promise = new Promise(async resolve => {\n    accounts.forEach(element => {\n      const address = Vue.prototype.$blockchainProvider.createRawAddress(element.simpleWallet.address['address'])\n      Vue.prototype.$blockchainProvider.getAccountInfo(address).subscribe(\n        async accountInfo => {\n          if (accountInfo) {\n            accountInfo.mosaics.map(n => n.id).forEach(id => {\n              const pushea = mosaicsIds.find(next => next.id.toHex() === id.toHex())\n              if (!pushea) {\n                mosaicsIds.push(id)\n              }\n            })\n\n            const accountInfoBuilded = {\n              name: element.name,\n              accountInfo,\n              multisigInfo: null\n            }\n\n            accountsInfo.push(accountInfoBuilded)\n            setAccountsInfo([accountInfoBuilded], true)\n            counter = counter + 1\n            if (accounts.length === counter) {\n              resolve({\n                mosaicsId: mosaicsIds,\n                accountsInfo\n              })\n            }\n          }\n        },\n        () => {\n          const accountInfoBuilded = {\n            name: element.name,\n            accountInfo: null,\n            multisigInfo: null\n          }\n\n          accountsInfo.push(accountInfoBuilded)\n          setAccountsInfo([accountInfoBuilded], true)\n          counter = counter + 1\n          if (accounts.length === counter) {\n            resolve({\n              mosaicsId: mosaicsIds,\n              accountsInfo\n            })\n          }\n        }\n      )\n    })\n  })\n  return promise\n}\n/**\n *\n *\n * @param {*} data\n * @returns\n */\nfunction createWallet (data) {\n  const existWallet = getWalletByName(data.walletName, data.network)\n  if (existWallet === undefined || existWallet === null) {\n    let walletCreated = null\n    if (data.privateKey) {\n      const prefixAndPvk = Vue.prototype.$blockchainProvider.getPrefixAndPrivateKey(data.privateKey)\n      walletCreated = Vue.prototype.$blockchainProvider.createSimpleWalletFromPrivateKey(\n        data.walletName,\n        data.password,\n        prefixAndPvk.pvk,\n        data.network\n      )\n    } else {\n      walletCreated = Vue.prototype.$blockchainProvider.createSimpleWallet(\n        data.walletName,\n        data.password,\n        data.network\n      )\n    }\n    const decrypted = decrypt(walletCreated, data.password)\n    if (decrypted.privateKey) {\n      const account = Vue.prototype.$blockchainProvider.getAccountFromPrivateKey(\n        decrypted.privateKey,\n        walletCreated.network\n      )\n      const accountBuilded = {\n        default: data.default,\n        firstAccount: data.firstAccount,\n        name: 'Primary',\n        simpleWallet: walletCreated,\n        publicKey: account.publicAccount.publicKey\n      }\n\n      const walletBuilded = {\n        username: data.walletName,\n        accounts: [accountBuilded]\n      }\n\n      const wallets = getWallets()\n      wallets.push(walletBuilded)\n      const pseudonymApp = store.getters.pseudonymApp\n      Vue.prototype.$browserStorage.set(`wallets-${pseudonymApp}`, JSON.stringify(wallets))\n      store.commit('walletStore/SET_CURRENT_WALLET', walletBuilded)\n      return {\n        status: true,\n        data: walletBuilded,\n        pvk: decrypted.privateKey\n      }\n    }\n    return {\n      status: false,\n      msg: 'Error to decrypt wallet'\n    }\n  }\n  return {\n    status: false,\n    msg: 'Wallet name already exists, try another name'\n  }\n}\n/**\n *\n *\n * @param {*} account\n * @param {*} password\n * @returns\n */\nfunction decrypt (account, password) {\n  const common = {\n    password: password\n  }\n\n  const toDecrypt = {\n    algo: 'pass:bip32',\n    encrypted: account.encryptedPrivateKey.encryptedKey,\n    iv: account.encryptedPrivateKey.iv\n  }\n\n  const decrypt = Vue.prototype.$blockchainProvider.decryptPrivateKey(common, toDecrypt)\n  if (decrypt && decrypt.status) {\n    return common\n  }\n\n  store.dispatch('showMSG', {\n    snackbar: true,\n    text: decrypt.msg,\n    color: 'error'\n  })\n\n  return decrypt.status\n}\n/**\n *\n * @param {*} account\n */\nfunction exportAccount (accountValue = null) {\n  const account = {\n    address: accountValue.simpleWallet.address.address,\n    algo: 'pass:bip32',\n    balance: null,\n    brain: true,\n    default: false,\n    encrypted: accountValue.simpleWallet.encryptedPrivateKey.encryptedKey,\n    firstAccount: false,\n    isMultisign: null,\n    iv: accountValue.simpleWallet.encryptedPrivateKey.iv,\n    mosaics: null,\n    name: accountValue.name,\n    network: accountValue.simpleWallet.network,\n    nis1Account: null,\n    publicAccount: Vue.prototype.$blockchainProvider.createPublicAccount(accountValue.publicKey, accountValue.simpleWallet.network)\n\n  }\n\n  const acc = Object.assign({}, account)\n  const accounts = []\n  accounts.push(acc)\n  const wallet = {\n    name: `${store.getters['walletStore/nameCurrentWallet']}_${acc.name}`,\n    accounts\n  }\n  wallet.accounts[0].name = 'Primary_Account'\n  wallet.accounts[0].firstAccount = true\n  wallet.accounts[0].default = true\n  const wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify(wallet))\n  const file = CryptoJS.enc.Base64.stringify(wordArray)\n  // Word array to base64\n  const now = Date.now()\n  const date = new Date(now)\n  const year = date.getFullYear()\n  const month = ((date.getMonth() + 1) < 10) ? `0${(date.getMonth() + 1)}` : date.getMonth() + 1\n  const day = (date.getDate() < 10) ? `0${date.getDate()}` : date.getDate()\n\n  const blob = new Blob([file], { type: '' })\n  const url = window.URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.style.display = 'none'\n  a.href = url\n\n  a.download = `${wallet.name}_${year}-${month}-${day}.wlt`\n  document.body.appendChild(a)\n  a.click()\n  window.URL.revokeObjectURL(url)\n}\n/**\n *\n *\n * @param {*} [wallet=null]\n * @returns\n */\nfunction filterAccountDefault (wallet = null) {\n  if (wallet) {\n    return wallet.accounts.find(x => x.default === true)\n  } else {\n    const currentWallet = store.getters['walletStore/currentWallet']\n    if (currentWallet && currentWallet.accounts.length > 0) {\n      return currentWallet.accounts.find(x => x.default === true)\n    }\n\n    return null\n  }\n}\n\nfunction changeName (oldName, newName) {\n  const wallets = getWallets()\n  wallets.forEach(x => {\n    if (x.username === oldName) {\n      store.commit('walletStore/SET_NAME_CURRENT_WALLET', newName)\n      x.username = newName\n    }\n  })\n  Vue.prototype.$browserStorage.set(`wallets-${store.getters.pseudonymApp}`, JSON.stringify(wallets))\n}\n/**\n *\n *\n * @param {*} name\n * @returns\n */\nfunction getWalletByName (name) {\n  const wallets = getWallets()\n  if (wallets && wallets.length > 0) {\n    return wallets.find(x => x.username === name)\n  }\n  return null\n}\n/**\n *\n *\n * @returns\n */\nfunction getWallets () {\n  const pseudonymApp = store.getters.pseudonymApp\n  if (pseudonymApp !== '') {\n    const wallets = Vue.prototype.$browserStorage.get(`wallets-${pseudonymApp}`)\n    if (!wallets) {\n      Vue.prototype.$browserStorage.set(`wallets-${pseudonymApp}`, [])\n      return []\n    }\n\n    return JSON.parse(wallets)\n  }\n\n  return []\n}\n/**\n *\n *\n * @param {*} wallet\n * @param {*} password\n * @returns\n */\nfunction logIn (wallet, password) {\n  var msg = 'Dear user, the wallet is missing'\n  if (wallet) {\n    const currentAccount = Object.assign({}, wallet.accounts.find(elm => elm.firstAccount === true))\n    if (currentAccount) {\n      if (decrypt(currentAccount.simpleWallet, password)) {\n        const connectionNodes = store.getters.environment.connectionNodes\n        const network = Vue.prototype.$blockchainProvider.filterNetworkTypeFromString(connectionNodes.networkType)\n        if (!wallet.accounts.find(element => element.simpleWallet.network !== network)) {\n          const defaultAccount = filterAccountDefault(wallet)\n          if (defaultAccount) {\n            store.commit('walletStore/SET_CURRENT_WALLET', wallet)\n            store.commit('accountStore/SET_CURRENT_ACCOUNT', defaultAccount)\n            store.commit('mosaicStore/SET_MOSAICS', [])\n            store.commit('socketDbStore/EVENT_UNCHANGED', null)\n            store.commit('socketDbStore/EVENT_INSERTED', null)\n            store.commit('offersStore/SET_OFFER_ALL', [])\n            store.commit('nodesStoreNew/RECONNECT', false)\n\n            // inicializar Nodo\n            // store.dispatch('nodeStore/initNodes', connectionNodes)\n            // console.log('connectionNodes', connectionNodes)\n\n            store.commit('nodesStoreNew/ADD_NODES', connectionNodes, false, { root: true })\n            NodeService.connect()\n            return true\n          }\n        } else {\n          msg = 'Account not allowed for this network'\n        }\n      } else {\n        msg = 'Invalid password'\n      }\n    } else {\n      msg = 'You can not set anything like the current wallet'\n    }\n  }\n\n  store.dispatch('showMSG', {\n    snackbar: true,\n    text: msg,\n    color: 'error'\n  })\n  return false\n}\n\n/**\n *\n *\n * @param {*} accounts\n */\nfunction getAccountsInfo (accounts) {\n  searchNamespacesFromAccounts(accounts)\n  searchAccountsInfo(accounts).then(data => {\n    updateBalance()\n    if (data.mosaicsId && data.mosaicsId.length > 0) {\n      store.dispatch('mosaicStore/GET_MOSAICS_METADATA', data.mosaicsId)\n      searchInfoMosaics(data.mosaicsId)\n    }\n  }).catch(() => { })\n}\n\n/**\n *\n *\n * @param {*} accountsInfo\n * @param {boolean} [pushed=false]\n */\nfunction setAccountsInfo (accountsInfo, pushed = false) {\n  const accountInfoGet = store.getters['accountStore/accountsInfo']\n  let accounts = accountInfoGet && accountInfoGet.length > 0 ? accountInfoGet.slice(0) : []\n  let accountsInfoNext = null\n  if (pushed) {\n    for (const element of accountsInfo) {\n      accounts = accounts.filter(x => x.name !== element.name)\n      accounts.push(element)\n    }\n    accountsInfoNext = accounts\n  } else {\n    accountsInfoNext = accountsInfo\n  }\n\n  store.commit('accountStore/SET_INFO_ACCOUNT', accountsInfoNext)\n  store.dispatch('showLIW', {\n    show: false,\n    text: `Accounts info`,\n    type: null\n  })\n}\nfunction validBalance (ammount) {\n  if (Number(ammount) > store.getters['accountStore/balanceCurrentAccount']) {\n    store.commit('SHOW_SNACKBAR', {\n      snackbar: true,\n      text: 'Insufficient balance',\n      color: 'warning'\n    })\n    return false\n  }\n  return true\n}\n/**\n *\n *\n */\nfunction updateBalance () {\n  const currentAccount = store.getters['accountStore/currentAccount']\n  const accountInfoGet = store.getters['accountStore/accountsInfo']\n  const dataBalance = accountInfoGet.find(next => next.name === currentAccount.name)\n  let balance = 0.0\n  if (dataBalance && dataBalance.accountInfo) {\n    const mosaicsId = store.getters.environment.mosaic.id\n    const x = dataBalance.accountInfo.mosaics.find(next => next.id.toHex() === mosaicsId)\n    if (x) {\n      balance = x.amount.compact()\n    }\n  }\n  store.commit('accountStore/SET_BALANCE_CURRENT_ACCOUNT', balance)\n}\n\nexport {\n  buildCurrentAccountInfo,\n  createWallet,\n  decrypt,\n  exportAccount,\n  getAccountsInfo,\n  getWallets,\n  getWalletByName,\n  changeName,\n  validBalance,\n  logIn\n}\n"],"sourceRoot":""}